%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: new34.dvi
%%CreationDate: Tue Mar  8 12:25:46 2011
%%Pages: 19
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR17 CMR12 CMSY8 CMTI10 CMBX12 CMMI12 CMR8 CMTI12
%%+ CMSY7 CMR10 CMSY10 CMMI8 CMEX10 CMMI6 CMR6 Times-Roman Symbol
%%+ Helvetica
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter -o new34.ps new34.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2011.03.08:1225
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB663529DD50
29E1FF043619C3969739047DCBFBC336B393CB065D21CF1968C731ADD4D51375
6CBAC27AD1F90D3AF7877A375C3E4697C702FFBABCAEF3BF9FFF0514F0D8B8D4
D0A784E6AB1B346FAC133BA719CD914F3DB00BBE1DB62CDA3EED304D3C0CF4CE
4D3844FB9A039B4F810D415DE5BE6A499537046FF1B4308E1970E7209BFF9452
4CC558DD3D61F1A1BB450989EEF806B1EA4F748AB13801067038FC174052E571
0B1724AEDCE7E20A8A2566A65C1ED74A1799E9653DCC76048FBB9BE4D35D6957
8C90E4F27B5763DE2B5DBACF44ABEBA6E6E1CACCCB5D1D783FA668A29A0DC36E
6385C4503EE8A57F495376CD7042D9322AF0C98FD7B3E861964A5A0F6E0DDF86
57A30B84BC1A24E90886169CE60DA850DDD71C96B7AC604E426A2163D793F7DF
C24EEF4CB13A28979067E96BFB2028F9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 106 /j put
dup 107 /k put
dup 108 /l put
readonly def
/FontBBox{11 -250 1241 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C774354F518712BED10630585E99E1C29B15CE632890CBE0B0679C929
DC52BE1CC06D803E00FA77A680748E7B646E739991EA1B21FA34EE520A40F25C
5B7AE6F478E14C03D70621217A067AA9D9944946EA6572F534D65DD1FB2EE020
F017CC5404AE4FD704EF180931473B8F884A963A292A0ACED050989AAF1CE38A
6F96B72C82D874CAF86E7339C76CA76FD9F0103FA82BB19FC11C9E7D77C506C2
195F622FA523CD247CE5447232EC826DB46E7924511660E583BBB6322ECBABC0
FC78A52E8001B0098834CA68804B840F00D792B6E0A7E7F4059B762A32EA5EE9
5DB5BA1D615BBE978734869C568FDAC830ED2BD8BC0319CF324B2F9A06C0912D
2F75DB32EF70A4610BE35A98336802F051C51195FA735E866E707C73321E60A7
853A7D92B5B0B7F616940091D8A1034CA4792C0372292B600CC5DBF9665C5BFE
D86D2906DA35B76E1189E938336D9653CB043648BC788DE6B27151F801B2D369
DDB5C871ACEF3E8D2649364D2BC82327C2889EE04B5B8C60643EF5F49ADC3C4F
B2B2632D1DD405FD9A2F09BE2A04958C4EC384BB6656895A8C65EB6838978D20
FE5BAA4255D1F34318B68D96DBD8A7A55102E88DE04A054F7E5169D892421A1F
810519E242F4AC963EB1B8D8FE528673A8344B8142C111B619A7AF2BE7E8B232
035F8C23AA46BF76CD058D415EBFE4EB99CC7C2F9BB3D59B3BE0FF1C527DD2F9
56C9E7CE8381EECB50CBFE68C0BF744C4F8E5B22511FA59D604CF7D6D41CA5E3
F0C26334C4ACF4988EAD3367B0B50CBA820CE3F1555219F243256CE47E3918DC
D9963D3F13FB08BDD4FEA95B8F9D91EDC6891D2BBEC0FF69E3DEE27ADBC185E4
7A0B82806890EB897EDC140DF7395CD631D8019FEB7CC4A1E99D678B38FF074F
55F754CD71E382D058C602944DE8E772A692FC43146003CBB5EABDCA570494C0
E0FEF6C43000BA0FA57A0B3C0DF28F83FDD2908C1395C1AEE23CBF38763641F4
0F4FAF68900D29C5497CFD32ED568220CF9A47246A8E73721CA0A358304A4831
7F7CCF1AB7452C5700AE55499641E1DB36872D35FD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /parenleftbig put
dup 1 /parenrightbig put
dup 8 /braceleftbig put
dup 9 /bracerightbig put
dup 12 /vextendsingle put
dup 16 /parenleftBig put
dup 17 /parenrightBig put
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 26 /braceleftbigg put
dup 32 /parenleftBigg put
dup 33 /parenrightBigg put
dup 56 /bracelefttp put
dup 58 /braceleftbt put
dup 60 /braceleftmid put
dup 80 /summationtext put
dup 81 /producttext put
dup 88 /summationdisplay put
dup 89 /productdisplay put
dup 90 /integraldisplay put
dup 112 /radicalbig put
dup 113 /radicalBig put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1C82B90E877F6F22B05FEB6F09284F57D12AD920EF0EC265F7E241319
638A390EA33FF5E3F3693021FE71F6F5E106C19AE08938C282AD46A8A148142C
5240B9483751C96DCBD3FBFAE0FFEA22DEEC18B86E404E0D1B211E4292A23290
92DC8D6451604BCC912E71BCA9761CFDDE56A58079433855C29E0428A1F12890
D1F3150E984F0E04F66DE33A3C9FF98E1E7ADD06CC0E739C031A87686C6F813A
3A74D4B708375B97F7196DEF5282AB78B9F93B740AAB15205409B2D545170681
4A66D6B8567D43D1BCC07EF055D7A2B1582C730F2BFFF107A46F07A7CAFDF5A9
4D1EFE039E87DD2FA4D16FEFD1009DA7EF199C3AE2A6089490AE7DCF63C6CB4A
0CD93044846AF911A65078ACE61CDADBB4EC104D85146120C47964102A22CAE5
BD21FF007BF61C9EA51F2CCC8E5391D71B717815864D77A1DB4585728441E149
4A0D92D6C463033AA85D20B6771ACCCDF45DA79D94BC4BECAC523CFDAFFF4BC5
13A5A3A7D73FED862C408C91BCFEEB9CC5991CFD2F0A0653BB25B30E68D573CD
B06E6047CC96857DAE03FA569E5B17057E04A305B4CC419ADD43ABB0E56A794C
20D519EB9E383282E7657828966F804C75411E6C3EE5C3AFCED6C4785E54606C
E4C50692804988101F8B1B3C46BEBED5A0301AEC19F73ADBFFCAD8605AD8A562
297F1A15A35075892F24601689720BF4A4932A6562993C9FE2759904C00DD3F3
91E45E513F1FA2633763166DBE66602897BA8D3BDF20831D7D02B013BCC46258
3ADB0F3FACF39C37174FDFD397AAF6B1FC7F42513F509BD9016EFAE3108E43AB
8CC7117F239D188081474D08EBF0EE9443AEF6AAABEEB24F3A06F4B3ACE4E50A
BAAD66EE4EFEC5ED1F8FBB2E6265E6363ABAB970D94521A6E02918217D95BD12
47BB7F168C6A5032C62A49E66A41006B0F10B1D594EDACF26167BE893A33C31F
2362CB0EB9E402A21F89A7BE58665B8D3CD3BFB1140A2C7906DEA27A08EF74CD
706BBDA56CFE7E5C4C11B8C82EC79AAD86EBC8548A71A32598D61BD707EEE59D
8B3C4B069B7A82B8730FA609B324481A84B95F519D6A84FA95360739D9186213
8CBFB372568A67AB15C6ABCBA5FE35C079DE568F7B9EC592DEEA7A5CDBB15863
D8A5F8A48CFCEF75592E9562318C00EC26FEA41E0E7987B012F30659E929DE78
11795A04DCE84D2FFFFD26DBB6A7B7D895CC1A41AC8F39B3B1B40122D12614C1
3BC8EC144B6C4DEF4145581D4F1AAB18FD2A9BD4C9B34E8648BC81D3FC1A8219
489F6B3CF9DC0AB1DFC52DB18047778743771CE6CA9E4A7D5D5C157CD797CD07
FFF69E84794D81C37262E12605E6016B3FD4A7C445D057836C1F5A39DE50B588
2570DB1DE6258AD25EAD7FFEF2155B69F37D880D84A558541C7462DA8BC36059
810A9297034A2A1362B37284F37DD0C6055C3FA0AF967DBEE170609EBABEED9C
14FF5D3A14F57FC6228C251FA8B30AB0985629C857A2E56E71F63D259D60C6BB
15925626D23B2EBA9C1047C70F2BB7E1D44309E64E789D212605AFAF68335B80
9BCE7602D5481B84D7BEF465F87024BD22091517275FF14D28F19299A90CFBBD
47A309BDD5DD7BDE40895BE0B82C48F3FE432D42680867C2043394257F9A96CA
B92C8351B89CD06D44E889655596C2AC09BFBCF8617DF97F54EE7C7042FA3B7E
96A62096DD84DBD29AE180E9D7637130A568EB5506E85C9CFB2AC5A29D58E0F4
B05BC0D6E7A5E29B3CA9A9CCC581A23EBAB028E87E4D4899A1D15C21F55B3939
012F40529A8E7F517972702F64C275614C0A152D3D1F724D03465B42368287A6
49A084119981C529B0685BEB5A003990F5883051CFA739DDC27F7E7863EFD139
0C0EAC45D5CDDBD02DD864DA763EF2491CEA2A9A5B777BF82FBA35F9E0E433B4
8616819914EE6D1D00FD70DBE6DC8BF1C3E2FD0B76C8C8F52D848A339DD7662E
1B9A1CC4838F3AE51421CDD1F5AE194B55B64E83B5A813679AB2115562C55F11
B89622601F363602F5BFE6B74622FB9D505ACAC9B61CB80383FC15455A66BFFC
63AB8EA38D62E133F83A19EB6EEC6E661AD56056839195067130A4210801DAD1
556003B04D6BEBB8D1E1A9EA1EDC0C166996118DCB36D73336F1F3DB41032C9C
DE73865809501411836922523E4697F5EB6DC88296ED9DF669064D03BD9D8BAD
4BB5942CAFB586051354DCAC5E088057865DEAE7C44A6A3A69E3AF0220FEB6F9
AC088DCD6D96C5CF946713C36A3C622A5A9692E6A8B4D9A91269713DC09FBF2F
77DE32CE8BAA869EFC486B5EC357F2FF900EE9C843D00628B7E15F3776A692A2
990347EA64BEEAD0AF146C8DC81A20C662F739FC370B2F0944B547C66725A836
258BDB7EA09B38A8136060BE1586B0F405E79DFD227A897F20C6DDE6D583E774
9B762D5130810F5DCD37D53956268F44928040E8DC78477F0CD8D9474731BBD3
31946620FA3AF0422E03455065EE35F1A4B6B47791E0E98AA82BCDD88EFC7C0B
C3D1752C8AA7C240627574F6F1248BC6BDC36BE2F53B0017BC7B341E6961EA70
44FC8DFFD8AD531BBDB06E615CF105F81D3E0F1BD67D21A6FEBAC69C50325F2E
3E13982D25AC79B56228B57AD5364CE78D727D22ABE8FC861E6DC0583E732781
AC88AB9DA58D1132BDC6F66D292BE498D627924F2A70075F4703E68D64E1E829
234EBAB9C2F743C82660D1315A81DBEDF01D078219C1BCCDAACDCC4D7FD1C74D
FE4B756F9D1EBBEF2FF14542D54C78DD1CD76303A8CE673F79B199E5452B9DBF
D84DA75C5069CC62ADE33AC805E293044B9F7F7601D8435535DDAD6E3D2C156D
AB23805AEA25143E9D503AA267A4252340C4DD3F4922F2332105F2953BDA31FB
B8178AEBF3DA5A3B9D63EEA6F32301E5E4C876616DA78877463DBEFE82AAA637
1C3882E0431D3FB05CC7CB404944C0901B56DA58F360C1A8946E84C0FBC67D94
5A3692F500892DE575C66D0EAE28488DDBFACEB58A0586EAD10284037AEDE0F3
5A2C78F742C3480FC067E1A880ED105088DC1AE82CD0FB4BA832CC4B25A2AED1
721A61E8361FBD3A167CF354BEAEE4765E5D9169B3B9CE15D99C479D626368DF
EDFC9940BE8768C536ED0E068B6471FC610FDA0B59623A624702362900A0163E
D971D335B8E7EE2A22CFD6BEAA974E6AA4D640F9339DA8F59A052F3F588FC20D
F60B5DF6B016B631999AAD4D8CFF00A372F4F29A7B328B3A8C01DED1B419FD96
D8C11DD5610E049B226882232239CAD972FD3A99C4F18FB3A6EAE517AF983ED4
9921D19DE69D6F9A70ED4E08265DDA7618BFBE3A260B39D59149D241C2DD1F8B
1F90D45CB99EE71D24246C3FDE3567233594338E53D174D7956EA4D413F9C95C
93EDE47B1C4E6F7F866D9B53A253C007874E3D5929957EBA2C401C8A54AD8F11
69112333327BC2FDDE6A43186AB6207AB1451B3DE0E96F51D1A4A32DA0CF2273
A99593289796FA12279A880BBCD888A95FE807802147CE76462297CF101C18A6
AE7C7E2953647953CE1D8712850EA9B6775F4D9068A229B8EE849FCC1A08C32B
4613782762E5774D654A2B3420B92B48DFB9D030266527B6C7786AE5E9DF4934
96C442D671C2BD2F33B13EC1DFA20BFCFBF4147B60582C6CCD706383EE9D462F
29C0EA423F2E976AA1D5BEDACD3C88B3EF3AF2BAB6691C8B85364D35063B04FC
21A59934C9FA1B792EBC99D34FEDC1AEBA01E278494B1E4BECC7E8425956CA80
A511968181A6B0DDF1C510DFF164048AD99FB218ED330B73C972B29A3CD5E184
4511E018AF47FE402272667BB8FAA3F994BEA7B36F1664CE5EAF212D5BA45233
F283A2F031713B14F3636CF8552F6D28D7F57AF36DEFDD17957F800B8F89ACE7
DB33F6A3468276E7633FD159BBAB0970B9216F70AD65A707AA66C24A05049930
27906E1C77D56BE65E66F85A19429329BE518FAC720910D27A1A1D6C749CBE43
990FD2B33946A672D24B8C81F921A2EC54385688CBF101C94E98967FFEDE9337
980436C959A496914A4D136C5D52BF1F059BCD36E51ABED38C502F21879D1092
088FEC3BB44DA88D2B2F5C85E30252AEEADEE4E1991A5ED0FE4DA86AB8C636D0
AD741DAA88214E5A77BD6C90C4A3480745BF1E2F671CADBBE62A2C54E39583C7
65AA3DB0A20966719AB40FBE2CDF3BE14635075239041A9B85C2059C84FF8276
348F11444E43F92D41B7E979DD4D340CC7EDF61C72DA4DFAAE3F70B04492CDFB
A9BD1425F91241924B4F8887D74F83C350E322FD7CF61DB360536813A8776332
2D5872B166BF36DCBB3CE3DEC501E9CB1B833D7575ABDC18A6634369B7081419
9F2E24D41E1262229513ADFA2217D45E1708BF7D81B7E3951AED11235F7C7260
B6857773C7DAE8849C985B40E6CC27482715087E3D4959DB1A3C522CEFE8F331
CF6930AB4058BB2F452FACB0DE2BCC1BBF3FA1E773A1AE30D3EA896BCB7AD6E7
B9C8681B84494B095106D9FAB7DF8F9D7C706F54C7F39E0A6ABF8CEF35658C1D
E2F8CBA8A148F5E51BA9488734E942FECE24101D1EC6002F78DF31DE0F07AD25
AFA4888F5CBE5FD5E600046FB7A57820761349719EB8CA63939579E6E526DCA7
B43FAF1E88FD226CAF1AD3EA29B899C13C7DB2FCF7A4DEB3D408024D6B560059
C28D57954B9A2AE91005CA7BEC548233704D15915399CF894FF58D388906C84C
96315E33D157EF65484439BDB819580C2EB28C8AB903839623DB60CBD649B746
BC31127E9493F4488B73F554EBA897217D2E7B4A85B24227F31D7F32DCB85A4C
6E34F6371F5D008F789A67B6A3DED98A7990DB33C69F18CD3E6AC3498B69100D
064605EFEF7638EE421E2C3E56D51D74E0098A8F8D27F0C63818E4ADA7B2DE50
3E99EAD207ACDE8473FAE65AB580B46F065A2F4F17EE49EA30CEEBA176371AA7
55F697189DE4117117467CEDDF79F4DA7BB150E8690F901A23321195DBEA1244
3B0C207EF6B6DFBB395BCB83A311203445B11000B8302CCAC90E8621D770D861
7256EB34D2480983576CDA1B74E3E8A1F77AEC8F43B4DAEA0B782A7E550BA53E
6F03DB86E37873E4D93AB2AB188096197DBB2A12F52861A8F2A45814C7D355FD
6C7C3B4CE29C1F92EB30
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /theta put
dup 59 /comma put
dup 61 /slash put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 112 /p put
dup 116 /t put
dup 120 /x put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124F45E7F16EEDF0F899CF8026C4E42BBBCAA4BAD268398A723E455D8F
8116D143922BFCAB300A432E61BD7863EED955E71ADEA0BFA6BD938322B5E3EC
C5FC22DD7C76EF5F76969C6500ACBFB15AF419B01F4E39EEFEA9C906E28C55BA
D55BF4D19E95A35EF3E4185822E078AA1B0C4B99CB1557189CE0F407AE0A5D8C
8730D23325EE5A394DB946BD40297D07216EAFF3E7905F6A81C408352DC85840
62BE9640C377A952BB52C4DDC75A958A25D5C52E8C164AA9CAA6F9572DD0E3D5
4265B4CAD523912B84723F8BF4973CCF95F4AD3466C9C8029185F545815F9BC7
8B24C4971FF6C284EC551E7DECE61492D04DB11162B542020BA93D39D2842612
9A09AB433E843DBB402765345338FC0BBCBEA17CD91F3ED9E2F24C9FBE93E787
545F6F81C04DD8D008BBB048D40E00527D46F47E16A11DEA20FBA629A4CB6D92
DCEE08124D348F6931867FE90CE63DEE3659B1F4B4D4A6BD180F617583DCCFB4
31A07603122DBEF1D76E1BB5BD63D34F7C454FD33B0506F73776B1E75A777BA8
998FDB66BDA0BF209450A53AF1344EE39AC4A79782015F78719761E50995E1A7
5B7D8BF346455C386C5B32A1BA5029576AA0894E3073848FB0E7D8CB703716E2
0390AF3415A0B2B0EE6114CD413549477AB750440C49B3D6587BE985708E6D8C
B0101E43DF249EE77983E46C4E11FE6E9B26799DD8BADBD9E41449594C0DCC82
2116894905439525D53CA1C6C88A8024F167D98B49699E33D9FFE7DF086E5E60
B76C75947EC55A356CCF419211B2A57B99E97E117FB772588FD66C130EB67D26
D78441AC50AF755C059F72B3A2C29DA8D525D1AA509ABFCF28B8BC25A9150847
B61FBFF84A82168E0E1EF683BCD7955C1680A7807D7C70960CF09458150D0C7D
B29222F4693833BD9B2727AF0BF89B0C664FAA51B79FA1983F24ED8C2960E333
34D8CA45DA54101259D27D24475F157BE1C89CA8CB63395E09468D8C7CDE8451
94B8A595B1EDD737C0B2756C0E4ABA7BAE21AEFC451EBBAA1E6D882BBC9B3D94
8C142B4131F1D13905A047BB7EE160276E08FEDB4DE636642EA412F509546EEB
B852C80728909780BBACD37F1C4BC68E7984212C9B0CA46D6EDF9AF826048F3A
C0BAAA3F1C11159D303BCB9878E3FAA5D60A39DB8E796DE83E4159EADC536450
625C2795A409FFEB730DD648BA7110C995E1FABE6BD7FF5D749C09256640CFEF
98739D0050CC06BE20B7E263DAFA64D465802282D834B35394F18776A63298A5
DA83C1B9A3C17AFC7FB4E504822699007A3C67920EADB00A0009D7A6A95FBBBC
462D6F826226AF4422A7163B070F0BB01023FCB6E54D38368096D26B4B545048
6C4759A7D02231392E82FCC135ACF4A3A617E67F3EE0E0EA4EE02A63B0F26C27
1165FDC26EF6196C7254B6BDC2D98A81B0B49A3423CE6C3F6038F86AABD003D3
94CDFED18E144D4F924DA2D366EFEF96179318C7397A5D97B5CDF692A9D00D80
A884FC98081E4C13B8D18301CB00A80B054BFD045BD82FF52CCF98C44FED6439
226CC49A3946B7CD7F6B0C99C039E0F984FC59BAC43FB3FD7F70D220EA5901BA
C292DE41C93DD48E53FE0A0F1DECD8092CFF19A85600AFE921FC2A2AD23FA4BC
0DC035418B78E59595338292F3C43B94B8A5CE0D90EA24A1386F83CB8F558562
A3D5C2954D423C4287D719E2081887CEA216B9A9F5ED42564BC27E114C0A9CAA
9E8EBA85FD0920893F418309E0ED614E5491BA5E6A9EBAA2EF2395A4F9F90023
8F1D1AD33D343636264B529C11ECD089A406BCBD99C129B9385F86AEC29CD0A2
5FC237A5023607D059EA7A9CD2EC4C4F6D0B2839CB0B49C4C984ADDD6D224FFA
2337805634FC933067E0EE4DDC9670539EBF3F9B9F8DBA9100033A746584C0D5
63ABA9C9B9139E76B4B5C5AD22B3C4AA6F39C852326563A8954BDC916500250A
C0D6582146FAC37A15954AE7A7BBB743A032F94D5B529F007EAE2039F95B20A5
6CDE08E54677A42F35E69C7E9558794D485C6C55F112E20C1B45EFE7DF3202E7
9FC034B6643D0F329C43CEBE982F66F2CB43D01EE16BE1E9FB0FBC4E71F78040
83BA45ECA29FC7A721AAC6835F287233A1C134BAA59F0EC1B14737DD10EBA820
E99952C6C74BE4776A94A9FB32C71528BBDA9EDC072293CEC1C2B070E53901C9
C1D831D19483B8CAA0B19682C9CAED46E1D7E4CA40C681D6FA7F3EB969E2DD63
FE1B7DCED950895D5ECE1F98882AECA576F53A4B18CA85468751BDB024C93B01
DC3A751E79D5A6E3E65D4939D68252FEE534D483BE6F4A868014D54315B45D0B
10E2FBE104D7B5C4C180E7B64F81F5BC3E7D0B83FDED9016D22E64254E054FAE
FD0C328840A4CD3DF30AC0F8049027C609B95E59B1A0D8A220CBD2CA11CCD1C1
DD3556CEE471E9A7987F66ECF0BC5A787F6D877EABA1A0C3AE359BE9BDABAF6C
348589675936DAF4645B82A30D6540272BB017D533305CA8E1C69527191319F5
08C630DA3582D16AF38A884360D7D40390A0AC74CB8D84E09BC3D5038A5CAF8F
FE2D539D32A9A1038057B1AAEA2AC08FE2798BA5DD686FBCAA8FA9A2151D007B
ADD33435D13EC85D1E8742F63CCCB6385246D5615C8845FB1E8C7B4D8ED8B7EE
2EFCD6DF9BF8DA22ACAA2FE9CADB3D890ED0016D8C89BC83B5732D674EA7245B
9111534AE8D8883280102115D51E365C71F67A802EDCF86902794CD1FA0DF7AA
FD9387FBFE3EBC0DEFE9259C429D13448B105EA643CD8A446C184FC6DF3A9261
15225FB8938A92CF362A20825F28EFCCC4A2E30080F4D6F416F075ECAE703C74
1BE73FAE4BBED3FB919D64A664E8C0B2DA46EF816C97305E3FA53B0F6DC18DC3
ECFB2F1965ADE5B02E44792DF6C9627D3785D864BAEB484CD476CAF876517901
AE26DEBAEA3856DA77CD0068E927CA678B5A1D5F01F1E1BE8094E1C86E15D5D8
9B59DA303CC987FA78B46F8E98DCBCFB642B3C9FB772C5A1567F1AC76E037D58
84DC30887134BBCAF983AB75A4663CA23877C16CFCB4F3D21BF836932B15935B
9A594E2926825FCBE96367123348C3F5DBF4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 15 /bullet put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 33 /arrowright put
dup 49 /infinity put
dup 50 /element put
dup 54 /negationslash put
dup 55 /mapsto put
dup 79 /O put
dup 98 /floorleft put
dup 99 /floorright put
dup 106 /bar put
dup 112 /radical put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57034F1AE2F72595C880BDB91834D0693
0D47BC5206ABD7D3F1356A3CC6CD1111D406758376791CC6BB4424CC2F1003E3
798A105E7A8B7FC00CC024FAD06AA30FA0D8310A1CCC7D10C69D61C2379B0380
35362C37890AD169B52531EB80885E0D54FAB85375A6BAF52AA035E58A9B0C0E
89486A22592CECADC979C63F8FEBD4A119D95A6958FDB6D2416DAD33313A415D
5C777623BDB1804CC43632361F2B29B8E4550D082562ECB08DBAB955F1503E69
1E7B9A25C80D384DBFE0BF408D4B6CF87AA2CFF5FD22546F101EF888F25C9BAA
4BB1D65C2C8EA660D1A4E96FE0CC7987E3FED353756F0B6093DC6086FC11E940
AF662BB3186D7BE6C9632A613C8755E0B21151F6F582B6521A6A4A6BF197A826
5356FBE40E39FACD4923E3093960F3401003119FF17BCA47BA52CBDD45E64E11
6C435E8D1B51E38C76908E515269A0D69DF2B5D01BEA7E9D73753FBCA3CA7919
B011A11D4E09C8F145ECFB98E39E2ED25E39F40C104278D3EB8A5FD3E36A3361
CFF5A8F363D67C359E5C31B129F19E63DE48A119DFD4707B32F2FB7536788A05
8BDC53DD5491BC1C1E95B24C68F0C5C39F1425BEBDAFE423DFCAD29303E2A991
86045EE0440596D9EC0A4FD2ADAAE57208876A8D2FF63B47DFE822B71CD6D7FE
239343911A23E4E49A4AC5669F2EDECE1B13E7DD1B2B18C579B12FCA92324FB9
48F1AD87E3AEDEE2E6C08A93BF4AEE4EA82B3A15B9D0ED650D02BF491180F19C
7AD8F0BA9E64A7B38405EA66558FD54128F0041D876B9C47501F0F2AC01BB10D
AFC0E22759DA17E1E7D67678C8435179187C8CBE5F6AF3A2C803A31E8A93F7D3
7F2D8EB2967807202B51565D897DCBDD8648A3E8AB5B5E568C377772A4D1224F
37F26D73FE2BA30AD4CCCCCA92891AF00B05DC9461E015668567B92975243F59
39820E33F09C6E269468BBE631012EB2D3AA7F3938EB61E6D17B1A6E187CE915
014C6E5F9AD6D6BFF3D6C353144E33F33EF571741955ADB32C16B9737B7FEE10
7C0BEB35B01CB7BB65A4CE3FBE58FF6BDFE833919BC1D637B18604320525355C
034BA8F1C97690E70D7A0B6F503DF5A42D1334B27A7CEB0111D659EAC317C39E
4659A28BFC90B8158B275EA9B2FA2B0E6AA3AE4FB95506618B9C4D232B5E8566
7DBDC98FA71873BD878C77C82EFBAA3B1311A8123706AE0127B90233BD336489
35195A8098BDD74E784015FE2BE830F9EDD1D75FA8FF892F8D62A5BD995F8611
7C5A171EE1C3106220B1F20B6167A5CFB4EFF2A8D767B124B780A36F98199762
104F27302576FA1D5C84960A43B709DC1A654A3FB084EE7F3775A20A1D055F81
D7D02615568CEA42BDD7F376FA044A9464B5FDC802AE6D28764819A2B2100DAB
42059B5994F50B9A0DCC8AE66E45CFE84475145CEA4E0C137F4E4F290CE13270
3FBD9896610D12BB3D4387F2768404BCC54647E0264113A23956A6839EFDC216
FA1C9B6EB5B35A08C079B1D4134836A01E24C0AEEB0D5923D2614410F4A4AA8B
7418CCEFF1816D7AC73332E90946CBDEB7B400F1954BC57863C931E2B099CED1
B6B1FF34B7D0C900F2A6E1F0F2A7D958DDE5E68C2F77F0DA98FAF4F456BCCC77
5BE74E2B2B5870A8E261BB4D05D627D5FC2BD706FCC3F65A7161186DCB67C22E
E0115B4D8CCDE57A45C7276A3A6A138F4E160D62CC2135E3ED3E05D81293A705
A2CF9630970ED2F4563985CE1FD0BE55F521E5C8693EF1620C82678C14877585
54EE4A41A537A0D9183A759E92D7F4F56052DCE445AFED65FCFD6D2CB7B62767
F4F822B4DDBB0A845C5A2BE464D49E913BFDF567FD310DB7FE5A5F7F0419406F
078C6301841277290872EFE90D69B9E90787F72B5F342C8E6017D992BBD28C99
5C9509A7D9BFDB0107E5B32D7E6FCA4E4C69C9009F3AA22CDD726F70401C30A1
8EA812E06423A69D6E97F04D5DB972C1FF46A2C751072C6C039184CAEDC6AB08
74DD60823D4E9F6388D9F52A1E53E287C775231A22A5D4EAD7F0A2ECBE7D2CE2
C549575C30F1B253A4E66BEAE7B15E5FC57FEF7092CEE125A7D26181A05EABC3
B4BC6DA3FE78C01425E386D6012B46A000C23672EF68A3639FA804B45A421E30
A08166B436789E182C8ED275295AE0B018EE4DFE8D53B870F8C06C590308EC08
E2BBD27E04C6EA93C3A4FC913CBF7787707F1D441005BB52028162E186B59E51
A9B801508D0ABB11E708C5F769E5429003977C6E8164B71A60F9F6E6AE4D909C
D3BCFE48E29E225AB39FBFFA4F5679D563B5C6270E9A39F8A53AF0BCD2404901
B8F8786AF63C95BD425BCB74848A0EA80926328EB73A45BB69E568A397F4F796
B71CD10D76D21273A64CB744E0DA1C5315529A0A23EEC12ADEFC26FBE55A4F93
7B24980281A99F72E9616C645638623120DF0B39FE966AC163B2621ED1E928A7
EEA95A6CE39EC7A0BE3167F6CD82A2B7DA1C484A592D892A9AEFC9B5DCC7451A
F5398DE62F5A6A10D31446554A91594B0EA4D11D2740D540B9C53F7D0233320F
6499484B36C1C23FA791B3EB96A0FFD9E3895532A8AE48BA6F1142FFB9EEE1AF
6696CB29D3A9D6407B0505171CE644AB1A1D6E41FED4C37B823ABD10E9244782
ED4DA96B5289A0E0DCF5329DDCC8F1ACAB1197A9C840A1733A62BD4375EBF49D
934E0A26ECAF2DCA011DBA7289A3D7E4E8A2AB5937AB5E02BCE274BB0D3FEDCA
B73F4320B335304E1C0106DEEDD93092F8EB7D063CCE2BC0CF4BED6646452313
C8348E82A9A6E24EFD7AFFF77512196047A59913587528FE6DBC46825B8C9E4E
BC2A23691DC71A57C1E50496B0D1AF0A90883669DDAB3FB29608FE3224557C33
E802DE963EFDB7218685D7FEDE6D6EFF8370740459E58F1FDA12
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 14 /ffi put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 127 /dieresis put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BA8B194E613047BF469C7B4261CACC1DF1648E8A86E926F8702B5ACA
6CEB4E3E85EF23EF5C9C53097F3BF17243B8D4BF0E6B0C5982FD14E4E916D363
E265322DF0823E9990F966A842ED69BADFAC2CD1754FC84C0FF6750D2373F997
362DDA16A0D73B178FB7B67307204AF174AB871C254B8E7CD77058113B702B2C
13F341A972B67756D65C6A9F553C365E20F0BA59F8537C88E0C13F87CEC69C9E
0775F760C4EE10819388782A2CC2E9C000DCBA76E4EFC7B390E50611F3D4F6A9
CE60FC3B742F046E84B4A302F5DB51092CD59F103DEE2910757696C3F131517C
416687E6DF671911BFEFE08D1C5D0B16F9302960E29760EE101C5BDFBA4176A0
260ED46500F88BD388506DA361B0E9FD796196E66B332C82CFFEB7974F9E4428
B82C64ACBDF865B4356C4E2C8E6ED840AD5579B7E08BFA3BD81AB1FAE47901EA
E298F60FFB651A0ADDD1C312033C9D1FD4D0FEE44FAC4B0288339260EA0072DD
0AA168900C492640EB652F4ACF14A4F84878F5EAE4169AF39131695A11CC691C
FCA75087938B15ED1B742607D839E542C965383D5E6718EA6C25512F1532D0D8
545EE6AF47BF5B6F6AD0D9E44465D651D2236F883F1F42ECE339B694B19D2433
25A28A20C7E32793E2DDA8ED6D90F8041298B7A1BEA74CFC168681C020907C2F
D71D8CAE550B9209EF1B3842DFF0ACAF51333BF1843A269AEE0925234C833C62
5EC1167908490C76EFD2528658D47E09C42502FB703876A5DF8DCF4C72AF75C1
818F6A1EE723327B0A4FA1F87B2F2E65AFAF5A8FB0EBB925A39A94D654B38046
9C70F9AA704E1062D98D09AC897D19DF75E3974A65D045E9498D674715EBE7E8
B3317973CC6E570CBCD6F434871FF6E171ABF32B82A137DDED4F16964E6689F0
1A34AE92275F6B9F9D10BCCDC58894A65ACEEFF12D372865AF54653E6195A204
957D175AD32E8DD962EAD10C6F68956D5C8DCA85FE0511DE39F226CB887D06C2
A213B27F4D70ACD4EFFD55C416056E64974585B4DA3A0CD1E4837A8C2477E392
E790C91649CE5394203846518DFFDB5EC6106C4A1540C3FC8C51415C1BA42F09
2234128C1C23B93B7DE52F16C6944645A9E778F2FA04680CD9608F4FF0B2E171
883F3144A8B5CBCCDF80C29C6604319CDEA11AC98A60F3D08B253E1B35F5683F
03CF7C7A4BB51BA147E19D68525879248B7419760020B6F1A044C5D605E3AD89
542587B4CCA3EACAA140FF6487DD4436E28BCA5F8B402389DD6D4FDB75FB0AE3
EBDD01F48AF68A54732AFFF1552A81EFD74FD20C26A2A66C06AEB9CC5D53B5A1
06F63E9DA8AFAB7BFF7FC4AAB65921A56861E45D1651941AC92B81E41513261D
D38D87C8400BB556C2DD51FE2F87C1679410626778883B9126DD260CB13FCA59
080F3EB612C887FE36CEFD9CC5C1BE025E51E44421968B0A7A39FCFDD2A2CB00
8D9B6B6FBC05974BF156210032AC507C929FB24ADEB587312C08843BC6DBEE9C
AC1FAF2BC7F775114439234FCA60A7FBFEAEA8605A86F9BDDB2548C632EFB62D
C2B9717C54F18A1E794E93C6815E0021387B2D7EF1F4E7F56D6527179A994CF6
488914FF32CF5C02DEE4EAC89DCA2A91F0FCEC1C81744CA7A527D85A99E3BB73
D2E51E53AD9902C1A1A22789DB97DA0990338B40DA37514F8945EBEFC04D656E
4620F604D117229BDF8F10699A9346764E088968335CFC0D160132A74E1C8516
528D6445F4DE87EFE592E6356A7A61F03030012BE7FF992ADCA7C6CC54A31833
2E3D4A0BF8A2DF97A6C33F04BFB7F0FCD26563DA1C4428CA92CFC54764F37804
7B1EC08CB5868ABD3453AF73DBDF6B2E26AC1E5AA652A15A930341B6459DF1FE
DEC430AD963F12A3A264758BBA77846DB0372E340AAF234511CA429B61710C97
133FC8E4396FAD92F9D00CAAD330B69E08C5D163466B31A49846C5DE8A090346
E0F7F2E7034979E678BFC7435A5AAEAA9A6720CA6D9754D762FC5D7E5623B087
A311F72C629D85035E0288F2BF3618AAED76E3327FA6208032DA0B27A86D95B2
E4CCF885DBEDBDEF8734DB837A723B97B51269B2AC9D0ED3525C05324731352C
0BCF7FC3C42929F5BE9FD56962A0C750B68803E4CDA0E0C7F63FBD76FBEE9B03
74C8D8400EB29B2E18E041D0C17D6DA4DF737F1DA85D2920E498DD64ACDE3DF4
DDF84FCED66A311ADE94845DEBE3C2C28A66F1E53FE2C38C2B35F9EA430D7578
4E9808FE429635F10F047758987081FD71D674B3C89ED97C5E032D87FFCB5EE7
75A00C778F93E2E63F9FE0FF02901867429D413F281771C9D35E1913F7253B2F
0F9489DCECCE353035BC5415A50EF009D556658492497B8FD66FEE92E13BC3B6
1B8857B825AFA14F1603F87713EFEB227FFEA30E46CE0C86839B894B0D527714
7D943DA53699819833BBB5A99D839F29704DDB983FD69DE4E9FACFB500F0AA58
56B75BAEE29FAB8A5DE359255DC826B7A82C2ECBDB1AA1482CC648AC60765414
986EE60D5135F7A06935971942833D738B05C2745CFE95C704D523DC8D1C34CC
4419005FED068A1E82DEBD9C85459EE38CAB5EB7D609ABFA88B1CEEA977F281F
8C9D2B084A8E241841603873687B616D905E39B0E1D810B93DC1E9C37E02180D
96BF8D2FF4824913B167BE8E3A27622CE978EDF757997CA8AAC43C086D1B6F1B
13F16D053F8CFBD152066F79DAFD2B7E470DF149CFF77F7194447BD21F9E4340
5CB8F85C078C17AE85B0EE87CE57949BD8C5F88A6644578F576C2B75CF7E2410
DD6EDC72B7DC02CC2AB6AD1BCE2AA366AEA5C1E8D7BC055CAA772905C521A83E
9718D357707C9C6BEADC9BD95393FF234A83AE0103CFE57BA3AFEEEB5EC0492A
85A98B09EC7F47FB43BEE0A79A25FA72C8B50EC7303898BABEBAB4C11EFA62F7
DE11047BE8C455C199693BA25D423D3D9EEFCCD3F6A23C572261EF2E2C9D70F6
0BD5BDB0CD40B7A954E0AF996E78C0305FA9DA54599A7ECDAE943377560A1D54
3748B3D24D5F2F2447047E19B43584F486DF99210E42588FD4FFBC0AAFC2BC18
D236939BE592CE8CF6095EAD9230FDB501EDECDE6E7CF3576082B4388D32AAD9
5477E6697B26B79E8475C43F975FA03A2A1F17F0DF69CF6C88F3B41AFFC29324
DFA438487D8504653152102EF7BEE120195B85FCDD015D6D65E375372CE48D1B
980E026775CB608CB7D750DFBF57ACBDC53E0519D2AAC021171FEF8A3AEE2513
1ED5DDB774B9955A133A5DF6F6A6302A28A4ADA9285A51536F922125E990F312
E08211AEC29EA4563D726973A9CDE69874A763FCEC061D2B7D048596732BAF06
A082ED1CEB8AE02EE880269F063C09ECD075B753E263A443F1D599D82DC7D952
B2A47933E75254B5FDAF4E55ECAC9DAEC4BF03BF03795FFD50A242463828E30B
B2D3D902C2D5C55A24D5AC56B4A603D7427C8850A95DABFD824B02F70C7F106B
72F9D691217EF4E4D3D3E9B681989C50ED1811DFD6B1DE44A7B0AE7138C30B72
FA2A99AFDF917FCE7FDE14B5C096B78039D2C3FA616C8244D8625251F94DA25F
07E7390F918AF45346B8C6D1ECB28B16EC67C4607F3EC954DD81341F0498832A
82D2FB1D86B6570092CF67FE9A4913C792A7B8E41AAFBE3E1112F82C2C7B8EDB
5A8243BC5FC97D4849717DEA5AFD33D9498504706985C86D4E35B0FFD17CF3B4
19C0ABA132B46774B750DD76AC17B7A90D71CEC81F58453F43C16DD44FF75B86
D22E101CA000D42EFC42422CBB078AEE1B0C70A5370224DC65017F0A1AF4B534
78C46010BDEC3D53B6C459D5335A44FE37F21B0199CE49D62A0AEFD4E6949985
10C8F9798A789763408D2B4CF62C696CAD50E43526EB63AA9C95E944280C57B5
15B281523A743FF4F33F0C7778A916FAE678F870EF92AE6E5F878FAEC13D1D99
3CC0CBBCD07581AC9AABB9BAEDF8A45E29A14AE8D8FACFDAB0814F1E81F4E4C7
6825CD9D432F8CD1F6A4DB70737D3533440450C3C294377849F436871428FD9B
78BD5170354E7E1E50E0DB5361D39BF0A3F2B46D3DB486A6C6C681C42D6A8F1C
A340898AA2862533CC86515E9CD90EEBFAAE0B1B19DE0E9438543A8049F89CD9
330E60AA7206235583E0858AD6549BAD623D1A1E47A4B9D6857FA4C958937919
40FBB5DE8FE49411584F0144BD3238A08197AAFB56E81C0ED64561F00AE1909C
2E7EC6A39A31FF42169276F9C9871628601572D668AF247818D765661FFC05CE
1D2DAE194F970E537288BD364F922B55FA440F39803CF273B6121A2EA24D2DD1
92394901B0B4668E0D435F111C3FC5DA47C988C42AE9885BF2F7FF626454E297
4A46BD2ECAEB6E1A8780CAA68C6C7A4F87C6D7C9EDEB8CE6DCD34E1D51DDF038
2E08B96F79682B5F23D8B92BA45BB4DC7DBB7F0C73A149125A572323FC2C7462
3C5708E1DD1D7A60EFE4E09038595463687E28E81F4576991211CA0F975E4D6E
5ABFCE0E866C35FFD39D6858519261D083F56DB58D430F6BFBCC0F8BD8DF1D56
54B9578CB7E5246EEBBF7DB5A21505614661A9162CDAC1D60CC7480B458E1C33
076937096544A13A35A4E0585AC7E02B6E70AF19A70A8ACA0848FF2BD1488F80
BE41BCB2D96C3024556E8A3CF6D4427C10A1A430477012200AC06086B7F28944
0125A3BB44E3A0DA217762463ABA019AC0A70E4D36D4C9543C6B45EEB909A4CF
90143BCF8C1F1E32F599B60362CD51ED1C57B425402C6F622E6727E5DFBB6B56
440CE60FEE560D6D00D38024EE50A4E9259BCA8FC1C99480E90B8958C4818461
A65B65FE8C33941CD29349D10379FCF8749F806F769B0A5DC4B429A8E0CE069E
B3FDCC47792372D2651BFF4B8ED9A37EB2E1ACBF1C05DCAB97DDE77499F7F61E
3C52939C4AD22DA2D4ABC35AFDCB05933FF0BBBA2F6481282F936DE024E6265F
DD54BA162BA6AC5CE95D24EF2F2D045A8A45C53A709EFE74D75221C2D4B59C1D
A914704A0FF062A4AED3C644E3B5F09D42EB10C74B627221F737CB4BA6227673
FAE59256EF5FA1FE17F964C26E48CB7E3CDE5923CB5F3D4EB9008DC3BF098C2A
63DFB19EDDE45DDADABD00E28F306B17565C3232931B44B768E90F9F46C77172
8F7154C7C75F81B7F89F02C8480D62DCCD97BAB8A61713469E71D5DC5A610AFE
2AA14613F924827204C429934139318BB8DDFE27D6F9D0AD0BEE7A4654FCC27B
BFF3DC8FADEDA4BE8C214E6BA98A263B60CB394636ED00630B856D257E1CCCFE
2FA8709C57E52390B70BEB36C9E8459D1CCA9B746E960E825B3944AF69BCF3A8
9086414BD2744F04C42670D16147178A0152AD0E3ECE96D49BA189F570AE17C2
7D7C65512BF2295ACEDC1CC65C19102ED15816E0E9DB83AE8C9FDA89E499BB43
A0E52B2DD8B73FC305502993C87264309C994BE0A0E4291CD75BD67498925A2C
CA4CD3E26BCB96B759F4FF19399E68AB58D065ED1D45E72FA4B5F5F1A7A461EE
EE72C0D66C4859D59033EE597315BD200EDA7B5FAAF242B06A67CA97A19DDB0C
F161C6E2AD104D5FB657BA50885F0695A8B0672DE5680AC7AB3B05CCCB3F8D6B
AD715A0CFD8E353A3BD4928A8265755075A6D8D388BA1DAD6BF156C7AED997F4
1A0A566804580EE597939994F62023212865A73BC5B5D82A7DF42A888492720E
1C85B95235B40D1B2E8600184D3BF563006DD27D518F0B18147DA6BD2433A51E
8BC582D252601F6F21A24E83492C352CD6AC1611D16C7D95BA365A05BEA210CB
597A05E8484C275D0AEA9720EC03543F8654B30F9F671B215A8653334550C08A
F6082124D6107C8F63224FA8FA872B1DDDC54F7FDA13531233E8E8709C5A414F
C70CE597DE6D6E86E7959C99C910E1E8E0730F702256E01C1F80CED66913D510
ED6615833A1E9D776F11C674C3D5E0C0D702AE8C4A08A7728C486433046E5224
B9C71B5E7DA3E985958EB7D283F1E5A3A5FCC3D31A66B57BE8D24FC94C0051CC
8DDF30510A382F8EA8E8F0CE28ECFC87DE35095477044DE4A0606B7C5266F050
377A81B07667EB934F1CCA04D1855E0348FF3921ECD7339C2A1FA183F11D03B3
993B5BD57F1462806B0FC6CA01C95CBE419764A4E1F16F32225E968949990E28
854A38E6807B9E8DECAD1BC94BE80FFAFC29725C8277A016F83C2D1A6BE9E2BB
B423249A4B0DC3BB0975311D64835E4844F5BB59E76FC6640CB25B56BCA5B527
0C2AD5ECC37FCAA892CF657F1FE535E7412BCEBFAFD391D4A09B3B6FBCA7645E
1886A77FECBD35FA5D427A79354F4BC1E750C6933830D10F3780E3936BE95858
C379D331F07A57B63106081FF9C88D5617170FDD684C2249974A8EF38126F7B5
2AE1AC45B68BE9C230D1CF243393D89B675D3DA6F5200CDF3FDA44A4B152C23A
9DD9FE7A89FA79397EC9B6A1E8D4997B3B0072729A8970D8D1C22AA7217BCC1C
2B27D9C94C74E29A848F23553D4B225969A8C03F0C705E2C2A07990BC00DBB64
16E54B60361ED29F8A2EF9FC4A04F21A54DD81025627707680D7903583F61A56
AD61AC0B1FD2368AD666AF18F5B57D4F3CC589969425BC7BE285D158E59459B6
228267B06387DD4BBA5718AD96B8AE2B723D2759762D70F70B54523C5EF45A36
063CA2C5C0773402D909896DBA13E4BE977E511FEFAA0204D14FFB212381A5B3
E88C6B659C31F4B48B8588ADC4EFC5B7931E0374C74BFCCFAD21DE0E465AA29E
7A3E912673EFC520116F4F218D75D35AA001894D93FF5592783F4EAED0339E30
2D3D0807B802B4A849C201216AE993CBBD9114CCC6E2CEE3BC90E35DFD47CA1D
D55FD2BD869EFC7DDCA794BA4D996176EF39ABB0868CD03C4714DE2B519193DD
B292797925B9670D3BF3101F9C9E68444E3FF829A8F506685C985A9F6F6D62C1
B3FEDFF919F37D4C479AA9E25165465A6EB30D8AF3064765B63BC6988B5FAA6A
25D6AEE4AC631A11EDA8D8550F7F245DDABFD8DEB645423C0E8E1CDEB86C75FE
778BD3EC55BA6C0AD71586F5192E6B7A3294173D5C327D6BA9AAEE45BA1C51A0
D22CCF3DE22E7043597BEB22B10D9231986FF8A7B10622B295293EA154FC5D3E
82B340AA7B2A714F30B696299D862F675E63939CCDD1EE9B0EC1412C294E906F
1F8AB85765DE8C930466DB3A21007ED0C28F4FC6037855B8F0CD7A46085066BE
539D0EA9D2CF4B5D7E4E546EC22E6AAFF393A636DDDD1E8B033DDF191D9AA367
71079F014DC1C1500AA9E4BBCECFDE9EB49422BBB7C758CBDC90D342F93EF3C5
E55FB9558D8A733E3491A24B6FFB605378B5E5883285EE9F6233554AC32C312C
1AB630E628C0467E82F907A2B1CD9FC25AA9FC91783851C293E8832E6E235DA2
9A54B5F1DE74BBCD8FCFC20F76D8023B6D17384E9F1F9100CA2B1BF4D80A8038
4D9C498A3DDD18C9F24880BFED0F95784E850B2B45E4371F0B00B018A32EC4BC
F1744D33CAFC78B1C9F0918F45178937D30DBE8C7B6E21095915397241446446
0C6DD78115FAF7F7DE65EBA17BFC699795CFEDFD4E8F6B0B4C72D1E71CB259EB
F1FB4EE523A6258C00AE310A8044A8BA272938A87D1124D88940985733071DE5
1F14D7EBE2ED659C663266A82395E9893428082EE99F120DAD8BCFC81FB44ECE
CE835C6B03681E1B18BC1B7FCA85F8FF1600A4F420008A04A3C2BF4B813FE881
2CB97ABA55C930DA1279BCB3DA928E593F1EBB26488023D015E192184D6C131B
88FD7F627F54458F57896FCFB62F5D5F831DCDA1AFF1860FA6BC6A262C7FC900
B1DFE92B276906154308044788F2BFD15146A7D5A8E7FA47AF46BAA076764722
57115FB2867EEF84D7607CDB3F0B9265265DE35E18D7360A07456EFA3CAA7553
8D1D537719E836106F576609CD27534806EA3D5FCD40B890D0F451802417ECCE
61DE06D92F1B2DD99F72E09B10FE7F3EC4CEDF254274670EACDA4C6E4373FCD5
D4FA96D04835C1A88E1D4154E4DC7AE0FE85BADA4DD981DBD87306CB64FF3BFD
C633EFDE60D48BA72BE30E4A02AAA991A605131EB5A144063CDAEB587C743B29
EB5D3F3D3BBB6B280D9E54D29051CC7583B14B137D1D251F0D8BBB526ED5AE27
0B90E1DF9B104353D1FF1CB34B67A2D7E8E9F8825BA499A2DAB187E2FEF68DF9
D16BB6CAEE08F8919449D17E98691C9A4BEDE0A1F0184F14598347345135C970
9E67FDB5C29837B9D44BE62D8EEDBD3682AF238A32A30A3DC891F303C5059C04
E4B85A9E79C04B6AFB68833CFB4D76A7E6268EABE29FADBD5AEF7925403BB9D7
8AD7BFAF8CD18FCE110BEC6FC0E3ED87C81B1B9A9E4519AF7B4D8C7E18AE688F
1970DCDB15A5B2E2206AD83CE87E24763AC97F5B3A66A5C6DD68523DF6E651C0
7A359FCB92C7FD6BB5299F75778830E92C63A7BD2B00057D198213005A103737
6E62C669553240D4EE66B0CD131539560843831756FFA6698A2B221DD611E277
027C854F88A13ED25498D8985ED208FE41D51102373ADE4F3393B8B9656F737A
E0977F59AD8F5C89D47A2AD00498CF1FCC234E1EB47A9966BE7FDFF15F55DFD1
301FAF87B08C3E2F321CFB989D7BA2F8D2DE242747731DE9212BBCD3C45D00CB
516F698C318F65C041178DBBC02D8BDFD08C5F2EA21F504FDB9FC9C28A850CD6
CC6E48E9DDE4CFC903E0EC821D9708EDA31EF6C40AA2D92BD16293284880CEA6
349558D62E63731ACAA065E1E2534D613783E7C5F4D209C98FCEE57270F46D55
9DDB80DB1BF581D409CC778D5DD324E2FD18E3A9F94F523FF285E23C01E0ADA1
545E3BE6E17CF4059A636305C962BBA73E5F14A640651A7E271D635E0B42E81E
0D8C78A10435EC153B6AD7792AD4C9E4690DE61FEA12D8E7F05A6231ABBE094E
6642376CBCF40A0351E24A9E20485FCB97F078FE909E25F7D22F0EAAD5449E0B
D057ED742FC45B20D65C7924BF2C011C659BAAD5C89F4365AD05D77AD811507F
2286EA77B639F78D086BA97458A2AD20941F48FFBE9CAB5E3043188E8420F559
F62972F14C5498E60AC2373149FEB49215DE8F415716C0DC99608DDF924CD084
990063C6DA5111E075418093E5F40550D240A07A3E4308AFF0ED8E05537A5725
81B987CD52B1D63CFE474B8C0A3DFA6B464EC24A0101472AE23A2742680783DF
1655D0C8F01893501D2FDC1BD980020ADF0649ECCB3F8BD7A22B37EAEE9029E8
7DF72846AC68EDECCB4986AECAE5D4803E7C9F2BD8CBCB4E9B3DF6C66B7F6CD2
BF387E84B401A25BFAB10179765CFFFD8162EBF1021DA836D1B6D6C4A8BC5671
3197E79B84477002BC156C5CBF07565DCB4CE4740CFE881C5546241A19D8EBA2
235FCD664FF08D3C9D2A6D891A4EE419DB4EA8A07DD099C1BE90E1B1DF239DB3
C0867DD57D4E935AF50D11A44BBA863DC77F8EE917BCF57AF781BB2FEC0534E5
D07CF8F734B56D39A811CBD2620A8BC615E5FCC6A0E998F486B4D567600A1B10
A1C1436A4D263DCF68FF4C71FB7B05012A6874FE5939688696E35A981F8B4803
CC036F7C70560B438848AE142E8C37E78A00BC5BE99311598D995F5AD06E4037
373AE99B696ED75E9F4E6B417AB136E0EE5E698E6EE54A31E5FF70956801D5C2
B53E657C1F98C1FC2AB5FF62F40313459B93EF12B9DA599C7839A997EDAAFD0F
FA024A928696F885FB7BF4FFB1E6C268253F667073BD1F540AAC49052C82175E
63762D9148D9D44FEBB7D977E80652FAF7938D6973B6FF5E608B809EE14AD776
9CEB76EC2DA7F0442FBF64CDCFF22063C1E3DF3FC9AEF721D0B0C47ACC7D2B31
8656FB8B523C2768D9B653BFC0602849D5B910529A93840BEC03D25A1D992A2B
2C9E8EAA732743FA42053D66BD9E9404C69A51724487C4F2F99DEB00104154AD
32D15A5EFC6EDB3DC8744A4F9249D81234000522322D818E260DA6CDA506AE65
077575CAEE064B8715EBD217F4C3D8258C79947FA5576F41BCE69BA9CEB7FBA1
4A324E0F2C05F62584F95980A1FDBC1741EC8E62C8EC7A4D581E99EC0443E7F3
B6C4B5737EF511C93662EBD6659F7D5778327AAFDED8209309B9E040073ADD19
A8CDF8DB72D4E7FF784E5E8DC3669A30C56062475EC8EC8E53B29FD41BB37A6D
995C8468969F3B8ED8CACB94B379646BE8D0CEB216F8705577D4BA418FD6FABA
60CFA619DB1F76F7267B8CC6F3415F781517750AABDD1B640F6E337117DB081F
19FF989EA6B37EDD55FE60AFE3E0A673CCCA144097AC67802EEECF791A316D0A
FA4D3A9F1A1A9888EDCD96D350007391CCA11C4E9B3FB6E923E4332EE8C2EDE0
BF8C27F7F1D5B867C325876C7E51514AF69635F1C1A970943A40B70C21123F2F
4E2A2CE11648729EB2EED8DC8FC78CAEF9C229DD06AF8B8ADAEF7AA104256D38
976AC8863109D10988BCFEE1463729C28112C3CD9BE75F6043FD7F647C3291BA
2B34D91879ABAF30DABC401EC5EFABC342CAFDAF933496B64A45FB12BEE0E811
555E7771A953F118177764410B43C8D20A5245E8B9DAE11BECD96FBC5AA230F4
32605A504A058A5D41E1DE26548080AB9E4449A40EA8F2AEDBF6FDF4B353D881
290AABB0ACF92198F9412999E643176EB3B6DFFF6871183F4304400436A59570
3014C3F6A338525E7EBCE7F9214E0D00BE16561F461BCC9AD095E08F70283007
6960C6345359B91942F796CD979A4D1A0C31747A44A0F30B45A8C9B1F5E43E7C
25F206092FD13E6A24C01BDF3346E2339AF7E165DE00FDE070E63A76188E4444
DD2503D3496982A5D2B30A9E0872A4329D47EE6FD040EAC619D72A0358B81161
ED4DBDF69CA154CAD987C7B3BBED1D35359EEAAC1E13B47CD3F594B5B22F31CB
BD504C72196C9EC0B950881F106C4B9AEC41CFD0913EA8D7F3F4C9B31E116AB8
245A517144AB36A71A6B4619369DEF2CD92BF82AAF682E6B398C07FB3AEFB9C4
4ED569B01B3EAEB24FF9F388E296B34CEC43464D8FBD7D828B159F00D0975922
35207AF1BE632091B8517F37707BC8A0076042283BED1E07E2CBF1641565FC0C
11885693A664146E2528B8FB1EAB698E140730E9D999D4EEFF59E66E7B37F00F
ED1C25E3D1C009DFB07F800118B2A9F33557CACE6BA91B9ADBDBF64989241328
5BEDA8782E87AD58CCE202D5C3B60D634D3B2A1E40C0B72677F84AF8116D0871
D3F4EFC9DDFC23DFE4DD2699B5F7E5EB55CCD0606AF9D2DD337A3FC96B04C729
1BC60DC2F371FA61F8412D4CA73B8DAED5637999D05B580F6D0D028F3249E4A7
11CD281D273B39B4DCB8B9D496ABA8DA802A385CB67B44F622F3A782BD59BABC
4C89E41B36EB1FB9E23C9299E09853A0D03AA2A9687B02DB6650A606D1EC4130
83C87A39E49110606709791D4A586BA6D14749659633E5D360219487D223FA6A
4FDF442F5AE632B472F0BF54245683BFF1B09C4DD1B05B38A36E13759BE78366
8B42A14BB2685C0B715DF157075C408C49636DA45444BE19F3F43D85B0E77F5D
63381BEF0F114700D400FC3F4ACE936E8EF4DECAD65F041E0A88788A34E8D0E5
52C52376A714241AD42CF00C33C953FAC87D47BD380E9CCFB5CD4F8050241C78
4DB18212606FFFBD5B258D5002D607682DC696B229662D3901811E3AC91067BA
7C34C63FD975F1F4424930CAA6D788567A2ACCBDAE46738EC84FA7C152DCC6EB
CEE9304DB4BEE0766644513FED7226C50C321CAE8C955257A40FC2AAC50C8E9A
5D24E1BDEED3CF3FB3825704DB3EDF854438110CCD3326192805C206168CB565
7D3293DEE788271B2E5E021DB7295015EB403DA36453FD1560F1EBF4D2917FBA
B772512A6817223D602A64A419600DD0395337587FE6FA42903946A2000A71C0
8CCA8442293A8CC3E0FC8233EB3465B3B97E14DB58074654DBD2F2BC6F9D13FF
EFB8E1C69E53AC810574AF1F156BDC54E80FD081FD507CF393B28751504C28AC
3DA47275E9CFA03DBC25A016C64CA2923DD0A7E9807DE8732C2A59B20C9A415B
3A1933FBAAC24129D00DF106D77AAC4C82DEA6C0E540EDD4156E3CE11BD289DE
1DB43600ED5E9AD7D6AB1296C99B0C7D2FC51142BDA7A1CBCABC67336A256949
D0152DE287EAE6C2B18E9363E056A5E7425E8FEAC26342B9218DE744F46E1D27
4E9F29FCD7093F984131A1555F7D3C76EB6A2AC98D1B206918CF3B5B698447B8
B239EDB3B815AAC31969E56D3DF7FEF55555B6AF5995CD452F1F4AF3366872A0
AD9141F61A8DD5F5452A3E23A0187447BA407B31B3B27250302212EA4F86EDDE
B97D7BC08AE37FCFB95C98BB9D27074FA184682FBA62FCC662F29C7DA498AD00
115BEEC6186E765342C1C53C59B1111178ABE1EA430106567B79D6AE577A1785
A50FA3BDEF78C58686EBE80AD0D03B4DCBCA5A5ACC818F8F261F286C4138FB9C
1A61CC466E44E86F00FCE16AAD053B02CAFBE9A5A2D961FF4D08B662F73C2A2B
7F1B5B116E9A42407ECBB5E11A0D58E5AFDA166AC8896A4C2793206C29723A4B
D54632FBD0C6B07654B27595235549F0A135F4F9AF00AC220A19F7C17A5E2838
9B4EE6084270D03A70BC05E0D1CCDBCF7D05FDE1CC90E2426ABB99761F40AECC
A17C631A7A345BCDAF577C3FF5109B41121CF384B2D2EFB533317471D56C6EB2
928C81A91C0EFADF4C7823D26ACFB20FFC4E08C9988BDD70A6C0A06A838DC2E1
924036C1BEB84CF6F322FCB9129BE2D680E8354001CB1D379977AFD60BB5DE92
DD4CEE2B78FC0C671C06B90007BC76634029299F2CFDFFD23C478202034EF20A
5BC6F5AF71FFB07D3AB0FE1B568300805D1592D5CE15DC06FE91CC7F3FC411E1
5C9E0BCDA44561F855C22BBC72C778C85726D3C9C47CE451F539431977559B69
6CC06F882E45530AD762FFA50585CDE5DFC7204C5560235D2EB2D28BA19CFDF7
3C073A48F68E35902FD90E5C7BB0F20DD83DCEC6E01838C46CED13B271DF7B22
9D516E9A84DAEE3567D7637F78000EE172159DD2B598D50BDEEDB35FF4A584FD
1BFA13D34F8C5512B61342C6E11D5C8149208E3E9FCB843A093F189D5DA65AD0
AE7631CC4AEF3B6EBE66602A74B1A091A8C05771040BBF7FC60C2973471C65E5
3EAE633C3A2BC7493F234A39039A7509623448EBF23B94FE789A4DC0ECBBEE17
DB1B4E42BB8D833B919DE9640B5FC6DB967C6FD7D2D5172D07943504D99A97DB
33C4D4704CB4BDD875A344085850AA46FF7186CF8FB4D5E2E2A15631AC8B4305
8B49E2C443BD2AD0D08F510A9551FA7CEC5C801ABC9638B8121AE40FF8376E3A
4D90A8D9FEE7990DA94FDAE7B94C115A846A6ABAC569A0483BEA2A18251BC9BB
AACC0E349CD72AEE2234C180D9966CD92005A0698DD48ACD81E09F8BF6B8C8E7
B3F629EAB630E6D7FAAD6917625C04E8F2A8DFA2E8AC265884F9B993C7027962
D407CA2E3FE049D5B6AC8247C64990E2A3E22F675FDEFDD4DE76FA1FD3FB77BD
A7E180A3F1D532435834AF882E595ED00CB6EED9341E75E2734052112B1FB813
C32CA27C698F2052ECCC841E35DC3013A8E4967909BD9A2DCB6F3AD9D532C5C4
51BE70FBB22FD4259A0BEBDFAB83F289D24EBAD72C8420D073694E00740EB9E7
A12400FF62ADCC3E2B257BA3EB2FFA324858D75AAD743380F5F3320FC3C5043A
7F05732D3288320CC06A4D1B0ECBED75F5C464B2C27CA4E08839E810FCEE8443
44DB3DE7192C4401EB45423BF70702B907AF9505EF4B23665B7158D8937CC64C
CC48152236B7786198FB9CA3B07EAA3A2EDB24714935FFEC298C477162188CAC
8EF4CC9B060EE46CBF3BD913C451502354E16AD79C44A4DF4F3F8E8AD21F486F
4C115597F5F9956DBF1905A8F8A56A919C48FDA0CA5763D7FD88F45AE1C29CBC
A521926B37094A3812F1F93926399ECFFB950FBDAA5DB223D8FD8E7A6E9080C0
5A0E426EBCAC5E3DA76395A291BB1562507D657F958613229E5ACE8D5D356F82
4534BD0676869B52147733158BB1A4FA4ECC312F30A83A5489CD805ED0024F96
63886A64D320B93037F97FEF34CCC45F58CBC8423A3EDDAFB680423A2DF983C2
F677E7CD68014C76400BCA99FC9C06C0E4879FA0B5B58CBEF48FACDCAADBCF13
266C3BC21492CAC2D0E9097096AA8B26443384AB4738C5676ED843BDBEB7B5F1
697A35DA3EFA01148CEDFD2C1BAFBEF016D80AD69D63A00DB3BE9B9A2B1A67E5
D4CF39D811505BCCDD9D2A80F33EDCFF64BE9D0B6A4374AA8290008D9CC557AE
2D496466ABAA208A6884827CA11142B5C56A39C9FA2BCC225AA90D36E58CF926
9034BBB7175988CA5A31CC4731EB76058D1D4E2A4FBAAE888B4F176529B6B9E5
824D7EF77063377B1B256D4872CEE39D64BC5F5744027B508C97201679F5E5CA
7A795EB3A4C4038C8CE3CD96DE21C139DC597B9A0EC185DB1C0C3AD0ABDB1DC6
856A3CBCC42FC41CF92092773BF4A794F13D2ABA30CE545354098CD8BC10211B
3371AD1B648AFC1AEA68984F2393AE36294817C762C3ECF4F7220DA6AB3A8517
4AF9248F725B852B4EA920DDCEBC94AC08564B76A1C3A3DECBCF36F127894DC4
BFF37826C06F79F5333CEB55BA72A6B8B5E460EBC94218263752781927372FAD
39CD4EF5B5BC216B2D1184680C1548AE0D2BA14C869B2BD138E445F8D07BDDA3
FACECE0ED8F4BD42C08FC9EF956BDD1C0AA03472DE5B647CDF98B510011C6D86
A304150F1E584E775F9976B162A63360A812A98C066689968E672187BF3640CC
8130DD04F5DEBDD449C4865AB440E362421102FE03C4E542F9B36D59E4F7E0BC
3B9280A8616B139E4E9B351DA584CF2D81B3F9C263484CE6EAC39F11D0FF268A
744203B649DCEF75CD877FD6E2DA42C5101F385FFE6E06AF24A47FB04B3D4EDF
A8AE057D3AA088DCF7D8FBC6D2EA61851FD7C71FC8E4A2D1C321CF95CB24AB38
5BA34E11B8C82EC9D10CFBDFF307412A218ECF38899DC985D7D03708D1B62FC7
90FBFC6F8ED66C77F2162B167845EE21B70563F90BEF66D3A7DEF450E63DB22C
C7754EB92AEC7031A2921DC9879806BEBD64016895F9AD650AD169351BB26966
FEAED9C4EA6051F1358A80F0174F3FE74A72D98F064A54F3EAFFA8FFBA45B53F
299F208C844DDAFAF7D1F4C6D10A1D59A99AA308FE31012154657EE37AC1693C
664E7AC62091594D0C13822C996DA169084A62CF9BB16A644A9AED8C297BCBB8
63F26FA57F64D74E85EEC62CA85AA2F8D602ADA323905229AE12716E394CB0B3
789AB8D4C73589A13F0C4DAA9DBA2EE2A051E0F2575B380EB0917089586205A7
7B58C12FF372C71CD198D23C015297110295DB61C89E9F430D6099F8728757F5
EDD955CC4478A19251D25F0B28D0F75A51D075A23E741495B18B58551959B091
62683D213B6803EA7504DA112852AAD8429A92F66A16E3C18614165D1200547C
6E265FCE6846732F160DD625C5CA17609DC4392CAEF84CCB85AE34ADD9C38DE0
C711AD792E4D94C2F69106818345F44BBC3FDD8895655EDA4F166058383DF561
3AD5D94FA495BAA434A877A64835AC86556575A3491C6D0B013F8C59167C3868
83757F68DEBC9C25041AA4F8C1F87F52C69E5D5364A9E00478D545C24757A2BE
1A4F4ED24C782B572C691EC1029C6A38DABB5453CFE7A8247A29AC975F1DA61D
0324CED65B558C549A74A8D3ABC7642167CAE72522A45B8BF31E726C200B921B
3373743C19AF9C977CEBEC9941277C67C430DE619D665DB8A88D7D3EFC1244A9
4C988546503218EDF4B05B394B6F467C1F0246A7574856EA4395CB63BE2CBD76
32467B790107AFB7DF3AD843E41E0A164E7C73D0BFA21AE3EC2E40E7832A48E6
BE35E6D3AF0CC23903F82953E5295F3FC99CBB6C639A3B8322BDFDCFB93D698B
6467E86059A5207E213365F1FC56C2F863BD02B7290B56CA73F003F51CC221C6
8AC8EDF6A90DD6FEDA760B0FB89556AC05AAF5A2E14BA5619C87A065BD541C56
F647E9915F2F62C24FB2A6CF04C9A1F1DBB303F47441E10EAD15AF2F65C4855C
116CC33FC214C80354175E36688D1E9A8177CC962EE8E7550EFC703C2AFD64DA
4B3540D0FC4ACD5954730403AF58189FE236B413ADC99D6F3E7393AD000C9F26
551ECEA634014E01A32DD6714DA7DB73D9D448E8058D36AE2BEE70063F61A4E2
BFA27A8B869CE0B0DB908CDF0EEEE6E0A975440C3680FE5C9B1EE080A5D01731
98E58E127B259B53DFF5E6C9B20C44BD4B130C4F085B420FD12538CD0D076684
2E97D01F09832783C316967568AB0CCB3711C7A03B58EA9265ED0EA8D9576120
160061D4EDDEE072095FBC98FA607D829589982D3EF0BADEA8843AC2DFDDFB60
5D354A0C3691D63CE8E3E443492CE424B7E1FC137642CBDFA77E71F56CB7F4ED
60C49593694094842FEA7BEC80E5806253A5BEF9916D3CAE838826C617E30D4A
81F668F3BAA075F6C56833368B8984206CFD0EAACA1F57E9CCFA461E8EBCED98
04FA93E85C602F284AA7C669C64638E878FE09851B45DFD64A5934A7B348E1D4
E223EA4AD634F4B9B3E707BB97507F9657599F6F5FC390239CE2C7A7D5146CE3
DC1491EACE7730B3BA0352D4E8507E1FB838DA48BF60256E6637DCC4C8FE2C8F
E94B4ED2B00CE482BC89FF3A85A5993724DDFF6563D44767F9E874AEEFE88402
FC8E7BA8667044BC25FBB8AEF31F34977E7215B2A919E41FA12A512BE7A33275
B5C6528DBD9304976BBE4F29680DD25669A890B4ADC483ADA2A7CF90375CAED0
CA16A5ABA226335D95E714ADC0927A24E49DC35F84C67CDC01195DDE3FCCBD40
9FF9AD225B93C7C36AD24C466C2A349C5FAFF469416FB855B07B787AAFC704EE
78AB573BD640248338A3CC585E2AB325340665D1F7F7BA664DF0AA1555BED1F0
4D7AB85BAE565781B869738165B0385E7A2DAC81493159FF54C6BA14141FFD9A
70556C7C1FC92C94E143C8F98CC7129F0B00CCF8CE14AA828C3ECBB9475D45D3
E6C849F8BFCB83A354E22390FC7AC1759AC3A8AC940E7843E30D3605AEDD160B
0B2428A3F45D40FF94E92978C5316CCECBB2A1E627C31EE60F83B5481CAF6A3F
E91A8C74A8A78929E556E8B38098A926A8ECD3379671411A990126695CE3C774
E873D915580A42B032C52BF5E1E7DA05CDED2CD064A6A6E6A6F767E922F7DA7A
051D7D3929DB852C3CD9F804D5CF52028C2C0F8C72DEF9FB0B0FAD790B78F019
2763522656D3DE117A66DDC8461B663F957AEA1054E4B5DA30C3A7D3B967B9FE
B695F35D3F2868B206BEF857CCD0F74E0BFF7C8D962501E1B021157373894116
F942F925122DC215922451204153D610B5E40B831A3A210F5D7A1E64C767B462
31FAB87B55E801D0773FC01C2CFF97615E89B84B91C5CC12D0ABFF2C57FDF055
FE6D5A63034D9CB89666BBB2AFBC9ECB1E4D5ED36E458947F785FE512A560C65
A52B218BAFADDB0B03DE819476C40F0F21F5F1ABCD4BEE7FDBFBC78352C0906B
C16AC51A35036F6234EABE694388119C2EF160846EEECC80A917D75BA7954052
F888F69FC75DBBC9C2CCF93ED7BB303DBA18E96D772935B4374F8710BF0CF570
0A19D2A5E8DCE2C9C01616F203C091B5B2EC3B4A290B1A53490DCBD56C915C82
DB2034B8F982B2C021E0A516EC923A59D2E73EBF022D51672B7DAE2655DD7B25
8C3E363F7BE1E49B2964CBAE54059168FC340E4525FF496F8270F5C73364D7F0
97E7D0347CDB0756F016E1BF78A5E8D98571D1EE482919FF737378F3DE3466DE
7E59F4EA686DE087DCB3E4B7EAC800D417A6653923E361301F0D33712324B51C
05D2A843F752DE50A97E38B4F505BC4782329E20C1C43A64DF50148508271BD8
2EC626A74D85C034806AD8E4020DB75796AF34DCAECE7520F2F732FC3E3B433C
248162AE0C88A47B44ECB1A13A24C8D25DDEB8CC7A7787DFF8D76477F1E9ECE8
1EF7C14052E1AE2693148AEE4E2A9EEDC6BC6F672AFF1EC62C8893C826DDA50A
42C62D5EC6D8A74393B28A21EFB72F0862BE6EDE7EA6F5C782C8AFD72DA7EE7E
3CC7F310324BA9227735996AB67358CEC3B2CB54121BE3EE35016C0460708326
8DDD1DB3CA76E07101FD2DE47648A52F78EC8E73BA389E9AEE880CFA23E1D1DF
16F89809CD9D1B236A959BC1301E895A58EB8E0BD03931CE100D96E8082C3B1B
518E27DA0630E971D5712E5DB58529E17BE91621FC26D793954E9F3BC80A95D5
E8EA368EF09179F7AAAEDAF55D5AF4FCF52F109756FA2237ACDE5BDCD6A13D5A
C1AEEC921A2EEE7824B78A18CC55DA6D81EB8338D2EC69D785E30BFA78B52A69
E46B73FA7DDFCD585BDBC7C60D6A780F59EEAFCEF21DEBE8D66D1162C2211073
69F607C3EA4865F3EE757E3F8FE6E45569B6F8B83A9E097C2BC65BA8B3C0EB63
94E8660867561E6C7E349863307478E5DC8D99EADBAB6578EE0EB2BFC0B99A64
18960A0A82B8607E59FEE0627820E1020B259C09999C5EC7C55FD04A385FA784
D041A0CB304658F7B4C94B76516735B7CFEECF165142EA9F9A0008B5C8C9DD39
42563E8FCC43C5524D8681D4195EFD8947D123E6F0E05971E8C40DAED922FC19
CD9F6482543A7804B513E2ECDC9BDCBD322A4DE19AFAE0F2FF8FD28F8D9D5D07
39CFB0CFC1EBB02C3CFE29B62343F0BEA3B97283325A4E34FE78BD53244E3056
B80050A0744D04744A0518762695648F0533722933F8EA3DDB1C7DFAC3595689
F363886D29
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D2841EDA6677731A6ACFEC0BABF1016A
089B2D24F83F8FEECD9B11A16D76AD6AD0934A8604FAE813A1304C950E76FC3E
D0FA05FBAAD62B378AC5316425609AD3143A59FAAEE73055752EBCB7B784017D
10D7B44D7DF4D4793D776B70373076A662D812E29520E2915F7D742EC0650CB3
31FDD62F15E4D5BD0CC19D2E1C7364BCEE117028BAE01859A6AB353634EBC37C
ADDEB23C853A9AA732CFDC99134B91D9CE53E3E9C3ED2CF043D4D2E985346C98
DAD4A3F598E68E5DE482B93DFD55D2705D05D0D4B14B288D72B73C2E1B2543A2
E18C363CD7BF6FB59AB75C0BDB66F9FED7CBFA62042FAD21C7D592FB1D2B3A6C
4643296A34B1C67E11D1D1D988C1415A4AFBD1A32802F05DA5EDE57C6829DBD8
87A5FC79B176DCC55594ED46FE588E7D6BAF902B8231695ABBFDEA733923B39A
0671D24103DC517C1FE0E93FA71E36B9F5327D83C5093C1D3054810933524C4E
FEF311EC5CA6AF0B83316B093DD08F295D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 58 /colon put
dup 70 /F put
dup 71 /G put
dup 75 /K put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EF696E091A9D51510BE264701A41C04FA8125A48F306ACA7A83E35D5BA0C296A
BC594ECA2CB27E92FED95B595C21E5BF0DA724D40761CB377BDE5FB98C9D152D
6C0DC98C4083E9656321BFC445CD6FCC142DEF16E27DD6FAD0B3185223B1A7D6
779F39C70793184F2C3B721FD0AE6D8E063BD47804785DAEA74AF8C75483B713
650616555BE8671E498DBE2D4A4FBBA7A35B81C717B800A3846FDA309436C575
D14C9B010E4C93A534D1B2BF0165D2B2F571C3E8D251E71872A7CF2D4AFEB8B6
AAFCA2A9668B181817DB7E7D6268C2B3145E79F46D51E29235C295619D2056F8
603807500BF5AA17933FC200CC1D7CC531176E0612ECBC287C5A740DF3DE3818
FC48D6E0E2788AB119F039DD218675AF752229D353CABDA741113FD80D3B248B
C9EF661170BC38A1D4200F4154085A042A773BF73FB04FC3A6F56D10720CBE5E
89B4311192C296AB743E65121C2E47581AC9EC596802EA9E0FC0F5661086E2B8
18F0D06D9F579D53764D2A1E74E748CC5D71CB9B8B846F821B1D06B5CCE69CC5
3EDB8405D35CC462827ACC0B2B3B835ABC484001A1A0646E7D686EE6AC6FAA8E
649E242CF21D4A9CC1DF0AC9C9E7CEEBE509F1AEAA1DEE9D834695300A3D7EFF
A4D59D2B263CC91D1FF0F6B866BC3103E4D07E33633F6783D4A429CD381D119B
B66635724B845667954F2E655B2C13718DEAE08191F1463708A16C02C58A0367
D2BFBFCD46AC1ADA2C8607D455F66B286F17F2E12E8BEAB72E555AF451805581
782F4AC8AD7608F8F3310AF42644D9B0BC95F5BB83794C905522014EEB944ABF
155A77FF4B29C7759393FD2EA365A9ACBFFFA5909473256CC8E1BA55D023613E
8ACA8A45D0AA941A15B36248EB03BB7DCCE123A17160117CB4771079478E3E0B
4FDED61B4DC4E9EFDA822FBE47CCA5F9A9A7CA2133AD0A74EE9C356713A22E93
03F392FAC7C30BC135D56DD959C87DB2AFE4DB72370F2EBBEC84AC468AC7880F
6C0DE40F064302DEC35076DEC74860B6AE3EA5DA79EC3B2337AF870BE4539E6C
89617FDA04C0FB26EEDBD72EB05ACC78D880DAE37CB36006EBF2C6DE717D1178
DC7406BA612E3D6690FDE7481BE8C115646191EB8A951835697972052CD3536C
6326F01EF45B4F6D93EB1AD622357BE4F591FD6097406B36CC7EC57196451316
FF165E04A57BA74B35F7F6695FC918E8D10AB3D323F0968DA5AB47072F1BB4FB
A36B469893D99DDC8A1C264704BBBFFFE36663568F96D55E0624487DE8D5AB57
263C19BEE99B80821624B9D00CB43F4AA9599FD667BCE92C820516FDEB0FEA75
14DD0964AC0CA4D0E6F6B9B5DDF4B5AAAF3D4F0786FA8D56784F6418A0C3262E
27A2C6AECEADEE28D58F9A4B14CCFBF908DEB4932639EFC2CD2396109A384168
DE73B21B51B425807529D1998A8376D56F99848DE3A649DD1000C1E1E37A2190
F21D15150AC605691A40EA962D676E39397E4B6B0F70132428378D7F80C54055
4A655D6FD3C25FA3FF1F282EB264C2D7B20637BB6BA77A46C90A463321B5D224
394900840B2C3BC12AD3AEE491596759920E1823F3A705A9D0BF6EE341050E84
7919D9B66C6CD2B13E9C9A3EACEAD54E6565539574FD5449D4D8B8CB31F366D7
7FB5CC2A47B46A5C463680BC0B870D004DC584D832A92CD77863FFC4A915C10D
EF8A895DA9CEE981D98ABF08EF23A7012A72CC62B880A85A24042FBA7C76EE0E
B4E2F7B84944173AA30B188AB393C114E1951D0AE68115C84FA013B0039FD0CB
11D2D232C4F3F1365E61E155065959E19A17EF8E6A5D885DE7C089C528C52A83
86EBAFE2A489143D8F32A6FB5E3B7D9292C15CD9F46646EF508EB0ED71E573CB
5C7A103A192168557E6AEA36009EB72CE7F5C683545B86560DDAA332348AD5EB
C6A555A5F1637F9DEBBBC6A79FCAFDC70F8BCC53920674E475FE97626441FC39
EA24BD1BA053248AA2733B596D6CC0A3F04B6D57DDEDEA02E24D9F9B3615A10F
41F9EF7A02D7D7F4EF47FBE4E89BE331E965A6DE867E0529DC2E405761E73F8E
843403C36BD394F822F9E805BAA25A3BDCA3082195C0D9C4CB1237C6FCACBDA1
4FA2F576BE20E18E3F92A4ABA2D3BBF83360DC4E34A7AA2AE57F4C3C9AD65B44
D95F2520AC84F397AD372F17E132ADD5E625FD3A6CFD8B8A02E1EE3884682225
E7F57CD4AC958D7696AD93909238D01A7A76306ADAC319603324BFDBC00A76DA
67B1CD49A7A5459597B8DF9536E8EC8ABC5A3733FA9F420A6BFEB1B102F60BBC
4145465C08A2367D58C4BA15F76F1004A06F49C373426B8E101258889228F9B8
CCC51BAC74C81114E2125E7A2D0D9798A0E50BE0B634183C5372FC3BF7F18376
6A59C463A568340C04794091105B23E69F4F813F4E8F49BB68F6B11D879BFE91
97D1E2C16BBB3B9AB8AD228DC2448C5EA43F142791B9B0D370AE29BA3C3692D7
401F3DE7F2131C1D0E1785950D55F0124EE864A317D0BAF312050A14300D4F9A
222BCAA5F9DE6C634C7B7DBA57339B3B5782A9CCECAD127D8B0ADCE30D3B619B
670040F734AC27123A415E9E5D122290746698608196A274FAE18C00C4CA3A49
6E9ED054CC75CFF41307D7F5F17C0585E466A5A75A56029B83011C48C759659B
0479FBB8222467407151FE15E88AC6007EC741D913A3AE477DE0DF6AAAAC41C9
C7E851AA5242B734006E64EFB9C70F2B0F383FB724660642048030BF4C5E1DB3
73C5C9E2A5B399CC5839EBB7AF5AC08385E789A011B2250B722C2FFE5A1EFD37
CFB99523B904380F741BE7D00CB01974FE5D6D62D55DEAEB3D50F26B666FD570
07FCB5F0ECB5F591E4CF4F3B7E6092849B7E2C6435D7A6D8B564FA12F007700C
E081880CB344FB38F113A9BC8DD4D49CB69853889BC8D6AB224BCB45A7CCA84B
DF477BA8529E86F199AF7A1574DF56BF704D512D01B7ADF606AF6C19109C4C26
7A35DDD8252C593B22C475B9668AB3B8DFDA898D364215C2BAEF25D5A7DA1CAE
CED8B0B5E0C34B6276623C805F8B040343F954D093A8380FCDE96285255705CA
4B9737F7266CC730CBDA90F6A036DD105DD719D53CCD7AD44094E08F2542272D
A58BC6DDB7A81596E07E8EA4EDEFC15C01BCE5F5F6B6BA529D1150FAA15A89D6
772AC34EA978A1F237A9E99C1AF916F609D3737D1EEC4017B9BD01FC751BDDFE
4A08024A91021357700ED092F99C82E070CD8FE731DC458E730A0D141B6BD20E
D76A1596ACE1723115C22EAC06F7E8B0C1009A49066190B957F4F77141A3629B
374C90D89C24475D6968C96D896241A1021E4986A4BFA262195F13F8C7A96134
E604BA08D0AAF32D6A3EBA1EFDF6485122458F1488667679EB97BC3CC6EF5595
9F93964B1CCE965155DFF9DDF70F2E6D56347BE022B80862F98D5AD3E3FF8118
DD3A18DF2A2A8EB619CCD88E305FB6FAA4EEA501971A56E45932BC4C47962F98
EA2419754A8F640A4F8C5C3D318007CBC6E060E62C60FB6FB62EBA08755C4872
ADA679F0E7B1699C72DAC4ED0B36D5A496370FC47267C2D29E0AE063E54B30A6
4863451C018ABA385858F8C4FBC166F994D6C46FB8D848FAC1A13451654C179E
F6950878BAF5EA0FE8C2400EFAAD86F877EC39EFE06EB1412FE3B1EAC6FEF222
AB1DC007D3021061CEAD18C34338ED8BB7673C2512C30BAF89DC4A1766C9C2A0
2670D2AA003AD359E414E0564933761350A95EDB7080E5F7C03B825426E16480
39ACEF37F44BDD769344D9DBFA9D8D7D37E4CD57517F6BC092A261F2B292C4BE
4C5DF00AE7E3E00CB4D5E2C047B2CEA84B84ACED74E13BFFB3C6D68C7F61E293
DB9081AD4DFAE920FF3123BFF7A080AF94E6A45A4C764DBED4F6A337D885B4EB
AB60BF794E0CF7D90807BA7DF348DB6F41F53C6687AA55BC697E99A6104349A6
37DC06FE7B9387FFCE3E348A9A778E726A2CAC69398C15CAEB12F9623A26BD64
0B585ABA36CDB46C986CCB911333B44BEE775D1269F6741BFBDD11562E675898
CDC18A7EA6BD51B9F7823C1197A638B40D015F82799E5BF5C0577259775EAD5E
BA44743E14D7859B40EE3A36C4AB70BEF8D25CB56620B3C763D2BE00259943F9
78DAA19130716BE7DBCAE101D531958F21E04E2B3E245BAA4C1231DCDA7ED391
4994A40A858979ECCC285F25BF22C80A81CCDF98D26C6A3E7C8873BFBC377336
64A5799ACF21FC3416EC8E69F8D0BAAEC33A3CF4375A3066C32E5945D4EE4926
B7526205EB140561E0B188B5FAF98E3E50A44E1F56A4020540B9B6E2E8B267B5
6DCF434BACCE117702D0C65182C321CD1C0C6DAD2291963B185E3F2E76A12D32
C42CC98B0DC68AEF073FF289A22B1A793C9A54C36CB1E4C6C42B5458D4FA6625
0252D3EFCE123834554402A863331E571A5171CB62350C8FFE5C5E5481199C6E
46A3365B642B431DDD3E6FD58C835538990E9E34652D09C39EE3895CEF4DECA6
B28E142A40BEED532D6430AB1686F388CCFF861C84F3DC75A0A2522234F0EF6C
CAA3ED8BF1A24311694E623AD172D87419446F5D219763AD858F7DF0C09EFE45
81AC4EC23943CBC6C51EE9EF75BD811E6A74742433761B6B0A4093640E0CEB43
279430CCF216253D23DC968151D2C105C8A32C5F7B40D9B4C2BEE2473BDEAC15
0A5454658A91AE02E7F45554F687C056D0BF2DB9B417B4C28F3AB4BF5C13ECE4
EE1ED6BDA5133E8C4CB64EFDD270DDFD373B151375722E579DD123236C418446
0A3507946EFDE76959F3588A793DED76D5BB1669BA13C537390FB2D4D4848BF0
93719D224D5C46065C7A90F81526EB29AF9F4B56DDE7675CF27EBE3EB96F769B
90BAFE134F5A48FD939F7493C9F158CD6A2CFEB3D07C11F653E4639D5325A641
320E00BAE853925DA902D7CB62000775D5042A57C473B96CD92E586231C6B9B2
AF323BC76CC4C94DA0F991AABCDE736FC71F897E6E77BF8E4801D0F712D23752
10FDE4FFABEFFBCAEE99A0704C1F17436CEDF4D30EE600044F836DF8B437CFAE
C5B9B83411A0F3F2586E1628E3F1A2CF94A474439949743BC089B47D4C6B3F65
FF923E76DC0622C3EB80899776AAC182A9A67A22379AB8EDD922BF382BDA5EB5
3ED564B9691859E24F9904CB2DEC8D15E1007F168BB01AA98905ED50974391D2
584FCDC88F5AF992B287667BDB314A95E468F6A368C54731F9625C4BA8C25FAE
FD8C5B427B6F7596B0B283E22D2334A4601BC49823534E9BADE3DAD422037EAD
2B029AFC01DDABCCCAF40D8B58C9AC8D2FED07F64E753934BB3DD52C13BB7BF9
EF7F035DF1DFBA6C877B162B952B23B67FB8831E4DAD725D102F0F712E141881
9BD0999DF8D2C806BD86F79C23CA3F4D3B53C390487ED3E80AF3FCF1237574B5
D4A3D54F2AC59B52A8F9CE15822AE76A3B0EDC01D722A3C165E8589B2557BB69
F228E190869FD6980B2C6D355CFCD417964A3F0B1004BA67961BD38F18A3E22A
FDC4DE44A6775B0E9D5492B0D2C128EAB96D890969E77C29F1EDA30B4FCCEAA7
16811F51D9C58D277A73E2D376FB0913FE4D5B341C65DF8628DAD4615BA20830
6FFAC394DB629C8C9F53EA5810C91A48AC02EC0E97FD822744132739A2B612E5
0C4A98628EE686D55CC16330C752B0C2879E9E19B6CB6F13CD753CEB8079D3FA
9D59AD6D49D60571F94802F75929C118768B26C1DDBBD705EA36B7A342F04C97
6B3E1A4D1CD637FED7C7011F16B9AD5EA2A5A682CD8117396FD276F85D86235C
2A0E9AAFFFB525495BE7CB682793F1FDF50AF4FD0AD1C32954172FDABD47FAE8
59B9D3BE1974974999D6FB98B6242068A20BE86A2092E7142BFAC077B3ACDFF8
D9FBE17FF4C3803971A2DC3986A84C42E6463F73B113E99FE2CECA3E3DF1B760
2071873E4B960AFB1DF3EA361000FD36F799CFFCA5C4E6AA8B2B8ABBB5C86B0C
02C8EBFCC4751C0E6E1E597E958DAAFD654C97C54AF3545C48C43B2E90234905
A4346159DA4987E200538C0FF709170837D8DA55C60298900E2417E279AD0F6E
C0376DDEA944DC45D8CC49076F7E701CB655A063BACF5CB3FEA882E345D338B5
F7A4974994C125098761CCFD039209603F77A1D253CDE2F5AE526B439E2DD6E7
655CA87798B761F0D7ABBF0EBC44682E5893B98EB1357131B3ED6E61050BB8CE
1EA1B7DFC2812ABFB18EDCBB6C4091717A3144F288A390F5330F6E56CA1B12B1
773864164AC53AF655B0639C9A7FE1B24565445C1AB4F2F72A0D96A67CC1F807
50750E5FE9987AC76916A906BFD78A89C224C398991BA7CBC5DBCE62E748701C
2AF688A1C518E20475ED7E109C7D18608273578340BCC35DEE0DB9F41C7CF141
E7D0665E430AE8EDEE98337220EC59196B56259CBDCFA965E941EA0BF9ABF040
2CF5C869E5D4D6B94B6F1D90EDDB4DC2D7F6B08358AD01DE53F2C4846D2AB3C4
CEA341B7DE0F25A01913BE6297100E42B1009F86C43870D83F3959752C78ED2A
A453F64BCB42B6595A39A1C2A19AB75F81A3320D3A9524DF202CE38A415BAE0B
EFBAB9F6B6BD58296F41ECB96EB11D4267923D3363234831E2EB04C31F7FCAE5
A9A1C8961244AC38CBF33E7AE4F1B83EBE807BD54B8A6631BBAB5E9CDB8C0B70
6274277282DF74CD024A4D67067F8259C1C46B67A2273A558A71404AB132BB6B
AF49493073C06CF569D518EA2A2CD29814F97AB30B821D97A28415652A1CB233
EEF656CDB0B242F0466B5E291499ED35129EAC6A21EB668D91C7184529ECFD76
DDE521C1BB6CBD47BC57887C51AAD8033D6F0E5AF42E4A05394044251BFF838A
866FEB06AD9FE7E09EBC81D2B4EB591D1D0301CA31074F0558EB30C704AD460C
5CA7C8F10942700A3B67406A372F1E5592DFC2326714389E403AC2421249D51C
DDA7040870D29F3DB091BBB61FF626A0DCEA550803B91F50D9FED53C9D01F9C2
04F3530123574120769B3E6DC7B1695F9082B02584EFE0C55666631067314D3F
8A2755A78DBC0A8786604FA6A3C94CE70812D58709760A5F8391EFC7733800DB
D15C0366B536B71F65446E82374CBF5ABDE935DEBAAF45801E966CC4827BE16C
0F1B00C59428EDCA693CA8B203EF2C911902B269C7731A495BEE454971B937D2
F3933690E47F5FDA787DA70C6250739A8D5BB726D92B3A2602D634A829E5BBC8
D3CBEC8F2838C5A34AC872A387225ED2FE40A26667F3708283346F0F1546508A
E823292F21E4205F97F693C90338CFE1204FB6D5B810E022CBA4F120EE54243B
E38E3BDDB1584BFB03E8AD45293DF72AA00ADD791F11C62DBB1B03EAAD8D455B
5A1DFE71A5F758655DDC83F6A8B347EC263A578C4B6AE8A0A6AE2CFEA53F6595
E0B23D73C6D8F2535B0C240259B7CA42E31D2A3F71DEF36287C1B4812425A972
3BD2102B979DB7323D58B5467448A3FB7E97DE45274D59A60182B90C25460C40
BF2335D339BB5D08779BDFF251C59DEA54731E99E2817E7C5E4A5CEFF834FDED
A462B929A1B483EFA16D74A0BA4D7B6516624A46645C95592D01F62E4B2E6321
CA626C1358E3E0054E883E1F574EB95B3DAEB63013A78DA4DF947A3DF0B30565
B377C4582AE68AED9DF63B65A638FADB772DD4F2B4AC3CAE9A7BBB46935DBD69
0707909202CA413459DCB7A3F08486A68EE73DEEAE948CBAB752D808CD5D590C
764DA4A27D3DF73470F99E0AEE66C492C3D244EA86C1739DD6BBA73CD1562CB7
CAB19F67399D811A3E17FDFCFA7765BFA46034D401A1CA151AAE3F0C4AB09EDC
0F2B521BCC658D451178A4479DD6C97B8B5F94956739A17750BA842BD15B769B
398B490B56CBBCF22A5AF906CAE0260AB4506DCC4F9EEC97900F0091B7E1104F
20D473862C284048EDEB476390C24E6FC13CCF0048025830BC74D9FCD7D8D6C5
0A0C067CA50F0775940E2ED01E11F9E376D6F2EB5494869A8EEEB884CAC13AA0
8FBA8D550DC4A3F92C339FF7099F9A60179EF82522115F449BB24B2DC70501D5
1375F16E64E534E15D41DE7FB89E67310E99D8EF6C6EA92D72180C161B97C1F4
AAD6A2B5E212B83A484410E828A75A8743342F479A0B9F2AB45A971F93FD650B
04EED9AB786F3FC5C3658B9C331820516640F1F2370F4CE74C287B413FBBC9A3
0DB5A562E265FDAE8B6A985E304E38E2CA25F941A73B28D479E03518A1FC17F2
E931C7587DB69AC81B3E9D6E34ABD2E002762958843491782E51E6C8139ECF29
4632CC4CD0A6DF89DB7CE32847B3A8D14A7ED8CE54B44E759E5BFDC004A5F591
CBE3727C7C17556917E35A121EAABE2CD24BC779F11E122A2AEB14FC1ED2B717
55E74A662CAEFABC58674C140D52FE93D7F72A91576DA7C1721BC97F6564641C
C93086828D051D1F2D6293DC9EB5069F9AF0CD9C793E3D3786858BEDA870FDE9
758CC7E5563C86AF038A0737E7247B15C2A656DA0938D69540D4E4762D3136CE
85ACD7AE1742811BF1D776DF41ED1097229053764FB7BD6991D92AD225AB5CA7
7E507627A889223985A50196A3F2EA3D649095ECA8AEB0E2FEC8611F427F9F8D
429EF825804908A88F3BB64F6F2DE946E7A224ECC1AA85B1268B2DAAA200B6F6
27C37D4CE691EE502A84C608C90B10183D964A7A0E340071DC99E93726CE14FF
02DABFB16FCAF72D63CAA29FA14DF936A3CBA476A74E6A8394C26AC28DABDE65
626AB76628FE4CAF6054C0167D71AA05F0F10BA883A5EEFE8AF90D85521529EC
DAEA77C5DEE6C56E058D2658FE8F7FFADBD6AE9D6F430ECD161DD757DC2D8BBC
62D308DA343833FD0110E87A9B038030828FA18D0EABBEA4B8D3266CAC51A085
14EE8E5B20A4C3DA563D83D687E29C631FDF03D73E2263A6320E37B673CED27B
C001C2AF4FD9EEFE32213D3A38B24E86A482D3218490164064646D1CF7CE6D91
2054405832F5B26EEA7291EE9FBB65F1A550A64D1179C8EAA592209187B6DDA2
D7159831ABD072F4A5EA1A91269A4AB77D1F04ECD5206EF8D63DACA7A2BCEC8D
3902435791B810FE3CC99D4A50A9078D16A11201707DCED6AEE7106FFAE02280
B858CE700252582664783B050E11FDF4C20618F51A0E63DB83A3A70E2FB9CBCC
B0A109C8C21CFDF85F22A54B870393056794C3AA231211557D9AE97EB6191AFA
DF7D4B7E1CE66EF24901A69B26D25A373348CC3D4C1988E9443FCAD5F53DDDA4
ABF138D026CC8AFDABDE00FF79CD60A61740E9A77B5EFBBE3F39CF87500B98C6
192300EB9B67AA19C9AB5F0ABD814D593F3E8E6FA89DF68046FBE578A8EE6985
7BAFC9C0A3BB52C4A6B8D79A8F595B2ADFAF9C1AB426914A1B777BDEB3379828
22A3D177231831C574A57E7B285EEEDD8A30FF3AC4A11EB1CB1ED2FB88516641
2BBC781476D98C24DE61E99AE0C1BF7D1381731771F11069CB3C6B585FBBFEE9
0E32409781796A8E1F12A079789FECDC42BC8FD9578ED9BADA995B4F58D88DDA
FC72BCEA56850AC1B23A4B7AF9D742EB6ACB8BD0DBEE1DFCADE8403D9079371A
09AA1A28EB4A7675B017C018AFE31023C9E219405251F2BAC4A5E3ECC6A8DF20
4A1BA387EE5A6B91FBA785E32A0CB18B5E9A3CC39B61AFE0E5D03535031C8154
41BE818FD39DFB86872E13D00188F9F1F8F9E058765BAFDDF70ABDC6D1DB4DF1
F877A4D29D41A613C4020FC6074C09679C9DAD116CAEDC843E5BBE31F819273B
ACAA67905006D39F4DA366E626F50936ACBE399CBAEC728F69074C3A42180A87
E8ED7B51394BDDB9B0F24DA32EE1A5FC2A59BAF6E3BDEE492285164FDD3E54A6
AC06C8D4F8674136654924A2DB4A2DD58BC0E2BB828DD5CD7050A792BC752879
489905600E0085938DB37CCC1E4B1C9887BB1610E5D4B6B3B1D8081394FE8109
2A54C3E3630B7A2DFBDE4C03B3FAF53CEB9852E2B986A6CC1FC765057AC3765B
300EAB94B92E2719DB036E9EB8C3E5A06E1124AB7ADAA56D55C7A2E569EB1733
3FC625449EC990A854DA15BE8ACACE938870752BA27C4498DDD925915443D8BD
328212D45DA1E48F25E6AE8CC5B3A70F8D79579D15B327338EA3C8D35650A497
78629718853B60F2F700C5BF1C9EA463432015F4A2266ED74E4A71BE63460B1B
B02694FDD3D987C6CA054555AEB6EFBDEDF3394E1344EE0D4E4983DEF0775F9C
2D88B0B7F2283EA37CAB66EA981C4F28984436A0A5ABCA600C2D43DA40162F5D
68CC4BDFCB9C1726A1AE7D88EF300083E62A29016C3CE8FA915964B355DF2F0B
3CE65A8AFFC05C9BA2CA10EAB30C8EA375B3BFE5D9A49C5037DC989B700EABB2
DC64494F57AE54E11929F25D015704D2762E6710FD4A839DBC426B2437CFBA79
DC128D3945FEC62874C244A1FD24713F2E54454C3D6384E417979178F9EA015B
F9F279376588B9788ABF5E48896B216B9209C20A003BBE326F300FB005170911
896EAAFC09456180E3B33767E497DA3E9194E7751EBD710B05B3D5593DC5AA3B
4421DD83AB096A63086DB1E6D074A1A780CAE3E5207068AD2715D1BA63AD4769
47986D163F7FB0FA6883BC41561ED45225735E37CCB79512003B21550757FDF2
C684AB12AC8BFE3C9422599281FC672CC5C46D0246683D561ECD15DB4D9BC66A
EC6A2E22F20140A1E1CDF9BE471F039C8DB07C647955EE9CA17FA8C2B86C7A22
08EE3BD372082E90D1458495C55263396B0BC64D0D17ACC74C39B811C09F487D
FE31F3D457A441E08B86802B687F72276F1CF7BD9476049BC3E3058AC488B099
58211D91CA6A2341EFD2E9E528213C528DED6640973A81186ABCA124F8045763
1B974EFC81ECB7107DE237C412FC01245B4F429039DF29FEF0295DDB26C19FC9
6BA67250F05043980CC6A82E0598FE5FB33BD053C30DAC324403D3C9B715E5CB
531E05B2439EC8D35DC2EDFFC64C170B2DD76C7BBCCCD23942F3379295198FDF
E10E4943AA3125B8948262B37FE6AF3986073175A96364B7A61FB92F365CC061
F68B19598B1E233AFBFCCD297E1499AD0C074E77C721F3B22C4E2465B9F89A47
4DF295B82056BEEFC22DBC09F5319C8924C47D667822D6968D12B09AD7208A5F
60DA16517CD54E55512F65AE8660B8A983BC9AEEEA299AA65989BCC89A035ABD
4D70A1FE4D1F27B1D26FB7CED04304F26B75DF4FDB54BED51107C5B88BB8E7C9
2E321CCB75F68547264831CCA6EE6E435047533BAB30256A6CBAB48980CBEEB1
BC7C1F19A7E76BBA0C4F3B7AC449A3133E22A54AE8D14120066097208EC7EBCE
B45F594B52CC45F09A97E7B0533FC2AA785FE89F814D6730A96966D3CFE02E17
E4655FFB1B9BC617337AC7D5E0BB1DA2CB320E6E359E61F964434573F0C4A499
E7405934B8EBCD934C95BB1D53A96FEBF29A841907B863FEA0768E4168C84AEF
B7A6B872C71C98BEF8CCBAAAF5E0DB83713BF122D5FDF731FF9F44C72BBE574A
1F99705E435CC0B8CC3785FBE18C38FCD8C71D850BE6D94DFA5B8A2B865577C5
FD675300E1FCE653FE9523D591F8C5B86CA7C99FA5FAC7FB67A9078D16F2DB09
8DE0E6D0C6463CECF120CEAD0B432AD065387CD9BAA74E9C37F8EDF2AA858C2A
FA8B5E5A5A17E90836139AEFE0ABC35928253FE855C4D385EDED075B685B2A59
DC84B3D81BBE9F90F04D006EB03D39B36149B13563CFEC9C922CCAF5040B541A
209801123D1FFED29C2B94D01A1DC3C06F8954C96526C52AA88BC5B893431EE9
2DF0801B337FB405D6E630A774C41BA60FF8C530600DCA17C4C84161D27FD309
D8A214DA02EB3DA640AC9B4A2FE5EBF91CD2782FAC0CA5E2E8D91ACF8C7B5FC6
7C4CEC173D44423E3F6F7462F059BCD2B2FBDB534ED10D550025813E525380FF
14714BA4D9284E070829F15196E60E4C2D13B5D5367BD4BA1685BF2F50A81AA3
1157515DD325948A5B4D555F84B42BB7DDD9CF462342368040DE94B20DDCB827
7BA1B089A609851B57648979215C205531A81C25CAE1583CC52FADA550949B8D
A8B67E3CFE9362698A8ACA77D221
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 57 /nine put
dup 61 /equal put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 109 /m put
dup 114 /r put
dup 115 /s put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762B92FA7D60A66
04E8662EA19C35EE545D20CEFBD0D54A3376F1E3C6AF2D9B920EF03EB99A4292
232D8FD41DAF23F238FA891E5804C891B7444D293C7E7CCA0D6C543599655147
3452B29D5F7AE674EAC8ECFB4FE54C6FD2D7226675E4DCAF4A1B83441715A247
E8D3AFDE963B85771FDB9DC67649CE75DCE886439A2B33FA7C0CB95DF9E267B3
F5C0160E986B2C9C1DB89CA303D6A8173CE7155FEED8C4C97BD478DDF5E3A717
E439413C0F649315A6A83D301A1FBC2E9B85D2326E53A083641BB4F597BB70F9
96037C2AD8E63DF797D538300D8A0E1E4B302E41A7049B74D49D0C84CD86EEA5
730680FCBA34E4DA6824587A559ED03A591DA345CF52A99D8EE95FCA78166F49
211EDE8ED783FC6FABE2C9B9A59A6661553807CD86047C09CA51BA5C3565E2AC
CEDC38D19B50F35BA879803EA5FD003156B0E7CC97AD2859FEFBB62C523F9A37
C0121BE416B8567B327546246CF9468FAB94F1586317218046E86FC75E0E0F65
8B7AA40A2D05339427EC7B5A52D661C0E3A1F1640F0AB570F94339E1DFEAACBA
D450EA166C5F3D4DEBBD4D05ADACCABE5671938FD12521BEE34AAF1B06A9F796
31E6F4D0EFBDE63B81614FD1E60C02F694D0A4A2D88F85AA38C6B96D2FAF5CD7
5A28353877FF227866321CE971FB158B74113005387738B06E576E9950BD51CF
CE3EC7689A2BEE307D334B7A325B619557A918E7109E8B815537EB10399B1034
EF303EB1502E84DD035A794541E6E7F16ADA829E26A4589EEAF6076CB7CDC383
6972236EDE83825A8BC287C17760C1AF5E7B7C3316D00A7FF62AFBB790F93259
96D9AB48BCE927D7442A5FFB0C8FFAB7434DFC3CB7CECC863247E7C8314FD9AE
B77ECA510492AF2D13B12B5E941B22576BD630464CA203A45869C95B0621F418
0ED8EAD05884D8F8A6EE41BD8DBD9C179B1A8BF149DBF7A096E7E2998E84A94D
1989D8AB26C520E3CDD7FA1010C99FE0911A5E4DACC17405E9964C734ADBE1C4
F9BE454B52DA5BB1E6D4E17FAFC29C5D23E10FD489DCFC2DBC32F1B9DBD8EEB7
61A36E8CF7412A30B8AC08C7A1A0F5550DC359A3FF66B642B1FE6D01CF76869C
D2B5E39105C6BB362DF42F33CB374459EB2D0886097A5E45374BB136E4EE08BC
7C5C694FEB240D5163A167578AEADDBDBA2D5B925DFC20D5CDD0E488D587BFAC
0A231CEDC017BD476ECB88E2A681A00E0FCBE62EFCF726DEB28E83BDB7222E07
A2842ED4BF126E5DF1941B42B12DEAE369E98D38BC26D8C42F214425A8E93892
A4206A1FC3FA0284C438BCF605268C0B5B1633949CEEB247515423F7B674FD03
CC542394FCD806030A19BE36B965072959864A832D8DA8DF26B97B47692E816D
F8D33D4044268D2710CDC7075E23DA468EAC14B4C4D250AFB42CEBBA7BB0E833
5BF91027BD0878546407C2DB40484228990B97CAC67109516E86F12275038BD5
8B0869C6F9FC5C12A79FD635F8DF47408438B3A691A66959C365ADB94F2D51F4
1AD1D26271DA15D4E31514FB0B231F22ECAAA88A71FE62C397E87AEFCE525FC0
452E2AFB2EA7EFBE17AF1EFCE47489911A909B9A32A7DE1CAC36AF39936821DF
DC075F573B906DA39421B21E77BA5F170A97EF09CBEF760F7504F04ECE36E254
36532B8D07BF40A52AE0A75599B5E243F813FC1B75EA0E9A36A93E5A33F048D7
F5700511C253D35A8BCF642BEDC30C25CA9E83BAD0A7B8F8C02BA71BA90998D5
1B1FF8653597A56ACBC31659F036878D256F28053341454D1DC996524B2DF1E2
5F33E581A5F31D1B920F84FAEE4C45BF6B0D4162ED16CB45C8F666F0AEA585BC
9454D4BA98B458FBFF4796D1A66DA36E8F72C328F3ACAA4F3B7D6CE3687182F7
81765568428881D90132F329B7EF53F376EB2A68E2F13CFE8FBF387C38CF6396
342AE82CD4CB01CF4DF58DDEAA1C460F089B38CBE2EC3E7ADE2A93421900580C
11E4A0FB1E7BC101BA55B6DB1D17F37238ECA23FD98003EB3A3FC17DA34BE945
216914A9AB6640FD230F82D876A1A6DCD5E1DC803D7EA374324DA48E032C10E6
05F2A7B31A326150528924C029FC9F4D2997966407B1F11FC6CC36F24B212BC4
CD13C5A95FD82B563D8CBE5945C16DC52778DDC3842F4E51AAE3108A5F9BF95D
196F3A2BF324C4C767DA4C7B2750CCB314A8B59085C1042A6C4FB8A8C7CE4F62
AA80C2469AE46D5C9BEC4AA3CB360DFB3E25B151D8C515177899EA805A7CDDCC
85B1E906C0866A190D692D162A4A0E5FBBDFA43C5919877B0DCB8AA5D3515A2F
5BFE9930428217DC434F25B67A9F3C00A96AD890D6B928053906742D0DBAFAC3
5823BCE6077A280C6DFBBD99160815547F3AC8B4C7A0706DB55F841931A1F792
F91F866518631C9CC92044361C3F343B48BF0A1DDD9C89A62DB696F892F3349A
9D0BBD315A79568A2646D345A66AF1DA133EE1E6B975F716A406FEA58CB4B9E6
2743CFF06F39E1E35A63EE5671E8D6C979EC89DAA9D49AB2EC1A68C98FFDB9D3
34E7DAB72B64E1D24FCB563B3FC9A7D5E28357C94AF5461C7592CDC8C0B4B1BC
6592965A2E0C77CB7F5C2ADEC6411B118D7DC040F4B13844071AD68232BA5EC1
B52556EB42B39566C710002B9578507E4184095F440484952BBF206DCCDFFA64
8809B23C8D95E10FA38F8DA296FC6B3D298AD987A890DFEB063C0829CF49B445
4E6F23933F008D151520EC524320749429AAE39CD8AED74967D9910FFE34CDF3
9C7F4F9A930A8A7477038F169F02CCD07F7F065D25B947EF49E2FD62671F1297
37F0B9F95973B58A1C957C02005BB1506EA31564CC68902C1B385A9F13E0F58B
4D898C1725C943A84BAE3F3DED3D637A5D9A4CE9795B767295B95218CFC10C46
5A750C527A33866A2A25F3DEEA54DE652811757AA6701011BC9A8A1B90152B39
966645AAEB2E876561AEFB8A6286EE6E52098B42088B9691D6207AB052C73CC5
BDDC16A858347DD6EAA95B05425B7AB90BE7B5FDB9512C63676E34E193EC00BD
3453E9A6DBF01867B389295C8816366799A823E1E33AA531A69BA1F445E7FDBE
D6483FD20751D49CBF25AEF367977AFC6FA9CC4DE3EEB1A329B635A747509A99
C0ED27A582112F87C8201C64AA5F34FCC2C76BC0956F745E52CE0BC84C9EE27B
382950BA3AB6EB9C4D8B1890503BA7FA2FAB2F1CBFD64CA65E8A490F7A12D002
7EEE05CBD561FCFE485EF53C3D9AD4FD8BBC736642225A5AF897E9B340303F0E
2F7C2EECF1EA672FB1A66B8B7C358F1343723D8B6A722FFFF2DA1E9F1FAE620F
0E939FFE387E1BD8ECC0E1C671962FDD52B652C859F6C45F119A5EE828B5CAAA
1F3AC4E0E97E6A168CC487A926294E1E39391A557FDBC84DC62694187FE8D666
B654FB66E055CD53E96E026206235D2BB32B5AB70D6BC2E3A93A0D69A3F57A82
B1E979DBAB227A61F0FB971174680BF68DC052AF8DBCF964A4544CC8C3EE11E5
463808465839047A5DF43D61FD6CF4B32B8CE4AD2E0128EAFEA4BEFF00290CCF
8C3F9167DEF6BCA43D77154E8AD0CEBF0EF67DFCCA16AD1BC15DA01B32D5508B
7E813C9CD3284D7F69CB63DC478EF087A7CC3269224B5D51E338959908218CCD
09A2CADDAFB44E758BA485AC87B32FEF7425A0C3EA43243C8921303ACC6FB82A
DF14B07EB06A3A16BD3520D575884679ACEF87B55E66CAAA42571BBFD53DBAA2
68029730841AD1E34A9924538D1C64143AC759BDC731C324142907BFE371C1A9
50416E3D08A1AEE5925F37CF79C722AC751B61A4067A69706737985AAD2DB91C
3F211F16EB2F588D3BEDEAC2728919F1EB3EDDFFE99FCC0AB7BCC0F7C4A49A1F
6EB8CDC6C300F0569ACBBED7347BCA55433BD4D232966AEAB6E02D2BAFF394C4
AE3C769699F6C694A675B0C1010207C0A2603D8FD7FA6FA4B9E00FE9E68EC0FF
74F5050616CDE40BDA732270A4CB1AA62C2F08297CE7FB192EA56669079501D0
DA0E1C53C301B8A43E26885A501D74A729EC54D1CDF48350E9BA6177D4ECCBEF
2BD5A5B30BAF73DD445A882FA106EF8F6AFCDF8D9146CE94334BCD8F15743F39
04E8A997A4E9BEC5C5FF75285128534BCFAF0DA2EE0AA6BA41D641BB16CDBDA2
32295E31359EA7AB35DCFAB7DF2A7971D7B0E7B3F8891E246DF00ED13BEB7D16
FD13BCE957751CBD7BCF5FCEC99C9E9898F879EBD6864598797B96EFF42D1A7E
2C8FC52859AB1E33DD8E9F8A0B92E4D76BF528CCA214F3C6977742DE9369525D
B91BCC02621BB1929C709762E831618F3019CAC861964DEB1871D023D0400561
F3215502CB2387D1B70B80A03D4574B84BBB17EAB1CC045A742A54639D9CC784
974A84E599154DEE0BE32C951705A3D838E89B31D05C0AD771AD8BFCC5F026DC
B78B373DA63FE7C58E9D25B26E1EB04A6823CAC4B242D4F926C27AC90B864C1E
B1105BDA03DD9509265F6B7EDD195DE32AD7B6C8A1D810C0D4DD71C336319D28
13BDCA8E8D772207BFDFD5342CCFF959125C037AE4D653F1C61E1A80147F6F1F
B5B4F049EC0853EAAF196AF8F0EA6E16FAA9FEA6F75E383D4F1781AE2B576FBA
A87581239F0326D072E85C9F00508E3FAA176A7347C369E8B42FEDB9FE4A9E34

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 14 /delta put
dup 18 /theta put
dup 25 /pi put
dup 27 /sigma put
dup 31 /chi put
dup 34 /epsilon put
dup 39 /phi1 put
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 62 /greater put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 71 /G put
dup 72 /H put
dup 80 /P put
dup 88 /X put
dup 89 /Y put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 116 /t put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0A265B570BA294792DD2FC75CE2C83DCC225B902551DBD11E687EAC6E85D2B
02C28359A40AE66A6A6A8862CB17815B41E280313F0EFAA9981755611F7F683D
35603984D60BB0C772054355A97A5E03C689E23B04DA79080CE4579CC90EF38B
1A64CDD92B907AE83192C3C46C5FC40BB412F6656DC6349E6D29B5936DCE94CB
98E3B465FFF7574095F57BB3750F1A55F20456933FCA64CC1B060E260782BEF6
721D38BF65DF1F1DA5439DBC802B4A9D803BD635C05B9ACA4D26C28195A1F4C4
CC623B30B076D4861E89B93E2CF26F6DF07199C03BA5466FA3EFBD7F77EFE068
E55B7186855063934C5716EDC3F5056BDA963B6B976391313D14BAE5918E288F
07FBE3A7EAAFCA02EAE823D4B4B28F24BC26C20FBBF37C15D614F15EA385809B
8BB8DCC51ABAF46DEA6F60A2D6967354E4AE0005FC446BB060388CE872103C45
085EEB411E72AA4240AC015DF7BC82A2EEE98739699196E77927406DE515EFCB
9BD91A7D74A76DAE7C2F389F7870B9B4200D72175BCC804D69A043327A588B8C
5B1CD693757C3A5B86E2A64E8BE27798576A28A21ED866FA75CD39AD747A1FE9
4C8FA43925639BEF4B041AD7722616B477CCFE4F4ACD5F0E4927B5D413A21080
DCFDFED080F13E5F04E3B8132C97AEC6465FCDE04CE4556E627DDAF94F027848
77B7942BD582D2790DD4CADF2358635993C69113D9FCD0CD3CD5613DAFF026D9
E157E657F339E0BFE3DF69B3BDFEDA4AA2F15003996D966AE59294FBFBE75603
A0A117C1419DF929D29EAF4490A018EA2CBABFC85245257BDDF9FE6B340A2B44
33D70D2654555F8CA81A98F8AAE94F95E7F5A0D4C3BD9B5E21F2721672277555
498E0273B43B1142DFB5711B128EE29FA14441B9BCEB72E11C13D38EFB1B7058
7904281829F30C7154220A64C0A6B89BFED476AD319EA996076E3AD1F6363E18
CEF8715CB464AA1601E86BDDA1E3D2DE9C549844667E28F6FF56261B6FB7FB63
26BA54010A9D8ABA76F812C3559A8DAB5393A79E269E12EE9B6D394E8CD9DA0B
4645C39AB7F531712592789B3B416CDAD65F06E635917B5015D20DF4B38640B7
7CB6CD611C878B1817B0DE26277AADB0E7B4567D9A8AA250C34467F9E2BD280C
3DCACC76012941037D9EF3AE2C751CD5EB9AF0688DB568ACAF21C4CB096C6938
7D4AF992C0185793E243A97F9F62FB07D9E4670B0D49EC2D92C249ECA2004272
53B4D33E2A46F3EF01DE032E2663DB10C9F45C7D73E93634A0ABE95FA06239BC
2FA2385C29AD33054464CF70AE0D0B388F9B2899E61A00B87F9C36C786251079
D0ADD67F3859388340C67A4D1A6557EB545FD2814F916CA6388EB9ABDF01FD41
5A5C594F5D1C841E3C47845CEFAB95EBC6179921F2900B43D7C5D54C426D5B11
C9FDB70A6EB7B4F49416D950C799487C16CF5B4EAD72CB6DFC0828F7F419FA19
6E5574D509DEE40D453E006F24B04ABC328BFDA39035289A721295D20B0DE1C7
78859B199D75D55B73732E05F1B99656E223B219D2DA67300DE60436196E057E
8AAD190EA5C2EB7F0BB890D16A81B9C0D93683FA1745B31FBF3B0683AF141B8D
70B6007AFE8E0BC3E7DF6C3D2C8E3C62F12E2DEBAFF527FAC8BF4B45F6DDCA1E
A41F52B50F75F20FDFFE5ED4D29A084147EAA6EA3890221853887764CB27A961
B2ED85D2FCAE00AC31D7FA639A4A0C680F83D79EC9D91DE437CA5862B2A70D82
1398FC3166965AA11CE5461192105E7FBEAE07D1E5EA29AA633C0B414AACEA6F
353BD9B53106F117455787132C3F60B2D4A388C882B561F95093201C875B9A67
2455CA69CAF92CEEB2789F2575F6CCA13BCD9229CAE644FC7383721564C80619
E4410BA252FE215476C15269CBFD165C23555AF1AB0AA9658318797BDCEF144E
57B11074FBD92D0E42BC878E3037942CDBB5D6F0FA835985530BDB236EC53030
6025B803C72E39FDF685B9B221CCAB0E5FA9B55D19373BFBA7AA0F02D0221A3B
70876B81778B1E58C64B767878CD34B6A8E0327BCDAAE5C8BB4F28C9A8D13AF3
AAC22D795AE6DE30947CA8C30E81D2B816B480C4375785D1801AEFDCCC5952DC
243BBA14705F134AF4B68028F0EB4B41A1C8F933CB840D2412EA610E772F6E4A
2173C83ED26523BB7EBE5CFBAFFEDB02B152815387A9B9F118EA941C354F3640
3F3CFC204759D8941786D677E742EDA9C069A7DC754E3FFFE186D374836001D5
A4CFE10D809BD75398B062EE6C8A6CB62780444C4A69CECB65E0E0CF9B55D1A9
8389EEBB580689DEB2FF300E20D2B7A00EA2A8F38943DC773D8D82C1CB141D24
3EE480436B579E6D94C7A93FCB632EED19E2A76E219FC611058DD7C1F01C87FF
E38D597C7D6E2B0F7E6F0140C28FB25D4777A3DE558404A1E4F4D8A8C150B7DE
49426DFBFB753F0F50873FEFFF82DEDA0AFBA58BD44417249857135C94E3FB21
6A8197DE99A72864D3B0E5BB58BCD01586F7DEFE6881B8A0487027E0AD39D853
4EE0EAB7A692B02DD959E1D716B73DDA439A2AE7ACF8F3E125BCE26B1F513164
AFD878844BA1E4DEF1B25667177616A9AABDD5CDF299FC46E862A74AE9920095
21E89459EB9F3C7317F4F00FA8000A27FB3A676099B3224E2237ACEC2263EBF8
FE2F892ADAEDDDE307A3B4CBE4A219C95BFAEC234E043D73B1C192459F1899BF
C67A790CC003184D43BE1E87208ED8C0496214CF895AA1ADA282F1E9CCF82DB4
C7C2B8947B3A02B9FE99E89332B5CEA4C96A345CBA5B93CC7AA50F8F1F00F39C
F431CD916DC00DBA17219F44CE859A4DA4568F2844D078588D3B88313F80CCB9
FD941CADC7C5B2602E2DADF105BE7F6001A7DD424276DAB9B07251AE0817F94D
5D341E148537F84E41189785F5734FBB5D24208BA4CA3D0FB0575CFD4ADEE09E
F530556C4581FC7FA1B2070286C3FCF0F6936F2B02F222AADB9ACC28544DE969
2961AB2D2FE2D911A811764F238823FBF8A7C8A9D99999060D7056DE441ABD63
AAE211BD3C3846FB90C75468FEEFE605B2590A58F8240A0E22C93C1F9C156A68
7798F501AB9AA770F8544313358393825FF04AFFD53F9DFB33A966B90218BEE7
51DE6EC013D63617859086F780D5E51790731A75CD64F8BE75BB2C113B050EBD
907CE81E4CE943275D734499FEC542313203B620E647160E110A31AADEBE8B24
CC5DC42BB618085B04AC9E79EDCE1C560C0CA756B0FA28CD7754637A94564FC5
6C750C2B993CFA13A1B192495432F6DFCEDC63D41C465E14BB3A92FAC4D9F5F2
D74B561BD52289C080C241BE0CB94CEF5C760997D33E7FFECCA6D2D157C4CCE3
63ED00E6B57C4E71898417148CAEB95DA0F7D27FBC5CA5A5D320A3C5322BC480
F0A26ADEDC744FB6562AA3D823977426FD3989ACC05361D811BD505CBBC62277
318C4629153C65D8864E391E1A486E0E0D646649376E5A8891B4D5B2927AB3AE
F557B62448B3646CFAAB515C44EECB883171B4F31B853C859504EAF0A6D04204
D264CA610C5AC5768A8847DD876BFD4ECB8E15AE8E0BB1603A6E9E2E790A2AE0
295645E5A19EAE6E1C5182015F8C8AAA50CD867E57949CE6C66D120A4AA13D7E
14D2400D70A618678F74DE1222AC87BDD7A00C5952BB9CB6BE98D49A04D997CE
AC581DDB28CBD27FC0799CD17B7F247FF822EC8F45CFF53713434711CFDE7194
C4A3D86791B99FBD932C4487E34FFE99372EDD0734EB4F0063088EE4786B9498
C7BFA423AE435C9736F882D33E3644DAABE9339DC12D1823A3018D6BD558F75A
69CDA384B59A7E5D570A9F2DA4A837090910C363EE76717870F48633B1C7B62E
1522AB3B6AB3BEF9F16FBA83BA8AA4B6E41EA9A63C437F4572CC9F849B45F053
639A906A26D71FA6A738FCDFFE93779104DA80D672D1196691D2AA74C31047BD
6C3711517AB7CD2B0036F003C563C06876F1A6E42FAF6CE8A8E5BA8CBD25E23F
12E37C1C5DD135D2E47718929CE16B565C23CE671985162352B40B6164230514
819256A06813BCF7C5BB85727C333ED25307AAE1495E1E9979F5A0A45257C0CC
709BB81EEDAFB7F8A7F97514DFAC1039354C964F9000BD62870DD0D828914494
5AD987DAAB905B2D9AF91FD0A39552262AB0223F9F4D8E246FFEEA3575A93BF2
D1F299435B322AD4AEE0FED44E1D40599005222838D5BD3F241A21DC04AEDB2E
B73456F0A0935D37E9CD9A75B942661D4E06FE1FCBEF378176BB4E8215B7F5E3
84AF04B676140DB4710F92B19208230186CAE0BD27A6C7257A8AA9AB2C45D95C
A3CB6BE2855B765A8B3FAD718B68764AE4B06002223C7E34457D165CFEB03E44
D7A94C30DDF60738F580FB253C38062B50AAC535EBE68048D788F2F958EB2D48
9D9D305A4928688789DFAC6B3F8F7D0E39BAE0C2F1CE5D6DB5D11E28A2B2231B
A598CB3D0E625054F55D73FE183CBC08FF38952E742F7195D9BCAFFCC022B9D9
F7574DC2EE0E15D5F2AB75827D04A7DFF40829E397ED91699FEF32CFA152D6BA
FF192C65235B6555B3785EA317C17FA0EAB094F96BC64F67A0F1C26118FF4879
DFBF9DAF93A87F3F7EFD964BA23E2F7E42CF1E5A173A8A538E50BD10BE77E7AE
BF0D2FF25FFD445561CD0B2C482343AFB8218F6AF3CBDF202048C574A8BAADA2
543FCAC51E1B3F6E80BF9F0A2F76B3E6DCF0F6C5684B31F0E5B4E82E5FD45B25
35DDB1C6402C3AAFD9EC6B0AD26E4617AACE5D5BCC4CE030392478AA0825FD6D
3B3025B720656704A22CC039D66A41A07723F3D367F8E0F0D8271A8BA342A2FC
1BCA954CE08DDDF12B6134CC5661A6288B02F3B2E1630ACB911A71414E85DFD3
1E6E145E0BAF01CAAFBE6FD3651A83010D14FA4EAB91592A263C830DBA6A145C
CD4C1C3EA5B6094EE1E7FE46A8CE22A21FE77383C64CF175AF4C458D8635874D
FFF5744D6746DE6450B50295C438AFCA2F8978D58F8A5C33DB81E80608827D8C
13DE246A428D0F267702E5A38EED4AB21626443DDCEEA1B38AFECFEFB95EFFFD
B2F5018D161AEE21CAD9CF65DFFE95CBD86D69E38644B3D9CF1CB98FCDC4DB84
15B1E2F08D95E6D39E732D569615C735088651F7511C580D8EAAD4FE0B2111A0
9EF1EDB9280BCD4D299DB5112EFB4EB005837452C6094CAC377B13B0A1BEA4E2
A273E1947C22CFA8147345246ED27135B90E153AA264FF0E31B0B2A2516870D3
04969DA2FD5E0A997D5EEC39FA7E9B5B27CE5C00D1437B87ECD85C10A6C3786E
64B62F71E2983528F49AE19AA500E04F04085D7817E08F27D8334DA65D140720
EF42935621950FB54A162E4B6AD78F1F787C497318A867B8995EDF791E7367E9
9F1895FF64D522379A9AB227BAB89AE3CBD6BBACAE1A857D9E36B96B12F16CF9
E5C63C2603FEA9C5E32B3FB2501374C48A85BF801153B58EA575B48D2016141F
96BBC6621ED6A36F90437CB9CD6C0C6ED8ED3E466AC1913AC395286E9F627F57
2163A53AF3345ACD0E5125350C72E01E75375E66F655074E85A03B0C9697DD0F
15DC954086BAF9E07B16BA53D267266A698AEB4696D11B0DC725D8C25CC14CE4
FC595442B06C7CFFF53701D7F19EF04183C30E755C73E040225CA0342C0C0F0A
39EE80FDA66C562613B732BE7BE554811671AFE4695294D3B922C71AFAAD7C5B
CD36F163454651EAA0C98459E17FB71AAA5938C00B61159988A1F995D20E9B84
5A47E0666B86C8B3C62E593B1A119786158BC3D4E70AF980B206F92173FC2464
4B411BC69A798B8909CD4CE2FB64522234128A7B337B75FE02D7BEDF4F6ADC70
BDB48C21E9EEC16168D0688A01FA11B156B64FD2DBC0A4AC99EE870A2566053E
13E75445DD313D105ED6523FF6193A7078161C0F06E6E923A5C3381F75600F51
C5A9424292A43CE5BB615A28F122CF02CF10A4EDD22EF7712C24202122CFE513
B3996C44CB49A8E53268BBE9AC12989123BE0E5D708E48465AEDE0F547C11A85
436338AEEA481059A4927E238F6BE4AB4D6633069F02E385481D3B4D089C94CA
7B0930B1E43506C3511F2EB445D71D281DCCB7FB5E42832437F4657B0C83CD59
A6E323A94779CA578F6B89D94082D50253E84A285E470E2867D2D891FE1519F6
951E26BE289A9F687A3E51A55091E613108FF8A321A9E62FF6EB80991F863899
4865AD5CDFB20946280A118447C9C93293DB822F77E5B2934EB5F9D8A970FCBD
90176F8C3440EB7F68014C53DA773074E8AE043E070BACD9C83AE043D9F91CF6
190452EA553288DF6AB8788AD8C60744C528D67A173C17E4C5B7E21B44C9158B
2D6C5E22E1241DB3BEDE74D688D596AFAB8ECDE4521ADCFF757044CD3A209A2A
418FB92150905C1DB8D925E45AB9A32E304F960A9053AF93B23DC64FDC913972
A4314B8FEBFF3777292952BDED244FE2668D59A47CBCF6DEF6B2C788BD206283
A906A84E00E7C368943F70B6C2B97752D3C0A8BE3D2148F38FDEF482EAC54514
9DB68030B77FD7EAA3E78105421FE9CEF143233882410B57C198A80FA243AB1C
5C68B6E1B0511351708883A851D6D079D4217F703B81585F0F93768DE2141A40
992B14125EB5A2162A489885279A80E66B4941F22E63F416CA473485E43EF135
934428950ADAEDBAE8F001525E6B05852B58839860C7AD25C85BCBA47E58B185
C89C8D76646F7F4938D36DE6171F949072068C5C1A59E46EF52A110B77F4D3D7
67B2719094BB21B5EC226419B652459A33EFFA922EA66332C6AC3C6D8A87844E
B1A3425153FA7A8C6F5DE7281F059EB495D01A9C37E47BDADAA96E9A25F9C296
4F2799C365A247C3B3AF9EDF70B99FD712DA4AB67023B4FB2B3ED4A59184D702
E2A734168B3187B9AF31783119F39CB1E96908A542F89B3CBB8996A791722573
62FF2903607029022105ECAC318A84B12C62653890FC6A2E6DF5A078F058CB1A
5BD2B3E5CFF8145178B4D9860D787B402EF5827680EFD47577B8F3D573E5CD3E
9808C33D6FBCBD15BA2023C912B3E991BDA78F5B38042F727B7ADA816DC01839
5D6D21B7669FA360CC854BC89D7537C22FAA8EE93D2E205CDEC710663D398195
14BE4DF186A84C325587DB2CCDA8EBA9A97B20283A12EAD6BAE1D900EDE0E53E
80D86CA841FF348449578844A8B39336C783400ECD9CF6596B3465CB181A070A
8904BBDDAFB2B624F0F4DCFDB93134810575847CA0DC02E87907A4C4B3D9DA56
F295AFE50008550F7195838D59CC8806798E097C39B8E51FEB7C09189D2EAC65
F928C8184BDCF7EE9AF66869B471F669B8AED37EFC8186636D4248B82A8EE2D0
3D58E10288F66AE64EF990D9E0AC6080153F62AFB0B3EBE5EDB4CB5B2B4C7F8D
A1854666FBA9EB47B6DA29B23F44864519D85D4820E285D44AC859F52306EBC0
423E7FE695FE2B2AB95A01B61D0F71C93BD2563B70AC524B7C37AE2A43E13142
AEAD394293E2454C77C5A3930047DD1E000AE0FF1EF1D811B9212C55225A3A40
06D851498D22CAAC8741D4EA6A8247D6B8711894B5B4D59CB09A84AB9A9919FC
CA59FC22D1C5E06557D23D22223BF1FC91AF48D8A37DF34678AAAF1AACF11257
1485153F7377B68B93AC38EA661645A45F228C61034096E994A28856CDB9299D
7D54418F094108DD130B617AE9B17B1E0291DD598B2FCD058753E801DFA5E677
80C155A4E52AE09461B365D42B079AED21EA6EC951DC8D0CD16EDFB642C796CA
B2486D61D19084608F051C00B5619ED7C349DD90A5CE9827E6B6EC02B7D0B01A
9BC60F03B93A148D673C0807172344406CC5D38249BCB8D3DFF8A04F10E6A105
D6BAED2710FAFA6A7CDF2F8270D2449580C7AAEB4A77893AD523CBD5B18586BE
0F7A52853740609C58C7A91D0662BE2E7E45DCE3DD9CA94ECFEF7B6C177D3007
91064EEDF1F3F39B18D0F4E427BD2ACFF06CD5C9F8CC7B66913BC30CCFB450DB
B962E030ECCCA4BA476DAC3FF86265B867EB13466384BE210A9CDC6EBD23FDE9
339DCAC2811A69E48A2A8C9237A3F8287EEE6DCB95CC8833BF91189227379685
73E522C84490A4DE22BBF536A363FA99D44101BBD85578E9B2C4AAC83A1729E0
2DCFB6A27E52049CEDC18D3CC4F7BD96E8A52D107ED2829CBDBC1EB3CB212BA8
B1044577066024FE61F40F2102974D0597A9545B0DA18B02069E231A2FC996C6
108D924AF3C3C1C50EF711CB95F54765C3E20F8D60EF805C1F040C0946644D12
F1437384214903B081CC3133E2F7C86FF71EC45FD99D7DCD5D80C15953A3B4F7
165465A15488B86289F4074C207329622EEC5F8995A1F3C87413DB726CE19036
ADB2E55B91F0ADC4E4A1C3AE82AC95D8D8301E90FA6890A60053BF3A3552E29C
4799E510F6108DFC79961917A284B9D45E12E0E574746C18503F9E5FC03964A4
88FFCBE52040B53AC96F9E8624E4614BE8DD971668C1469FCB39D2DDC893A1D0
E406140DF844699148D8E4CA65391F96111AD1AA82BA23735999DB76524119A8
14DE0AEF6D6231BB4A55F2DB4062C12E3AAE73E5BD0003B0A013E7B7AF922879
08C64CE682A244AADF194519AB13C475A49AEA5C887543C14E5CD1E407A70A02
395B2B74B63E2F696E5B6C00229E543A469E290439698D959D5882BA890014A3
FBE1DE2A9289C85AB643996B92DB1877292BE2475CEBEA64A61044A7B6D8EA21
A1A276AEC0CD811B1EFB7C0F9CCEB47951E447755359208DB2213F625FCA3F88
B0652F91EE3AAF2E25C64705B54E4445EDA85FE03BAA33FD30AD6E7747BF1687
CE31F09C7166C61995B1DFDDD25721C3EE62329F5446326A13EB000DD954FD4F
BE5C49CCCC806C0CE44EF017580D8DAAFD7826049EC3964119F384729F8BB8AF
E88C1F61E2EC52F8A93972BF8FADD265996780932F28A2071F69096F2C6EE1C3
1CC74FC4BEE9F6B42B2898A9C34381DDC648CACE18146E4F50615DE41DE1EA5D
7C477417586B60F5CC637A1D153A3DA61F123EB2B7EC603B0C9480AFDA44FC8A
B9B44BB04702F8292F06006A64AC4BC6F763E41FCA2F776832E05B79AECEE290
04FC3AB9BC8FAACAF777CED9B37BC6259FBD2EA3E30E816B1FAED12F24E30BA6
421630986E38E714BF1275007EBE19EDDE4840C23244209121940E85202BA846
4F4621D83A6FE6A0C32DCBAA8A69051E426F276CE9578A726B6574BBDEAE02BA
46352D7DBE1A7E2DDC55312E876CD834596BB78D8E31946F63CC295534344ADA
0A3CA6DA6D0981E4A94B449C41DB237FDC55866FA092B6A6F77512B3FFF4DE9A
17CCB0834AFC53694E99F0BC3772183F7C71C54FF64D9A9FC83F5293ACAC55A8
C8BEC624ADDC65BC8D85B34ACB26C0F6F2AE0873442AB33CFFC14D960233C6B9
9CC2212EC26F66A4CF567FF454AA266B427E7F30CFBB49CD6AE348A6C7EE7D59
BE3FBE6C4E563B2179E8E63C4CF034E59C4371DF6804712CA5FE58242572CB02
AE01BE5248F53526BEE4397592BA1AEBF41E61A43D03072EC93B29C1FF74B742
7C9753FC6D69EEE783A272FCF5E89E1AC45E002B85AFB52A65CAF8D13C772D4F
8CADA05ADD26D571A9A4FB95F4CD52446E296752DCA4E8D7E2BF68B79CDAC092
10F1006AA965535697E824C9DD6A532A352A9CA05816F02427EC60115F03FFA3
2F48A6536C3740959822BE88F796A3D5A4D442550E5EE9C78A528606A73A2CE5
E11DC702752364D86A9FEDA68CFF8CE80F47FDEE11A0F14FA6AFBEC9DAB8DB60
5C5CFE10FB379F750BD70AB1BFBA543D9C67CD23EE35279698429C8215025109
7B914DEE1274238C585FB953990D6E1A2B225C7DD4FAF85A21819888BAB19383
1883171F79DA87CE994450520E71DFC3EAC6B08AD36EE0B51868A396475C7438
4A25965D70B69B5E6E9D1215EBF75381FD14DAB22F2B533700C5E0203C3AF919
AAD56F3AE9CE340A02D775B30A1B247BF7A2C3DDFBD32051EEB71FE358AF51B5
8926161379904D3C76A91C116BD543AAAA923C7A0E26A87398FF631DAF2984C2
23C42572D2CC0012CBCF2725599C39DB8BFE019E24B374EA4F3C650A77CC070A
882D9FC5E103968216C4CF83AF312757A846613F6955FF0EC9F25E429BC88582
4B174A4877BC898DB9B1406EE224CABE9B1CFD22721BCCE7CE902A0FCB00F841
B095E81EEDE96999719439BD404954779F6796085FF264D143664A8F85CB2279
26BC6B84C984618A22C35EE60EAA322BA8CE75DC299FC25858203DB6550A97A7
A2CCE3FEAC31EDAA507E417A48ECC16932B3A843EB968B0005E74ACBDB2A9F6A
EDCD908853833C38E68F5101B05194391C53CC6161A493D7622C3C8732033BA2
A102DCAF52868F6726B91BEDAC616372BE7399A0C6061AA20DA7A360C60BCA9C
A45C342EF3AB96C0361E9E3063A917D68C6BFF892B7A0BB366D40A2FE0035F68
EC3082E628234F538F83E45C0E7D2247B9C472F09821F9984D61B1DBDD074685
E94AAEFFFC3C8118F214EF8239E95090AB6F64064EEA6BBAE2F45510FCCD3AF3
A6DBFCF2448E9ECC4FC55A783A91D0AF8050ACF48316218B18DEFACEDEFB727B
DB32F15D5390D7333465FD057A75972E5567878DE2F2BDB668B4110382
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 67 /C put
dup 71 /G put
dup 73 /I put
dup 78 /N put
dup 82 /R put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 122 /z put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
326C94D4566983D020CEA73FB1AB77896A323E32C6A6FBCF574C25A956CBA14B
99BE4A579A2AE4F43FFEE71FB2749431629C58EC189886CFE391A81C6CFDB043
749569F513474DCB5B502DB5CCEB4C329A6ED3F54D7B67B617389CDF7ACC1408
B937D5CCD27D66FD2F8F7401D460405936CE6FC6493336E68035E0A47460E075
4F0EE9DA45842C5FF641CD771245A6D8F4BAA1AC84F37C64123D7F6004793C58
F020309D6AF9E63137F336568DB5ED918F6A560738FDB302065372327DDFEDAC
FD0AC7C3B3EDEBBB59A429B0AD9421175D72B357AE85661CE3184BCC86CC360A
98496031E3E0E9FD5B5B1E4BFA622E8BEAB72E4A3062AF6EE7E58F1A6C27A87C
9DCF844112BED9D836142020DA7BCF91EB8BEB9C6E2EDFD5FF65992CE0871C56
29585F77DDAF7B94B994434E4FF62CCD50EC7AD22E8DC3ACAF034D50B41DD20B
13B59299C3C8F8BB5D9B68ED6F2D06C3BE46D51ABF749E77D26A5AF4B25F96EA
2EB5D1BBBA608DFD8B2B05D556741CDE0C7F2DC12D26133F22143BEB98EACB4E
17452554F980D492BE9CD3361867EABA65E84BCEDC0CA1ACCF280EB2D69E6A50
DAA186AF210A62EBD848C30119CB0C7964387182270AD77B643EC055804FF169
819177F7BC267591897732C1E8E8068DDEAF1D6F7979AF47AD624C7B5EEFE0E8
3399E8929F3C0B8F0F6D0C12E2B41E3229CF7777360AE7E9FEB8D815450F66CB
2CAD354D89F3A92136737895617591058EB5FD6B95E95F0E23B0CD9C9073E24B
0A2D9D6C48731D9EECD75B523EF67A6CA69E2F7B91D9D4C6A3A7DE4E0D269293
8E8176B8CF6D2FB60445DCC71F2E581E5E4E5404CC797C9E9E1CED5DF4F2C3CE
D18F9DAF5CFCA641A4D862E1052EFC89927F949A781E53E11E91855B70A0816D
11666A1D325F91B3A60B31DAB20D4D1758C2E5DF6E9FD8780AD0A54538C01BAF
139A2488828C94BEFFBEF61EAE2F84B163E5DB8CC506B99FB903AF3BC622038D
60CDA9C91AD866DE4284DA959699238D91D2C42C1472239D1166D8D8EE98640A
177532E5ECA153DC7C079E5904AEFC145AA7DE37752B9407935D99231CE45A79
13222C8C4A8CC1E0ACEFF4F2C65398553078AFDEEF56C9CFABDD02A91AACFC18
86FB2A78DE1C2D646FA7B3E0806888B1B432F748F77BD8E36AAF69C15E39C63E
A3898FF7C4DDBFE413E476E6628D11B85C3BDC6437B090D431F7CE0B35B23832
485709DEEA4E5E7D716CF99E0B292CB06DC37945FBC52A498E16F65ACAB2DA25
6678862283733D206796E647D9838A62565A447E2AB0097B8C28E021831E9193
217ABB5C52D1586C724FA7B9F3C1CE47DA26006A520856AA77FDC9E4DC918FC9
EDD1261627F795CD080BF34734D16D31A5896CA1B929BA456D5D2AB84C0FF331
B03CB27002B0194C2C2CAB645858951D25573B9B783F510031A6C0261D7DC208
39677B825656181069CA584D05B772CCF638BCC75CEF5ABCA7F96136A0EAA742
58A62785CF24320C572B8C6AA7E9A3DDC383FDB3D6EEABD901772BE45FFD323C
981D9A637EA1ACE1366C096A855F79106FF83D5452E9CDF7950D6C60C4FCF4A7
4E52DCE5693FD5895C32C8CDB109AC0C2310B3F754AA7AF4EFE18509D21989ED
89C5E8CC07780A2C0CA19682CB410CA422BDCD8C65BD2894894D44E2DE88852F
77837024D6838219C948F6E5D6E71716809C4629BBB5C6A28AB07F77E66C804C
D302393C33724689E2511F8214FE40BC0EA63C6F617532C49BFC434F2C8845A4
776A3D3912691AFCC70CE3879ABDAFEE5DE9D56D64D82B6538BEB06DA2819BF7
CB06580BDBA3C44F08CA113125E097A8822EAD0C0306580250CF46C9E8DBE615
5EF954D1D457F3E5BC981B5CEF28AD29A3FF9FB14625D12DCC50C48C98547776
9E6822ABD42E1A28747A18EE7A658E027552407FC6D0ACF37F721C66C4A4C182
B103C5716F2D5E027B7C66DB244BC5D8797A66B656E5047AF62F584841BDD418
DE025AE35D0F59EA0B351B0130812343E664E8ADA9774F4C66B1254E7D19B891
5675CB8730B82DA4A248D8054D5CDBBD90EE531E0F29594F280318587F44D8C4
B3DE90220703D21F9774DB24CC20B56BE29F9253A31BD0EDDFBFD88EAC3D06B6
3410CC30853BCCF6BD7D0B7B38416C012EA2D88A8EE2B4B58ED45A03190C1C37
BE8AD32E22D7B6E514080D92205ED63750FAE1D5FC427F492D300F77298D1B47
06381668AA9E3087D1AAEC2037F92397DE387DDAEC041B85F76F5112CCB09632
EF5523EA8EB860C6113FA1B4945292883B048A70CD5111AF32F4960E51BE0A70
C324732FC73F3CF3DB4DF4BD3E0E541D87C4251935E53579D6E7BD71C98C6C44
651BE683C1914CF1F9B571C4570E53355270967BD877E4167F31CA479016744F
876ADE5678A058B4DC675A6815A1AB83596C1BF03DCE452346DDC3CDE634A5B7
14F38A3B48B16AC93DAD25584C1D634B9223CE67DCCD4E160B6A9712B2D83BA1
B2146494EA22A1AF936BFE43E47D2E847A2F5F5A7E95FCE65D9D64129A876A39
EB3C5A43AAE5068260A2DDC0B1959C49A43F4BE09DBFE1D02E73AC8DC7536521
33DDDAA2C627181C82F3CD2419B5B128BFD762664D7668F9341BCDF1E439971C
2A6EB3DF777A9BAA508D74954CD61ADAA9A11241602089DD87B4FB05B374E3A5
656614651C2A95628E6AD7023425745F61836B93E6E0254069A5ABB1E114E277
F5BFC04A7157B5DD1DF8B8E866AE980C8E24F2CB7E0140B5B7C20CD382CB87D6
A720E23FE4E7EF183B40564A752B307C2E8AA9B6504216039791598ECF959061
0FDDF58C7A5F6F0ED08E40DA853B2ECA6FE4921B534A2D0BBE62CFD63EAEF75E
85E26C00455422AD8330CA04723E4E9F83A141B5DF427DAD9E3477077A882164
BBA1F24E15E0148882E9F265465D77426AD16019DAC82BB8AD20345F8DE4295F
D842AEE0BE03750873B59AB4C81C7C97312259F07A0E04524C665A69867F4DF7
D1026540F215C98F78BCFC372EAC20CB1D2BA3657779B93DE568B65EF148CAE3
04FA63F238A685A6D89440F27142057F4D2D634B7F2584E928C3A88E428472FA
F2E70BED5220C430C0F37B57ABAAF0A511C13D9B996A9AAF8816F3EC877412A9
F194477FF3FAAF769B8117D328D884DBFCD6CC100553334DD2B165410722F6B4
6C949A23BCE568316A60DB5B057A9870F8F99DF84328374C0C6D6B1E4AF9C39C
672B969D77053AD849AF9B77863277C76828B1D7E82A76EDE608336425675DA6
C8DAEFD37AB90F62F78C4F3B2E8A08F9419214D107512475027D294437762922
4112DD55312AFE8C77861614F50F3E2512637E3852CD8D501FB7219350FAD6FF
4BA5AF5FD7C06CD5CAD800461822F780AC971C0D6E9718B8468070E4192A074C
E501DDC93CC544F06D7607B414B531E97479288D28B71A6EF12087BDE7647F00
9DE7FB9E68C7996AF66739589927589623E0EE8CB5AA38CB912F5572714B0568
0B20413B0C9CC525F025A97343478021BA973C78813193C03BC6B0243AD80187
BDFD1ED0013AB1B079FC3B9FEDF810FCD15C3C0FF1033BF69480837D5244A351
C4DFF2397FBC027F5906843EB49CB7C3C90F716AEA2BB326D70A72AA3991E59F
82BD20EDF4192ECC0A0BF4FE662A492DF678719F1F7D6051C94A2286D4912509
8E9E97BD9C22D8240603D2E7EB3708C409CF253D90E2116BCE287DEF07A2991F
BFCAA06FD032E01C93C5745D8890AEFE7A57FB8F59AAA29A15DAAEAF20BB5536
DACEBC2F69C0383015F425C196652F80D2B50F509B12177E037EF7A4D552ABFA
61857B3D185ADC4B4FA281DA8CEBD884B0CBD12AF3A78D6D4A415591F6E82444
AE54B8DCB685F933F58EE058C69F300794EAC9D89FBD7BA0E2CC0C56B2E3D36D
EAF0C06C341887456D7A1E9FA82CBB91176670079A7582C491126991CFF5A6D5
9022C1EA786443601857AA3249646FE45D008B102C701AB12D4008DA01D56961
B60F448377DB6E849282DD37581395F8297EC04886F4451EC5725CB127925C73
32B6F55B9E9D238DD8AC1890C5F956188F0A61B7779FBD3A191D06A777E37997
584B5EDABA7FA250253D44D429463F8F654D5A8F8BBB2A218CB7617545843B75
0BFFB46F944D4DFDD76B2D7D6B272C9C830873BEC5FFC87E6EAF62B755E23087
FB0CAB039508A75795DC7FBD07B7808E8826CE86D37A8693516DFEB36C5DB68E
5CF6C70A2183D59931E94CB21957A7F68346CD0289A8AED8CCDB5B83C1CB6FB3
5A6A64C60B4E84C765488B56BAFF7F1FB6FB77EE1430B1D10A57023146A16FAF
F15A33394C573DB8FB48AC63CC80D602A546EA3DC133D1E4B0606E0F9E1A2384
F208C053F90CA1937F17352E7E96D5ABB231190D193F872486AEC4CFDD8D0A30
7923505C9EED6A424030C7D761E2472A0B7A69E42AE42160642E404E725B6A97
012F4FF711A341799382D516CF909F455C2330C9EBC35F4969B79043AAC446E7
7513320739C45652BA0AE167E9523BA6D326162E19F7EF66777DAF7851B56EF3
A6460EA5592EF1103752CD45D86CCEB4DEAB9D0F76A4AC45384C58DF8E078511
E3C2AB3E02AD0D8A90DD97773119ABD03CE5A0DF1E3CE0238001161E6648EB3A
8CD3EA3FBB2D49767183C946AF8307A35317621D7BA0A057A9D0FA42842F42A8
BDED2EDD6E731A3EBC7F55F4D5D7149E152D300E47F62D88C16EA686EFA49891
7E50A0A64EABFD46B0FD23323B5605EE376E3FC1B4D37492D29A727EFC665596
948C4A48F44EE1C64285B3399490E1D154376246B4F09D357494949C1106B0F8
80E9CFCC62B33F5B55A0F12A707D9FBF0CAFF85B7FC399DCB5982C5712F66D18
8BC0D75BEA27D1282C22F23B0D4BA39A279828EE8C22B8ED7F58033754306CAB
534982B0843799EF7F0DA0790007DD87F478D04492A01412C6596DB7F95634EB
D14987B1B2876B75045EB7C1751254412AFF2E86BE18639887D2AEEB5F9BF9AD
B826A39B355F2D3BB1A0EA3D25142B76DB3D64B57D30FD4AC37A81109AA23655
B111417CDA14A44E502CAC052DAD523E2E765380BB7A61DB330AC65FB854215D
95CC1A0AD29A0882E233FB981324BB1694AD4D069A9547937517C4B1470A586A
7F717F25F464E80889A85A39C532EDDDB74F58419A7F6AA3248E5114693EF82F
608E0DFBE85A8A21AA59D58E1F6A280F86D15A99D999DF545E35F7306D8E6904
58A952000E2F494A4D16DFB47ABAC0FE816EBC69D17680FB51FE50A5F3291AEB
5860401963890BCE528BD81E57EB1C7C39BA5004D84C4308E3B5503B6EBCBDBB
AC95D5ADC9B429D8B26A14E5651D3704A76EF9DB87E5F3C92E3C8F9774AA58E6
45640E9F393A01CC205D767C55F3EC8CDBC3ED9B49FC7AE73B7A413B205E1130
B03B9618F95AC9E5ECD444CD5959E744EB2F8A8B3A275FD5671AB817A413183F
78AB62D91BB202597D6DB34898027BCA04DC8FCB0DCB5B51AA23AF064A4348C8
C3969D672328376DC6B8DA534E0518B08FD9D1FF1EA66130E3D5C5B15D3769F2
623B96738E3E2514B4EF076844A90F3F16F94BA5DFA930A18DFDA804AA285C09
A538273BE9A64A14386A965097BF8D5EDBAEB6A73E2F9BAEF2405141F8DE4DB9
64CF753E6A30BAA0DAE1E30E5A1CCCDB6A0DB2EF698F7277B43858DFD84BE358
A44FDD271DF73BE6F6ADE7861FAB84E0F61B0707D75E3AB6C798928450F0AA35
DB5EDEC419A5E8E41D4FE722723D9BC3C33E38499773AF37437C51FDEC1CC378
A355CDC23107EC6A21815EB86083AE581815A9191461D67F416B7A180CD23C78
5FF777907764DC1A0F9AC63217451E6F34EE2473D8293FF968D355956B1478BC
E1B2773D589D7BA1B0A2853619C9EDE18147696411147D53ADA6A2DBA2FB530E
A212348B2004AFAC72C5C8164C93C0710DBDB3D10952AA53F8B579B6A134CE0B
608EBB6C3E105478A5FC9EA562616BE1E2A986E0602E4166EF0B05EC030DAF41
0F300ACBCCC0DCFE38712EF27F955FE59722F3E8C84066EA9816B9E7BDEC113D
AE4D04060C0E885EE0757B7EDC638F303B9585FF573CD4627754EB7F6BC20227
BA52E230E82221F1E3AD354A7075DA9BB007C2F92AD828220C9E311708ED8CD5
02CD83B4E49C9F08FD5C392A8E364D7605AF2BC5A00FB5751993D9C65E27A071
21677B07E4FF56ED3F7A94ACF1BA8C63CF151441F49810392096C925CA3DDB2E
01344F5C6A2E07481FE1A2D289AFBCF7E1F3BC4E0F7CC544D864F0EBBC8BF28F
1F58F7BABBBF5034E1700D7D217FC821A221615133676C8F9F1ABC8FC72BED9E
4C769FB27817AA57278A9A1390B382F8BBA78F796578B51D574CEA003082C314
8DEE420E3ED75EE8988D798505E88DB58B0924CE3D56447DC8E0A53F1689AFF6
1D54024310B36FA378A5BBB5CCB2CF2AE65532DB482F07C16D4FBD024C2E3218
6412DC8793C79595B21ACFA6786945F15B21F57ED45BD58B0DA322C3B72E865F
D8AE105FE83548567FCF509577F50C341F047A30A94095B51AA04094C7ED3224
D4BF0756204698CF8F895642008A80A0C5CB7ADB4681FF4E8ECC0C72768A4BC5
83F0C0F76F5FB588E75FB5448653FEF478EF453B79F72D126AC6823575263A6E
20BB29E0EBAAD3C4513D523E90728100F35831FA38DDA2A21BD6FF3950F256F3
E44431E71E3295DF1204FFC69E2E095F467492D652CC325CB8BABFF982643A8D
72A4C600D8AC90D9AA2E24CA8E0FD5EB562324C22FA75B268B1C01651523C230
827D5AC09123920166891F90532CD4E5EED9202B21989528E17701F65C455466
A355578ECEE2A7AE91314FF3EB079FF01054493893ECBA7D337EFB9B121273AC
9DFFB009C4A7FD3173983A151DA9E09D6E696C78101E6DF6301D1236E5F3E55A
99190021B4BE7CA424FC2981FE303D8E71A9D465A9020A54FBBB79A6ABE2EDC1
62213D0DEDA0D3DE069B7C54F21A79132BBE4EA0A23837054E09AAAC7F693D0B
EF8A691A466C74C2E8DAB19518F6036096339998528645EF68918659CA1A6378
29C1EA8BD0140346B110212292B7EF579986E7D10D7E4CB6705BF102B153225A
CC2CEE90A23A35AF5F8C8003A0D87764703B48A1A60FD9903043DFAA0B417AFD
586D3ABE0B0C8CDA1829E1EC4DEF5203EEEEE3859BB7FAB0DD0AC7B698DE7C8C
5C80F38020C33260729E7FB6D9090A4B131FDEEB8D3AEED6FD55D9936C57568C
35725D1EF3AF4B19D930309DC3E2FFC19111A9EBFD52B99F2D6CB651C5D01EDD
C1DF8B68942B2CBF2072C54C4D43E8B12860B63FC95632F08600AA7CFAE99D3C
835FE28AFB588DCA49A22BE438B0FA981F7527FC2022B5611879F25351D4E1BF
038DEAD6CBB9EBC5641EF9C95269FAA78AC5CE356E9CF0256EDDEEB00F3D1160
B45BF971F93CC8B127CA313B4D37587C96C726036F27F46BBBC8B830E5ADABF4
99B1D5E97D8E456553E0A81FC16EC626731FA6679B10FBDE06D6A06ED9ECFA62
952E0D304C66892003123BC550295DC3A8E85CF3102FF76A2AD2F49BF03556E6
438822A105F9FF6F78071E15898495A7213C6BA36408C17972C57C10AF6E80EA
E21E397269D85DF2DD85A03912EDE583CADF6B8053C84CF6554BE8A8B6CB679D
17DCA4D10BB16845BCD0885258EBCF5C6E001A236D29012F8F1DD15D2FE63DC1
B48A13BEC4C4733C70EE515FD98CF426F0FCE7D031ECE7DFD30DDBD01A87CE60
EE09D002307E596F98C3D2D603605EB7135E5BCC4E41DB313AC1C8B8670F352E
3BD704408801FF16C9FD07C49D8A1C34FDAE1C49526CB59DF701B94BD822CD38
D43A24EF7B039A0D183C512B1CF98179E603BC04449E5C1531AE1880B3610F45
0046C0ABF6301D5634AD69C65CD8302408D431A8A690040A62D33452DB58A049
D9E7A1658A0D136ABDF359276D77F99DD4EC4BD80CD3B8516C658E2880CDB31F
4B0A3C2FD9A6F5EB84FD6D286D3F234DD8BF23648D11646CDD2BE473CE167386
5F84496C8E79F9E603E27A41B7B607BD5C3DD82D852999C72B50F6E608553844
43A4D06D9095B841D2FFA8039FECA91700791CBC4E6CC1E66EEAB186281BE48F
54A4275D2EE8427D0DDF86AA2D16DB6C9D0D07F3A7E5556B55CF586819EEB9F3
33D270E662AF7FA3C62F74405D2A802864A379ED67C579A5D774F1D9F3B8B172
C44AB5738A152FE7DD590AE7C6BCAC2F5D0A61B1B92F57E633EBEF2A5749E1C0
52142E24D9343FCE830E3BA5DF1E532C8F96330C45A0694C508B3EDF5654A017
C69B15DC0AA90EFA1188F2EA8E1F5041563ABC7E75EB8FF7F3CCA8F37E65FB5A
D6EB9AA591550505EED3470229FA428C5E87E0373214A4BC23A046F28D2CAD4B
4F1EC9D8C3CCA707BEFC932DADE9FDC8A9289810A2F166C5578A7EEBF05CAFFD
28E0397241EC70F9B1D87109DAB86964A584D24B2DD3DB38FF8CF9E3B836AC28
B95BFEF6787C0C2E532026A8836F75181DE91317F7AF1707CBC552BFFAC1B86C
19B765140CA6C375CD4F255310F8B28FAEE8C5365ED5842AC87BB4B4830DA2CA
3C8C6E5B7770CEF572938B64B93584E915F8DB0275F4B75006CF86B4A73E05EE
8569E2D7FFC3D21EED7180E3969916C836FA6E9FAED149E9044D88B6B14D4968
F961FE213C0699D4E6455B5A3CE140E53D928E466AF7CA9E2402AA90CC92540E
34FD0869AE755E78BC41FFFCBF41EED52B319A32B8726B422E87AB7B4857C71F
4E708EDA640FA6DF15C91374DAFF67CE79E80CBC9F97EB08005ED2081D95C0DA
D61249AC18E05853BD6E5127960A9E96F61CF9D9AB63BDAE3FABF71A4E2BE68F
DF386BD4A7BE37CA92AC8030C79EA6983119932F70F3A025EF797F91B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 56 /eight put
dup 67 /C put
dup 73 /I put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 85 /U put
dup 89 /Y put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C43C8942435D0AAA3D9055FF808F2C3C887A3C469BBD98F026D0A59E26BA9F9
C2144CFE49A9AD892D4D31764F0AE3A10644AE3966B0A790684B14D11FA49785
EC5565D2B2E584CBFD85125F3FAC133338DE35361943DCE9AF05FCF2840CE512
998D42CBEC52B57B79DD63F00985881E8463396ADA47189A94DDF951A78866F0
B8A3D9197E39335277EF2294308DA70065D910943A34F7D5F2090FB4AA42ED70
CBA469A9F64B95A6FBA4BC89DBC93765E3AE4723162DF3F9D6BDE77DD5870ADE
C8900D6346957B84C3CE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B3DA102B
6DF94E62408E24154BAAC66B2B249C695BC0FA37A28699D9C0F3EE94AA32E3C5
8F8D7F803B5D25014D43A353D719B14B247A87898A960DF68C0C0BAF70C83917
6E9F7B3ACC64DBAEF3FDCD3A80C0AB907EE342E543D607556CBE5A9089B86D1D
E768F27D74A613F3ABF883222A8596B542EBF54E9DCE327B5682AEE5F1A7A225
BF26E2AEA0F352B9C950B47ADF650E1B2AE31E883EDD884EC90F94761C470EB1
72F27B74049C2A13EC522271032939B656020D617F4E58DCA88D138F4C84979D
5EE89221BFD28AE8117B6BBDB6670F6928D558FBACC2B174D830062C96732141
D0646861BD43186A96A5D96D4BC058E0BD031E435AA0DA7A32C439B168B8C503
306CA672720D55235F575027A8BD0D8683B13160E5279BBC9950B48915352D30
DF491AF4194CF7490F4801D9824A45BE0D2681DF6F2F5D2B3FBD831BA68DF5D8
437A06C4823D47150973E25B274A090ADAC1D92D32E892A1AEB7410448D4C5D6
0A96EC0C5DA13085CCD94769F3937BDB95829AD23BEC73CF26499F303EAC3E9D
066AD2BDEC7383EB499D6132EEA156C2018E9C2AD848020F00C1DDF1E92E3A65
749DBA6CC0CC4083B5BF7FCA9B1B70C53FB8DDABE4DB490E28F1AA31EE324CDC
A199E886EEDAB26BE6C3666F4A7B2CE3A9923E5D461208411DC21F6875B2B4B3
5E2DE4309127C49EE2BDD24C2D9A78ADF55639F04CEF3C3722E09CCF7AFF81AD
6E3C340365B1FF6AB88EB0BD6990F48FF4F8678220E83B99579E183E87CF3B55
B951D0CCE5E9B5AE2BC5353485F4F64592A9217172B14E1250D3F11AE664CFC1
D32EEA139810A8C79AFAA87063D7D161EEE88C78E28893BC037B299A3F26EAC3
AAF65D7EA06053AA2B9991107940E953FCBF77D259B4AB045549FCF236E320BD
08242DE902B66F1AC146A73BFF25C23B43FDB5B1316CFBA70CB51A71EF4F41D0
C56F9F7B75A0BE2E0D46C80B0FCB2FC1D12EAB67FDCBBDE10CA6385C026C3EBC
159C04ED954E637E261FDC4CC779008CBE310DCFE63B0B2AA106144467492546
2F6BA784ACB6FD4EBE43E225ACE10BACA76EA538C4B8F3193BB26B29FDF04DE0
7E972CA695FC360879B3743ADE58A15B7365E54EF66D9A2F994D3DC59CAB1D4B
B0993BC247C429F7BD446316AEB4E6F330A8199B6F89605DBBFC2ABFAB2D7894
A07CD0683F1338E11F19B06F544980D18D4258DB5F680202B0A3D7D1477A04DB
D688D9D48C4ABBE277A3014453C05F373C88577D14C7E4091D89DFEAB37978EF
8FAB60964B9FD4D42404043187176D45785C990A68C934481033997E36B3E239
211E64E6790D59CDB886353815DDD0EEB328E08ABA709BBE433B248F39D61D2A
02A5C1CE5AFFB66418412341E9BC9D30C7604E9DE1887E995D1EF9AC3803F14B
F6562EE98FA7FC5F4353731AE4DBE0B6312121CD8201D6AED9D00EB63CDE2AA7
70F926E262A26963E8D4D229A52B8BF3BA5FFFA881BF84980E630B8ABD729E07
96957EA27CF2B576726C06705677C29140D3DE82F86996B4E1DF7CA213E915BD
E6F585BA3D8F9F2286F83A4872F6C0D882C7C706864DFD9941FA351E685C64B5
39266166840098662408B3497B09A39326909DCF59D1BF74FBE569CCF36A6106
934A78D61DA26D5F7F41245850535DA2E1679FA7A202E9F48515E628191D4082
EACE21B7196CA13AB1820E7C7352F33D7A2B7AB109A0EE81AF35A4D6613FC7C6
B2CE1CBAC3469E6BC646B5303920DF43C8E36B2AD94DFCB7C2438152F6D2CB7C
1E25F3C288BBDDBEE9EDA913FBE7A887565BAFAD1AD71D991002B492CADF343C
B2A3E841AD1A13ED782DB8823EDBCB8398B8D8D938212E8989F12F8096BA1735
1F3C71BBDCC574CE04E5420FD4556297AB1C2B5D08C2D8721FC824427EBBD8DE
366774740BE7A057D1B4C3CDB98789A4ABBC5B83C18833C620AF2AF878526387
229A26555767B0A63215ABC9EC751DBC31EFF374594AB3849B52D50CDA2B359C
AF3363442C844876FFAE824F1E4FC21CA7FEB64050A4D6B8C35B01FD82302B39
415E21D6B6270F4ADABE3A21BA4AF967F3D980287920BF6700D11CEDD7CCE601
1C07A2006FE40A7AABD675E2A8022D93A535345484069459201D41D11847A542
5A79F8D992D283CD4416FAEF2CF8376946806FEB46851B98F0ED1409AE676900
8F37D40E7D55F53DB1F6F9526940DEE59102F2535E73DBBDD202EF99EB76BDC6
24ADBC1E64F54C1A11130344DE8649EDC3BC3FCAA00420F8655BBA82765ACBE4
A997B9D40EA7C3E3AA74D500D297DA2AF2C6A3DEBE320798C39E3EAB390F33B4
B3DFBA4645EE14663A8225A135B64CE4270FBB9EC6CD343CCC82BB207D33AF7E
674F55370B14A20354F4B93428A74C70B9ADBAB53391BFFA083F9F44196D3618
FF60E246CBA4C5056F74906AABE66A4934F60017B941141BFAAF322925A9CCF0
1D1CE7D6F7E7BE9991529FD0C1898D596490730D044C7CCAC71891F5307BCA24
9A81C9B3CECFE3DA6F5A3702D352FF2B0531FBBEC992A3E583641676DF08B76D
418506719FDEF58A0F93EF1D4E3FDA686485344596F00D16D67167C10B2402F4
1ECCDEF528C77A73ACAFFE5C26D3CA6C5BEE8178B0148C803128E742F5103EDC
73B1257F805AD6AE20AD6BB7D7BA892E56E11EC7153E10166836A597658A9089
FCF83B896D35C1DC5996610941FEEB3FACBE5BC53D90DBECFD6CCA7F177FEBA1
069AA3CF1D21119B7A183C5F0268B82A302DAC33D7594068640628046E868F8E
6E7D1782ED28444BAC3EF01DD26F052C601CACA184AE87990265AB04DD478E99
FA3FF00CA112DE6F33C554E3FCF54931BECDC9320896B674619B9F8C7FC23233
BD73BCD9DF96DF6A0EDE2F3DE4B9081FA067846C6F0A6BF91A440AC781DD3BEA
7A40555FA4A8645FD64E3B4EFD1CDF902AA4191745BC3BA4D56BADBC795E1ADE
D95FD5C61EECB18D7F8B62258F2AAE42B2ED28BD7F3A5B794ED569F5E1622272
9F8470C505494446FE89AB8998D2978119B0E9537F404AE7C3F851BF203F8CCE
6D164C1D37B126467DFF411D34028736B8164ABF123F981C6AF69FD2BE62D8B4
E1FF82E6656CFE2524A8BFA4DC2F611CCBF82F5A84543341E91D6B1BBF073B4D
7E03428B13D42101F68A25EECB1A995826C38CB115E6A258492C78F37EEC1F8C
CEBA033D592C90F6CCD0C979664201BA8B95A92806CC77CEDCF1721CE827C257
1D0864419532F7CD5DA5B9F05381977964D60218EA0D5F1B1C3CCB90F1C530B0
0584B1830D8C0FF164DFF3D0585E1D4C2BCD566915B641D59DBCFAFB00780F6F
5D58A46234A42EA9ACFAF0B8E9B8EA3FC05D5DCBC90B2F18235F9F8107B699BC
8A5A1A98D5CEFCE9B844464FC23FEC4CB867B6B36710643C8C83C6389C4A2B30
7A636299BE387EC1A636806B82807A570E826D02DA67AB946795C38C92867280
6A295606A2714B45DC204F7CEE66ACF901969E5FEDDECADE76CA370D611E12BF
FE47028C5C7F1634890D258855AAB418CFBFD10B01C7C2CF867488CA03BBF7C5
623887B6F66D26BD32F1DF3240789E06FE1AE5829371D5EA03CE7B5F1CA10FB6
CDFB2D078C50608E3C25F2968238094E11D2990F97588A43A13E228EDEB429E6
F1A8B5DFE306BB6A67A5045DEEB37465464C611D14075503BF08D439C75B4278
B0832967E1C73A2ED20A47D891929292B4CF8C6E5308B19089DB794E8E667B4C
898940A20200314B379DE1AED3BB5D11D306A028DBE9F28AA3E09F4BB947D79C
C3963EAEB8AB90203D6E8BB8B9B78F5A27668B202DA25536067C0F3053407A3B
57717222BB7D03F4C71DB9E88AB56AB8563D22936E5F4EA76AACA57531EE997F
D741D6816156C0898CEAAC100081CF12BE5ABC996F71D684A2F161FFF7FED464
59A31A2D1911F3F69A9272AAA3379EB11B72131BFA5D3058CCCAC65E3D6FBE7C
7D9D36DAAF5FAA3D84CEC32792768BDE353A81AA9D22D580FD4F87B17A7DC38A
FF0729EF40892370D04FB07CF711E160CB23A6830136FD60FA21A161002C4FF6
1190DE10607AA9D154CFCD7A42C502BAC8F05DC43C70D9669723A74628F3D1D8
B64944C57EA3C600872DA03FB9B61E16EF7DEC1158AF3811FDE73E16BB6B3257
F75CC7EBA436168C18000EBF2DDD91E5585EC4BFA5B8A447D893417EA1D71543
D8F08E098CDDD9F64EA3CE6B57DD6CAFC6112E73455FC67AE85938C328BEC81F
0769572A68A46161292CCC04BA9AC5EC28E04F28F10A3BB266AE69907BF7F4E6
CFB4402D2E164996B8B90C93D945A53019912CD10F8B32B0CE303C05C7E536AB
7944BF13E72D72DCA241AFB4FDA71D06F320C2B5EDAFC83E7116580E7B407A9C
A667E21346A1A33B3CD17CF37B41A4E65EC25BAA32E5C96611910547E130DBB7
EB66EF7484A32B9CE2F921310348DC10B049277F9166FF1F2CD79F8FC8E0F3E1
FC408837BB74B0FEF4DA4FEDECBD69DBD32021EEB0224AE19F41565029A8FA91
DE2257FC9C44A1DE6FEFFB7C641A604E893763F03B9EED58DF0D304F9A826CB5
BDFECAF1435A7E0538372BA453CD15A3103797965087A5DBDBA800DBB486F048
9E1CD8600D2EE84D18C0898D43862C23F301881F2F68751EF8B86184A5229852
C20DE2C732252945AE7E4851B61348FC844D2D56AA2F57A6E8E053F695A822C4
883351E7FCDCCBCE42B4956F08E39402964F0AE351B3012FE929880EA8816E26
57D7F9EF17163728B4F9FF1BB1D059B98499D99C98D084A9061DBBC067EA8997
05A69059A90160D19F442DBD0A078D15B44BAF0831EA889481FE20D663FC5F87
D9CDFA71A9EB215D23477FD1FFC7616AD1584747C8A5E11A376325F1988532BF
C13A0214B5A89E81B0F9B42196DFA2D70981156256C4ACF5F6F9238ADD748258
29ED5A751B5209E68233086E9044185461AA80BFBD5437B217E9A21A589D103B
49793BF0B193292A9B182DC873D68C360FA299F1277DFA2B2EE62ED7108D792B
0047F6B0A7588E01F452C6119C21399D17237A25B26069C1645F9F1E53F5C2C4
305B19652C123010CF274496541197F2323D51671EAC0298BA0D0A626FD9C36B
1B1687075390D6E3EF4DEE852FE73B1742EDC2F51CD9BA6268472ADC105E3A11
81F5A55197C400E9ACE0F2D43CF092E1CB61022248DFD80BFE180658E9E22DE3
D053669108FEE70D1E9114BBC095859DA3D525915C7205E816152FE89D7439DD
846462F25DF576965FAF1C0C1B1B743BBD994E00242FFDEFA94BE474F307E4A6
7CEBF56D63A39F878C7D5BD18845A938FFB37FF9FEDAE6B860BACB2461D01DCB
72030F38087A88942A7B95D7960BCB6CABE6F7F7F431691753E4955A713D2BDD
A33E3D3B9C8C9F511A1EEE4EB2B988D66A7E1E20017590BB2F0158E1B4556726
93E63318E052F0CA42B510A8947003B62A9847199D2358EB078AE64B4E066857
2353D80EFC001EFC6E1FA1E7FFDDE754B7D8FDB13757975FD08C0CC6F95F4B38
2B0CF96DDE31A7A6FF7829F63D4238914F0480A8C7D41B36E99CF3E9D6982B28
8C775BEB4BC1504490376720D877CEE8A7F99D3FA45C982B8A17E22F0BB607FB
D402ADFE610B3EBE34E32A4634427DFDA2D4A4973EC536435ACE51D666DE4DA9
C0A5A72395FDB20093B6FE9D30EFA547E39809C10B44FB5FD44A5DDC35D811BE
5EF22C766E446DBF469840A068A4C767257A847D2EE6EE83C042D755023B12AD
DD8DFC5E3B295C46CBBAC4125099EBF085D3A233B17344C9C1F5FA142A15DC9D
E3A6D5094C5BAB283D53817D331024DF8F809F61C4FAD9FD81B878A1A5AF2615
B381EF256AF8F52FF8C0E256DB21DC436B931897520E42CCDE744CF6D6261F9D
289911F717637B7D7B938D5E570BD7BE7752278BFE38D25C5419990DCD4BCF21
BDBC4D903457858FBA656E47DF061F02F7E8F67874F7593F0C145828216D17AB
0DD1C244A8A18E83C6DEEAFF012F52E19BE33CEDBC5F25EFD92D21D723066EE8
AC32F909238D526C7AB84063439D2B4B131DA346488E13C8328D530F7501252F
8182D4F72446B174B8780D1A38D62A04138F206B9BC6E61D42EF52EE92DAAE4C
4FDDD41D4D5A644C347833C0F3AFC6B822006F2A0B28C93DDA8D7835ED6F2C8D
D61EB58F7C34584AF53BF2F291057210B8F9967FD553BE90BA55F1CB14812C1D
4A4CBDB181E3A90C6544BED4EE03BB12285FD5DF4561F93FF8876E62D9E30FCD
19B5F8EB1EB27F18DFA90B60D495017CF84C16D8CFCD0A600BD9D49F398D7CD7
21A452E62F923488DC2B2D7F3C23C2344A5E328936227E59DF62EE1821694937
64BADECD13DFC138F3F0EDCB382602B391459035463DB716CCB84D1D8901FC87
4143893110CA0647927E451340CCC04BBF3CCCEAB231A27484CF67605E4C46F7
A5FBC1B9D81777DF1D4C8CC39B20AAFD31344E848C248B276F64A78BD1C84758
F957DDDAFACA25791CF7E7657F94162F7EA3A86D98C46110DC83C2840DEA5AA8
9943AC35A1C07A18A8712049BA7303AF5349233BB7210138F9358DADF921F59D
2FB6364F7955D18A37BC8BF923BE8A1684F9622EA72B13AEE55DAF394D076285
A8EE7E7D7FCF8439FAFA0FE059F3E5068B0534000F91DD96A1A5A2E9338B043A
50D7F2EF5A4D9B165ED5E3B17EF0FDD20FFC5D2936D51C5D45AF3CAC6222768F
7C42BE6A8EFA23707F404A4281A04CA24623D66D7B619674B4E4A61BCBB57519
67604EBEB1E3EB2964FD7E173F32767C760ECDF8818A75027AED3E5A966CF4D1
1EBA9E8B58D010198AB25ECD42B7FD3BCC9803B0F3084C11D766359326486ECD
41778042623249DAAEBC5AE36A7C896263674CF7EB522C4FA2C4C35387564381
AAADADC429CFA67EC8DC281216011A69D75818A5ED12FF4039991AD938AF5BE5
CD0DA7A3D80AE31AF440E03210FCEEA670866D48B9C061D4880113101F2248C4
1224C95ACAC74BF42965B615D9AB7771E3D9A6D73A5BF6FD7F56060F4814490A
021F7CAAD56B5386676482E03A2AD98425CAF89E87119D1C9D388DB359173FCF
79F2F4CF29D9FCF294386FB315735BC1F149A62BFABEA78553777DA93C9895F5
BEE6171C349D6AF0958927A749EC28B153D291597CA48C31A287B40BBEEE1A25
97086F4271823F5C3A765DBEC8A1AA0C1634EF3C93E64876A30AE44F1A730B44
2A8B03C6085A609B5849210DF790DBDAE06F7BA66763EE2A96DDB6040C63584C
61522AEB7C9535CB0507AA820E68FB567530D3E6D73DEA8E22A04ED1CE46928A
D856047D18E101977B3117428FA720CD198800232942C9BCC96B59709ECFC095
D7A0B457F04AA371B0F0A1B06BC5AABD109E6A47F9745A650872A0E6FDB9859D
BD30159E97F2F08E9743F6FBF6831EA66D65164C34CCCC428D733C95C8E97545
ACDADD99A9E191EA368EE5069806A61A8B9A08052BFD135EAF640725F5FC0BA9
EB3A09BDD1914847537B5AB9C63186689FF2F348E27F10E702B9EDDA30DBB62C
561016C5367421673A7FDF548B0A2452C433CF509F8189C85F278B8227CE4596
50A8CF420C266CA1857147187C898F905777B57EDC8B90C3DAE6CC2008D0BB06
863E3CA34E77E0FF501731EA0058B1E4D5A3EFC6F5782945DD236F0B01EC68FA
7E2773ED4386B899CBB6A3DAC9D5D6991E04C0C8704D08F0BCEB2E3DDDE1813A
AE5A4E1C61F7D55E53C70915207F6C456E4ECEF9CC36ACA6A2D402780F15656B
BBAA32BB31948FCCA768EF4CBD0623E35B9ED0493FEA70ECA6BFF5E1D7A1D563
CECB36AB1A271D580E130C686B9947EEE2B920BED025D2454CAAB6FE54C10CD8
49C607F7CBA2455E49D8E9058A3CCB571C39F23587F1B3DBAC33CBA09A7B6434
E5A344AE2950791FA58B694E4A71B6189ECEADD04524085EB7D6CD33A1EFAB97
3616002928E1CDEA5E3D7CA554AF54FD5263C447D00090BAEDFDCB39E82640C5
81A1BB394DFCD2681379C6548DCF1BA62664597136E83EC8F4188F21FC9209ED
080F06A969CA735DE3E1DC07B92D89BE470433690192D1639E3D2488A99FF8EB
228248025692F9A2BCF573C69DEBC8AF1F50BDCD06889B28E38E04E0A2D98ED1
E926127251712518740F5A78D5630A96A2301516DE4BC93F277BDB4351B957E2
F8B8D41C035CEF3451FDC85931C64BEBCF4CD07FAD529088EBE004D007E10561
AE266C8F16DBC96958E7986ACD60CE4CB023E0121FDA3A172F44EE13A3E94AFC
A9967C6A000345BC194E807AC12B6A961BEDEE06D5C10212ABB964CB95FEDFB9
67B32DC5387B0E8ADC143CE3AC932E348EBB93585106637D93931AC9AF356BFA
7C215044027899FA984987C7E20BC4207C8EAB0CA663AA46A9CC24AFB74E7594
6D213836568A23E47A6AEA77F962CF9A6B4D763D58B6EE93340B2C242C5D0D72
C2C429A8F6BB0B145F5AAB7D90A7CDD138826BEFAB4BBABCA8D6F897B9061F3C
B5A0237059AD2B37827EEA2860FEB33A4C6F6537AD95C478D5869D4497EFDC1A
F0032B4922999EFF74E9C99506C5BFCBFACF3ED71FBC29AABAD537C65DF23B33
D8E3604A495AC00D59FAEA06A5D7C7EE9B6899E18ADB9500C698FF1DCA3BBFCF
C90BF07A866FFDD9D720FC28D2BBE2FF9527B745DEDF07EE1ECA104452E346BF
F136917F388B016A35D63F17E6CC5A935B4DC745FD6130118D7FF4DA414323ED
FF9976557B42E078A63095E98EF5CBAF7E203A3B0DA76558BF3E4A47367A8731
E352F7ED9C047707FBC6ED4FA84512BC49EB824C18941181A50CE6268BA47B02
9FE30D3443F92CD7B0A859B948902B6828779AC1F5DAE90A438155099C052BED
5A698D949FB578325B480E6F47072FF3DF86208B914B786F311A44A6970EEA2D
1A736C2D5D3A288A5BE6244F236559993C09AC3D0D6DB44EF22B609B17157F3E
56A34ECA21801D16D3D9384BC0C903DA8CD875FD45F4B0C8080E6FF8501D567E
99D8ADDE89E1070919CBD5366EDA685A1E11A0E58E225BE4A719B43E47A76E6D
367874A6EA207CD905E16480A4E75B445474B1B302DCC739C6904A50FBFBA5A9
C598312DDB818B03047B8543789F37E51C14B77B53795B932422B093CAD1E41C
700419C5588EB5AD7127B8F5F1FC87B9E78C0483412110BDD695E96AE4388DE7
5D364E6FEE4BBC22D03E07B9B8236C215CD3D4F86C33CFD614E6AB80B994BD8F
5BC63EE0267C28E3ABDC9905B31C32B6FDF46C41E4ACC5E378721A7DE9B1AD89
F6EBBD635B0ACACBCB756E39501B7ADA6FDFDE354719A22E5E04B5CCB0172198
17E6D548D95EAD0763B82A9BBF152FEB3BEBC36A545D73D3ADE616202A1D0050
EE876C986F66745602ED51240DD29E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
dup 20 /lessequal put
dup 49 /infinity put
dup 112 /radical put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E93302535C253C2A7A0D2A39F364428A2F6
E75C522DF7779C207C50458653CFCBB74C28D8FB93C4A505CBCFF64175CE3168
7335D1F5349075B3FD6AB84CBA8513CAA1308A96DB6D10EA70D799A769103385
A17B45DECE34805BEF8C5E3EA1A98378F39BE12FAF47F32F1D2EDC8E2FA74450
CA4D6CEC79938A78D77D19670D63B58072FFB537BBB1C02ABD88184252025035
0CA16CFDFC7054B087641008ADE2E766C36E7AF153BF69990A4E1A7318F7F21F
68A6C1DA96E305C43B336894A7FBE48C1196B3E2631824734053D61E5318DEAC
B1D99B725675117C039A80BA59FE078D17564CB7383B763095F1E29F86904D59
C1C093BFE0CB330D82606142AC66F4EA4FB2D49F8F724C3CD5C583A2AECA1D13
28F29191D3F2B42AB2AAAAB4C3EFCF9A394D92618438571DDDE5E5943D60B899
5A19177BD30133150F3E1BE22945073B89B42CDCFE7795CB790BD7EC08C4C964
9AD04D37635E1BA3DA5BF7D74469788FC5578915CBA8D7F9883FA460C33C5F0B
37A0936F9223E1E1A00404003ADB5E3BCCE5AAF7C87815FA3D7AAA9436C5B4A1
DB404608A073885746D1103FA287C2F2455E96470D537F200ED0663ACA61AE50
61285BF00FA0C859D729E7A2BF8A8E9FD5DF70A0CF781E52E655DAD15F28ACAA
1A3A2BD2AA7DBDA4DB6F34E8FE5CF9332578C47B4BDCFCD5950C3F3CC77848E1
5CC8CC29174097A496F6DCEDBC79051B882609440E5D44C04BF9A3704366C48D
F21E2205614EFF09AF8E97E890850478552415B0E0C6D6222EC8789EB4B2266B
A18E36D95435BF6FBC81A73DF63FF33EA175DAC6CD09CF18A9F7F95D2A851D9B
7890689F52C89E24C0AD2E591D9A64DF9901FD9A7C1196BDD59D51F6282D3EE5
CDA7CB5669B52E9331CD33359F7AF133B3830C38D97BD4393C100B5FCEBBCF47
6BED9F2FAB614006FAB769E88297AFD2587F0F89CD4E43FDF3CDEAA7DEC7727F
206BF81E752BF9A551E4303384EB7A0D0A9811FA80CFB9A5647A847EFFC55EEC
F0015FD313EE97C81A26E1635C63CF5111178F779593736BE2C1DBA609A1D345
A1CC7112A272CC7F3624D96DAC77CDFD58BF71664F3C976D4715B7AF4FC2C417
C6867C8F32BCA18D69CC793B532DA68F39EB1CE26CD5729CCFABA12A513F396C
6E9338E5B75B7A29712CEE957297947D68A8C1D806BD4226924290FFE6E1B4C2
3FC1856012FCBD90A28AE47F3A7A286D169AB707C872528475D40207EB389C9B
964747FB4A126BAA7E515CF1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 34 /quotedblright put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 126 /tilde put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E03ED7D4F3EDBCA1926
2AF6A41F67AFCFBF3630C943FA111E4CCD988A7363F7C2B75EAF5830B049460E
0D2B337988F150B9182E989E7750C51BA83DF37685483F86D1F47478883F3F6A
4B7F768DA5AA89E8F163029ADD4A9209DE8A4F285766C06EA859639B92CCCDCA
F59B1C2BB8D588CA754D1257BFF76B53984DF4937093AAEF79009D32A29A4C16
FB610C7D6713482C48D7F9E8410C0F00AD6E67021056B6035534E79F05D14EF2
4E8D8275BB4D84CA40DE5FA46B84B04F3056D74AFBCBE0CBFDA6817D8F285DED
BECE9C16A633A25BC937852B42ECC2EC8A53189BE4229AFA295FA8F3E68A346D
7CFF12C183E89BC386894D2CBF066A0DA4519191783A44D623533CE8219662AF
BFD21F79039D79C54858839ACFF7A548EE410F7351ABFF58A983FAD8359EEFE3
8C6D52B77E851CB69C356068CD61EECCE33C50DC7107D05A3CA4E9333EEC5278
C93191026674945D744587A2D90362C4306A7CDB8CAB3BAB47E34EA80C664D85
BFBB062727802B6941EE3617813F9617E2A0CCECADD65D8E430E056F8082820B
887D1F19E239079ADD4F28439251ECD535C76F9DA9836D3E3504A4E404D7458F
5CB2BA0934D2C0D43936D6EEB0188999D8862B5FDA97345CC0DBCB9EDAE3490C
C512885D27E25878C9E3ACEAAFFDFDCC85404391F712CAE6A2D18B43E8A0D052
9BECB03D11C0415B571E2D526A33DAEA0FBDC4A4A22E46283FB539C4B9C0D33A
EC8CB9548397F9D6629C571B8C32F0EA19E71243D091F140A65AD3FAD2DE2DCF
0CAE0B8B9121E376DB03E2BD1236EEA844BC9B5265837797C0DE462A0607BAC2
034C2379775B6822D3797B38984992A79959A7F6F4BC51A3357F5D0837A6C24D
2375697A471CD6A9F68C959F98118A06A260215F76D84B5C9D9D7AA6FA89D681
ABA9BA543139F2CF18D92C85254D4F293E31990F414ADE12BE2229534262B3EE
DDEC61CE7F5E4B11321235D74D89086B8219CA4116F13A58FC4AD9731BAD5759
BE84880BC5E8688B1D0DFC1BC0C4075671F91C28F36B0B77CE88CA0C5E70E9D8
759CA77D7A4BF7A8D11604A85CDD77195765997BB98C8BAFFE4B1C505C49345C
F467B80E90CBA3B4C0CD38416ACEE9B2F0795BBD4C47E255183BAA8A060FDA67
D5168D93683AAF2310FF718B51B1A735EA07DB1333E3EE3961C0AB17752C838C
5DF4D31010652EBDEA00939AEE84586FA475D13B73487F4C49E96A350484E166
C0126EF63B3E175EF4FA5737A95B7746CD4E2BEF47BE5DE4408D00D9781F67E0
F35C37638AAD27B12496331AE5B5C0FF449B096A667464927D0573E14334BE1F
8A0263B649B6457818A93C50C5076799E4AC7CA1D0A872679165C2C55AEA5251
CBC97A8A36FD383802E3EC8816FC40F624F233629DFD1C080FC01DBC5B71A809
44098805B5C3F3C9211654666438DEC6D880660350D7C75413A08C5BF67670A5
7CBCF2CF4D25BD35312B001EA7B5F09F83726E97BDE17F6C3160F969C0BBFAF8
0AF11F4F65F25440F14F5F3B201BBCABA1A8001A136B3CCEBFF780D96DD39128
BCA391FA7377B941592B29B0F935E155472336592CE6C7463B2F50C39F48CF67
D2B6C4FF1921DB791A3FB7C1DB8D7BEDB67962B9490D35824DD06958AA32BD9A
34246C6AB04CBB69A818F30B302A33B369B22EF40CCF165C3DD054F8567F4583
F9E8776038E574FB9270DA444C91B6137BDF7610A67B95B8D0C605C5B26E22CF
1938C5C900A91B18E2DF3E6AB2FD0F77699304EDBC6D221235DEFB6A18F50E3B
92FB5052C298266C304B2879A43E91F091D1382173CE059038468CFCF0EC4F8C
267433B93F0B1C913D5E1F98F81F16BAC0F02CA8AC5B0BF84C1CAA1E337D3EC4
54CD6E7AA5A61697B13D1EE180927C929F4D2C04344D10E26FB075C4F8545829
4D16C26ABAE7B5FEE7CA42A73A92DD96E42C7995636EEDD8D270711E85555FC5
26BF3D6362D57266DC51D84FD2A620F54EEF401856FF5C0104F3A44B1934335A
C2B05B8DA7F5B30B7C7B3B2472BE9AE97FB8794B8ACE64D66A5272E8066BA8CA
336C2E9B037A1F6708C6051998B898836801EAE563D9D3EA75194B53A5E81264
7E9E585C754F6A04FD095ECB21130BCBDF335BAA183D2293F070F97358616B22
57703DC88979CC28F048C8DF3EDCFA0B3E570AA511689E10B6D719275717DAC2
5E540AFBAABDD78425C0F06A9B5FDFF5FBD217078EAC45D5DDDE1E5824F667BA
A834B53BC3521EBE1DD2152A81C55A400BD738CDD3C91880FF36627129689CE3
B1416EB8D3135A9DF9CCDC49FB89E8D57FC7D5C48F8F143B790B8F729ADB15A0
DF0E1C7A7090748E3DFB0F345F36E6895625E1805A73C038412D0F8EF3AF9AE4
CACB3E19894B5CFC9C70D3D4C8452CCBC1B1619FFD743ACD0789558B76BE8D31
00260C81FDD0FAF5B4BBCCF0B8131F201206F8EAB24422F4A5BD3DC3330F571F
78DE0324027D962389D744179B0C01A567AF7F804ECBA64E07E0D4300AF2D967
A829F13A1D9B26E147E38E465C190B613BC44AE3BC2702C5B8C4676136AA584C
3828C91CE9B7CE21E7CCD7D017F5CC255629E9BDE11DD75C05B823C7A6C691AB
092AD12C79EBED8EB82DB0E17ECF718C36CA3F7830B3B7C6773E0A1D5FEBF146
7F874E4F1373389D62156050EC3C2612E9A38721D529A2EE6C2954B4579A9DE3
570FDEF2D5A7EC90617FF62B4D0FEC44C95DDB82622A6CAFF9580F79235DE5B1
352EC7F2916C861C412E6E5704887859CB55B8B70F8701E6571FA65C699FEFB7
815008EF3335469CE225B264A313F813BEA4EEFC7B8940837985BEFC10C20AA7
35EE6098B5968550133329B031CA5ACFE639F9F5C54B0C4F90B433B781F4002C
C73DC95036ABE6120F0B007AAFAA93438911796A638033EF8CA5C533A74BB218
4B62C26B1BB0AD242FD5F70298309FBF9FCAD48EBA987D5F3C822783DD21CA8B
A12091299417FEBD05CFE0864461452DA76024D098D60AF2F22969F426D9CD0E
671C1B125DF45A982465EF97DAECD8FBF3EA5950CC258EABFD0B7FFEADDCFBA3
D31DA895FBD5F1128E168E086EB58563D551CCC3A98B6E77851F255CCD903793
3F1B3A89F26474A171EB7D1D60E95B10F6A7352E4C92B5A23E55918F5290E2D5
8B7F3DE588B353A3F73FAB54D7CC68893688EC09A8D014B35430F523DC2CA4DC
CF5F7B56FD0ED60CAD8174B2B66F25D4DA56A86B68F71747D1E904EF447CF40C
A0143B0302FBA146288D8B0A3C3D5769611CB7548FED8DC9D36FDFC6461388DC
0B3FCA17A2AF8073340321D430B1F06E319ABB0D27903A40586D0DFD8B078CCC
220A930D74453727EDC13CF1D9A6EC41A04B31B2AA917B34FB7818E9AAF673C5
B7009A2CA80EC15A704D96B910289339A76C3507DD4E1D82F5B8922EDDDA2573
CEF660045FBDD5B11D552692F59F52EAE71DDE3C98B6D6C080A50073E58062E5
9158F4B51C577E8B936556BC610B9526133A3737CCC1A52554686396E2C4AA54
CE314900980856FB19A07F5021C8C2DA7B52181467E5B51E621F5BD62DA7693B
F564469C56B32D40C766F0E72B6C265E22B79EF3DC4EAB42437BBF9F413EE6CB
49216F64E296C8852A7B116079077D69775531D518C3197D15474D226F12E0B4
78073A61ED9C2E1FD22B2749A5DD277A51CE0E133C609251FF95FCA675492F2D
4DC4720208373B722CC789ED37BF1772DFEF7D19E91991B09518729C2C9FE209
F1C42A380DE6B795991FB2FB2343B6067053DCA8038DA34CC113FDA2DAEBB313
F7D9B0840DCD5E87DA00010E1C64E271FC7D93167091C78FD7783C69EFC621E9
1F2165F6E5C897B23FCD59841D67339F54C4202AB2A19811D337CDBCAE2C6782
678C20742D3CDDA5DA211113206BA887CD19506A7ED04495EEA43FFC600E42DF
50765F22758D4FA02F66C6FC17BCAFA4A8BABBF4BBF68F845CB8483FD82AEE07
421FE6FE183980B5E38FEF948D1518426EC4801F1B16D29E94BE9DB71D0A82C2
6A5BA10AFFF5F85CF6C2B9FD869A98982B7F9F5B64AD983646E0D5191F64B02F
2629C2CEACE50EEF5D664E8D3FED553709FE74F482123971A85D648AE38D0F56
E9B886AFA8F9ED551EE320CF1A58C1E6DC70228CCCDC345806FD8F67907D5D05
1711255EBC48053FC2837AC2211EF1033F62E2C22D42F69A8E89D91F246C60D6
D9199FFBBD6618C9E3E08067300500F0977853F25A7BD2A04F9F91FF56629A3E
028222FBC47BEADB21B8B897DF6B43340B2A48EAD47F7AB390AD9EDF8963ACF3
5C9C77142F4DE9F2F78C5B690EB780411BA263480FA7B23C682BA40CCADEF644
3C99313BF03C156E2437D2DD92AFC9B08006FF3856CAB7B1765E8BDD55075D79
4D8DFA73C488F89CB1D338A5FF1A26ED1F59C3EF01962BB232BC26A3551EF327
053DC6E59B203B1EC8C70DF943C7CF72D7B5CC7C8229A5F6CA3F9E50BB542898
4A528F51F4DC8CF0433735A2A573F5019E0F5BF644EC4374FF213B074FD509A8
8AF9ACC29D4452C3862B0A9B1EACDA207B11032E7D9B95580BEBC1E816D76DE0
3F921764426A9B96DC66BCF3812D80360DC8E90D281A05C912C65A1691AB4B92
FB6CF606694CDD9D195EA1B6E4597E954E8D0F542C6042033B513A122E13973B
7777DA59E1C645708275AB4CB73F6C688A8106B169874B666802020A84E813E7
CDCABAAB4E8D8AFEEC2A393F14F302332EF2B8F0603DDDD3699C58958E65628A
DD7184D09A52C408705DC5BA70B93F34B1AE0105D818111955B7A79454C4D9EF
27EF60508278F1CF0E17AC5B7AC92262EB7788638EEB04279B61B5EE417191E2
457166BD53AE8C6C5230905FCBD9EA572DE500FFCFD7708742A007135CBB11F8
5DFE3B68F38748ECBF9D206F3D2CC6355F68B1F63EAFE6171EB4AFB435F83FF3
A106E1C580FA0318AF31F4500F1D17DDA83E1AA514EF1933D49A2538992AFB4D
DA22292DEFAA25F07E07050219FF1853B3E28F73CE50E10B56A1523C69AF753F
4248D322CED723D6E4E464FADF4D5BB8BC4F3173FA687F779C73E575FB690052
DEA7934CD1C33E880E9DDEA6718EF14F4188E8EA56CD6BE2156D1BCBB76A513D
19A454B3E909E65E86B68C5D7635987FA70FEAE2B387B054138E6A862D60FEDC
82300024C47DC4FF7FC4E2236DC434BAADBA0D3DBC513A11308D26A37F8FEA65
8567F95A41BDEEFB990B3BEB238D2A39DC9BE4272EF769DE896CEDAFE3620C4C
8A0E28D33CE7CEA0B86F16ED517F8AE636B305545C00B034F69696933DA0E747
925ECC15FE9CE7E6FE9E017E61716D13580045A73EC7BC0124233DDC39B0563A
F8398B575451CD3AF1C9CACD02DED09F1EB3A5CBC643E0B152F320E1F5071F24
4D2D35EA160A3A909E4D78BA5C92B11971B5CCCF20EB79FE839ED6A8BEB4B3E7
1A20F8B9385BCB2C8D28FB689B26EA211E0837760F61AD5B37DD2E2C3B237FD7
60BDD63754D1C99CF868F1ED91F22914EAA28A2BFA726A1535816A07C48024FD
7ADF4FAD1B9D3867FE36942CCBCE5473BA389E9AF78553320F42FB4E73BB55E9
9E61861041292CB91F1EA83CC8281CEBA5DAA434090050B816D531C344C6FCF4
85D9E625DBDE1520AE1CBDEEA3F9A3CD57497D3AD3637E3250402C29B3992DBA
1AED61B7CA733BB1DCC8AD3784036CCCD9173B4438A996AFFB687928E4D277E1
4ABDF7B633D4305DA75BAB92297736C5676035FA55C54BF0D276044FA9E1FC5A
ACDC59E0524E99438F1F6905BE1D9F8102B602F37A1743CC2C3A04B553FB8A5C
5831ACF7582F731A1D30DC9BFA5D0DE9B41CA2CC807251644EE74B86F6DAE6B5
EC1E38D6F7FE1AA07EA27C3D2DE4D55BE0888B8AAA7D0158C989B96F99513069
B036070E8C7D4A3E263B6F1BFC7CED4EE6D098144FBEB317B61CBBACEB680E20
4F95C7CB61DA78C286EE432C5766FA7C07AC6D528060E5AD92B585499A6B55CF
F9E5AFADBE32FDA40A75D74C7E14CA5DD2791981D2A765CE1954E4C9A1927302
DCD2F68C21F7AC97F728272BE739126A9CBC9F3879AD82A327DCC2044E8F4FAB
1DCD7ED2338FE0004C80A3D2C2A8E19E1D50843B3B71A1EC09B7C2BDDCB9A2FB
FE48EAA42C4C1CE49231E11C5B77BF80A0B5C5547F68DA250B5E175C7732771B
159BDC957AF049359F0CA27DA2BA5FAB0750369695CDD7C49D0AF150D857CAFC
594E4979964CD2DFA13184656ADC6048977D59EE0C76C866B5D7D2EFCADAEFF3
D99B48E897DEDFBB3E9FD5C898483E4624DF0200AB1A33E6C57095DD4A26EF42
AEFE99007C15C6CC0588475043D68ED0A67DF9EA38897DF5FCB5FCC55A187CC6
0809793B9082C3437593BA1638243652C0E89F881738B83994370155357F5D69
AC72809CCB1F27617BB1C5C5C73B7A0978F63586EC11EC0055ED42B707DF551B
97833AFB150E378B95CFCA37170F8374B2C3AFC7D309B5A69BA23DF5AD6320CB
91456AA1DD84A3BCC20381ACC96539846E287381380FC0A34A1BC860628A0910
30C61598B54B942B08C6E384F756C06AC230264DD409582A677D14554743A4FA
74F7514BD0F464CD775EB45ACD9156C07FE119F9F51203D0A3FDC9D2DBCE6FF8
24085668A77EAA8E740BF722535DF7FDC3236902D3EFD9BE86F8FA264C63AF1D
DBAF475AC4D54A265DD18464CFACC2006696917F6E496489D957DF916526AF93
CB960405D3118544871BD556778F3988D9276770041070F39A6F847973DF5885
FFE9DAF3EA49A7BF60F59656036EE6BDBC2D27FA5A4DB28CDF5DB554FA050558
EDC1B7A0F942886AD124F19649EED3244BF2DDD85C8EE09400CDC267EF17AC8B
10D083C9D105DB14D38FF562D826917CE55BD7A8539245BE09ABB463B492483C
5BF710958AF1D0D5C00D2FB48CC9A6BBB953524E04DED818142CFAF31A3037F8
490FFD69945A0D9631B260BD65D2F6DB99AA142ABFE3A1684FA5FD3156A26C0E
14C31BA494D878170F3899E6F3DFB135BD503206471D841E8701B4FBC5993757
1680C0F6CF7F66585E93E4C04DE7EBA72ED6CF8155EBA1485502D74524E5AC1F
2F35EC66F041E521BB953692E9AE70D4CE702255BE3043FBFF52679F846EBE94
B9432838F229222AF7F8C614D7E03E4B9521AA36531EF37879BE414D2F1196D1
BA4F3CA4CD50EE9A145A885001B8641ECBAFDB67E7778F14FA93D95835508B36
785E3641FFB98C77DE74946672D7386ACA19AFCEF2E26A67F045875BA093CDC6
9FA954F304F11B1E27E284624F1030B736C5CB7104227D1C46E275D28B0E5034
5F1362AEB739A944EC877872A752AF70F0593E0D6611B440BE6BF7A896D3FC31
CA691C8161330615ED37AEFA3BF2F9A716978C079853C1FD9AA28DFC2ED814D8
5EEF6AE51DC2C3A3073DFDF5773CD44F9CD6887B65FEE84F28C52962F9B3A11A
9A10D347E93E1BF63214046BECEA46C292C064D8CECA4C1B504CB9B5A302F8EA
DBDF4F11F0404418E3506FDBF0B05220E7B494999C1C916A059CCBFC2D243454
AF24187B029A32C05A81B006AE31AE3F6203F77DCB66CB9BE795F667F376AB0B
27D172DC5BD3319DD539804C0CC1F0C88B8795FDBDC1E68E21F9CCE8C822EFC2
6F53F42746FCACF793DC168F3BDFBEA2CE2EE4E5B74330A7F0797439FB53A54E
3C5F3B6FF940AD74919FE4EC44FB82A0DB8F4861BC6F3E58EEEEB449DF52478C
60A8D6D38D2BCC330EB4FEAFD492B73B2D8215DD755CEAD6FCCD9D5E27331C5C
E2A43D608A5E9543704D8F5BC906E3522AB071B731A31C262CB891A5FD4395D4
3488E151D9726609575A2DC269BCE0A263037EDB3DBC642D9D2B7C45484005F4
BBD2DC9F3D23EA90F11D2F2BDFCBFA1A73E57053F2646C79B9F2224E4FA4DD1D
56DE44E749A61563D8492F28172FBA919D4BE7681BA74331E1A11A16335E6008
38B5E1D15FB3EB9E0B12E3F35A6B7338C88416852803DD9D491591940635BCC8
F023B82C889DABABA1BDE892B4DE277F7BC209B8D57982863211523D47FBC11A
9FACB29BE93AF8B992A6146AF0D55E0415736A77E5C195615E496274985082CE
CDC965E886D3919E1AF8272CA97DEC7686F14D43187160D85BC8DF770C2998F1
C71642AA1001EF2714F0DC5D6400DB892814DDE52A2C80768BC45FCA3CD7E5BE
724BEF3CC776AFA63B0AD9C6862B2CD1728C0279D9B4B939276F46D6EEBD2A57
A1EA80D7455B9713EBB1A39C90734EA9A63DA9EDFD1A53504A311CDE9DA83A30
9444EC5BD5C46D879EDCE946D33A22C28D0677D478B01EC198D6B34DB045B0F0
5043FD2F629E690976C64ED0E0002657F4790DCD8BC79177A037BCB776C14B3E
79ED350B53E46688246977949BD67F7AE14D490E11641E6B0066C4E8E5F6EDD9
01CCA474B84E8CB1A7AAF7FA82EEFFB8C879575DEE9F5FCEAEC1EC1866FEEB68
06501D4FC4D0DF8944A07E9340AAC85597B5DD4766356D32D1995C1EA920019F
899D022A9C8B0D68CC369F47B76A99FBA4E64A63E009E86021ED6105657EA9D0
14EB5A2DEEE1347E8AE513940D8521D70D7193E567413026145D82DA35901780
CCD2DAA8CEEEC675D795FE699C3402F2B817E923B47932DBD0D8330D96A2B1C9
23007904658549B79B5CD8B0D60743709FE530A73B220FF709A5F499278800B4
918F15A400DFF678E1764923025D1D106DC9287EED58378F43FA45B8084A244C
7EC35935E2ABE0E620648D289183E601E473A0C2CDE774C7BC639FB7D12AF31D
D6C30062173B8B30D8E4D1A02EE6A8DD0CC4C1ECD4562C798A28890ADF707EBA
7FA8E54E9F6363A6F4689EBB6D6285ED54708A1A7835DD614425E7B4930E33CE
A73E765F5755F0767FD3403C0CF2241F676549E28AB2DEB2EE158488DE3E52D9
25B4433C1035D50E8D048480547FFCBEF86F2B958C1765BB0C99D31ED774AE79
34C56F33205DB5D2D87CD61D5BE4508A13C55926B72B8A106E9116F777D0A9E0
E6F94724378F9F9C56F92F8E492C9B3F6A391C9983E7BB0C5F563A2C71F44F0F
EF0402D690021D881E40E73C661349D358E75F80EEF8CE2ED5E0EA6AD2D79DCE
FDE3E4BFB381E5047F3962DB6B2D2CA2E039695E11DD6B279C908A08E5DAF2C3
37577EB6FA2FFBE0336499547B77799296EB1D9B0CA8FCD29BB2020D6E9DE8A1
05C9CB4BC1568123EB8CFB43D4F2A2B030D25C6F8E4672DB21DFF17335A143F9
62E71A7A4C80475CCB58856BA055477106D8E887845E44CBA7042E264FF349F1
798DF9DFDC0A77CB929183400CF9F510B5FF75DC046CA3C393E9ABF7D9BD91FD
1908A410C240ECD78AFF7400D8576132853D17D744AD5B7143375DD99F906FE4
F5369BE0224808C8D4CDCE013921474A81EEF92C484741EFA569394E79E7688A
4054D7FBE0262F87A0B636F87F2981ABB8F4C18DA8CFBD8069039A0ED533FC2B
1279EFC9FC58971CBDDB476BBEC0CEE013A633CB22B5007573D7C648D1EC2A23
E6F9CFC8B8A164A7E4B908E37850E6F1457EE5B7CF877717DE72159A4AD979C7
E9A37FDD175988943AFF06215F51943CA4CACB675200F055BD46CBA8BD05C362
DA59AEFD7C28910CD017B128163002B106758FDC524C7E8700A6040D98BB5FB0
1FDA7DC899606A2D9F8990916FE7FD9C061E6DC7A537C46517F86821C3E0ADD9
98E2038475641AA96BF4B39274C43A198693A35DA909207A552B60C9B8335AA3
C88430D57C70668A3D3768C4E3850B9E6B6D13693594A55AABA840475DA9FE54
727A92EC718558A6FE9C660F49F70CA2A35BD246EEB2AA0A21AF2D595AD2AD0F
7980844C9314306C9A3095BBEEFE87136EEF6087207E3AD6BBE2C8FE956FB6BF
0E5BAB3AA3BF044B6DB20D36EA745107C91EE812FDA5EF60682DDDCCD582C0D4
D4704BCBE16E011AE0A305328F1DD186F1324E0A0FDFF62A129D4F8017099FA0
C4285E4183091AC3638A312BA73B7DDA99F0EF60DE7B58DA4FC590D849DA10A6
78107B01564FF7DCC157CAB610C7C532CB4DC7438D61BF3B4F6C8FFE17BE0E43
B05CD7927821E8F404A51C10FC950C0BA7276BF84599C0412E54382AAB4D2837
81E84C28D5AE9647E8541E21354412F72CB54A9CB5A0A10DF57D0B2FD505717A
90B163FF22F65C8EB3F1E99AE5EEAAE665286F6E79A58FA0AC02674F06CF63C5
7FDF4E7062ABC283EE690F6A672F1A5CE8F23F61350FDF7BCC6E4D95054BAFFE
B98E6FF672D6B950DDADD6FA000BD2378CAFE0D754F92F67658DE3C5C14BCDDA
8B7BBD59EC23B6405D3AE6743C34106964A66DA93E4BC9A2C94E1844C91720C7
3A0EED020335D7E9E5AD4AFC0EBAE7F76D0C3B33DD208CD9ABDDD4B6C6FA2EBD
FD97A9D880E12F45A22258407DD0593A3F5A3EA7A07F573A174B7F3C18AE5AAD
BDCB02010FA4D8203EF0C67CDAB735A7B1FDB87DD29CE8B4151DD6EAE9B70564
7512499FAE6813356E671C9AFF3CF0A8C49B0349DB1EA60ED64FAA2A66D02F67
C3342A6583A03BB8FFB39F4000A4872C030D6A92015F0258CE20F7C7FBFE1DF7
773BF29072B50F6E11FB35AFBA03A9A68B3D16D08B4A2F0003462859CA1A3893
F0197F760F7C6CED54175A823461CA27F8A8A1B35CE05FBAF1A6B3A33F5E095F
C259728BD5476440FAD8605E8FCF9230B2374B438B761A6655D271D82E930D1F
AE5C9A502CE94878E97E92C08463BAA742241EF2CC07093068FA15563CD124B1
350548B09BFD52BF1E70914A21F97B0BA6A6322B533B89C75B5156046390667A
043A12347398234CC5EFEEE0B04C1EAED11D42CD74A6896CF5F03CA8F91ED1DC
78D0C9CA744E37BB391C3C2EE90D36EA4B3BF5A2DB7D7808DAA4E225278BAED7
63950419D178F11ECD489B8C7854705918C73AACFA7101EFDDA0238DCD4D2A24
8DC5D274D803A6A91E76F816F5A7CD5AC1D4F1E503E7FD40FE3F41B9143DB0BC
27AE8B45F5450853974F2C59CB9610A3B3FEC72DF3410F5CF8B7714C2F7D084C
CCC513E43E41E6FE72A403FA43C39FDACB5A41816EA1542B89E315F52BA4864C
C57CFAA28E04A092E3BEF453FDECF5D4A877FAE01AF8B4745A2A4C868544311D
5AE0F2C5BBE43503A5995A82BD32AFD12392494CC2952CF1F7D160823B330F1A
84B4B60564C5DEDFCA0FF48AA8C368EF399AA909479D29BC525395043F691CBF
D80AE585B9205F0DB20BB1F5980CCA8A8B972B7A91846813F3A36776B76B0713
C28AA70E9DDB075BE2C72A39ACE324E93DB913A5CEBF1B03C18233D2154879BF
F27F677AEB258654F1C358F615405482DCB4DF9EBCA5DEA8DBC0B41D3BD922BA
0A68423EE58010530EF95AA6CC68E13F6F24018B49CB0C88373FF30209EE0323
2DA27E1D21C25419CCB7C2BF0C7ED2BF853D35D39EB5411B729FC08394AF6844
FE8B2E75B8EB120197E4A90B8D503766F97F60FDA329378D4937B99D6C77FB3B
99F180D9394EB3EE9BA8BAF5604781133DB32093B0D92169F673B50D8E8E42D7
CCE0A2239445794DD4B11532A2B25FE71C4038DBD968B6178DED10BE6EB26D14
3757D3A903733F06581D2C6D80FD774DC88420ADCA6BA5DDD50BE0BAFCCC9492
3A9AC558FFDEF35649FF2AE6D0979F2D07E17630A357E35B308F2543084FAB27
DD85173AF42A6F7E95E99762F141E914BA60396F5F64452D9C47A8D8D9F1D2AE
E35DAB167DAFACA8198F023665EED57A6625E1BC7BF474DFB2FCC6A77F8C1B16
F851A4E02350BB3AD2615FFDF91CFB7F549C18A6FCB9F44C918E5B47D692175F
F0241BE5ADCB13F2BAA4D09D6BE3DBFAD387D8D00625F3F754FF598B7062EA15
C54D7614A139ED6DDDF1443F0B642FEA13338FB8E752977A78EA77C32BCE01D4
B9479EDB825E5F8DB12872750EB212BE7E77B2AD44D47BF1E497AA14DB1F2D01
91D284785D74F3A639B25F203E4F2EF5ACF5641A46E94A6B3268E1B5BB9DD69A
00652C2B9C90B0CC3BE9148CE95F350E9801613FC98BAE8150D8A3195748201D
F85B7748463F8FEE0EB21CB2A18A5E63444BDCB6C9E1E6169F435287CB39428C
842D2B159D25338029AE598BC5BACD084A269779603ACD0EDAECE566C414F19B
025C90336974633467B521A371E788312C39A5F16C6D1D5A74905AFCB2440ED5
C1FB8D64850EF1FF60791159A0697013E665104AE3FD6998B9FDD190373738A3
3F7755BE7E1C6B04D30F1990292C1D5223E3BE5D369951F5BD3B231943450335
C7C7E3A140DF1D69EE47BD346FC279A659A3AC3B0733328BCF9D9309866CA9B7
92D13FD05019E9E16F9B06120EBC1EDF021F9077A160B3E3A7198CE1534861A3
3D199231F7CBB0A0D1243FADB9FEF1D69224E62D270982158F2982A70C1948AC
9E7CB754E24188D2F08468F5A6EDA0DDC1426C485B795102A6CA4DFF2CF2EC40
1F4FB42400A78CE21E398829F5BD29D4F187EC8D1760F47DAAC05D64E7C8304A
A6A7642F388EE98E9085B0BA4FB4E34FC9F223CE1F992E7040CDD7048DB34811
C204213314A59F2B3490BCC0A3DD4682912FAF47435476DEC0D91870E63E149E
85D675723B5F052B6ACE3DB2567A5DC74875ECBFA3316A7B0B734E0DFC934FB1
ABAAC306EE260729038599E54AFE091C7BEB442A10355C42D186326D141E2B87
B909C055031C94DA4AA53818BF002843C5E070AA91F8D7D35AA90E758A79D2EF
D3D295802B4D87AC074DF7438E0C2CC54775317064DC3C09AB493D6287B2C694
691481E25547659B0542FEAF86F685FFAC1D2510DB8B6646B6A3CC17E4ACCF2A
BE22FE56CB5D04812C82B32EA2384B801F9087D4575D9940AFC93424296F5713
C0F0330944AF2B15D730F4D32642451A6E289131646C8CE170552558E3DDEF56
507A7B5D10C394BCAE7ED914DE30D31187F671D66E3A46AA61B625CF8349BEF6
2A974C8A74209EB6D54B9AC1D8554AB9EFFF5FB5AD055E122AD32CBEE031501F
93173EF22C93FDE9636AA4C2309194EBBF4610DE6335EC06FD8661C4944E5100
179700A40A3E50282963E8F05BC629E545498EA0EF8096898B9C1B61D677B805
B3A35670892F3D266A707C7D28B8ADF9C2541812470FEEEFD054F36016E67336
925C184D2336699D08C3B084B9C0FEE5D93D4E772F377DC9B3432CF985B6BF6B
5F8DE44B6E47865CDCA638A70BC2C879ACC74374C4F0D06134C803D09B93DFC6
9B29D3E1BB03821D7AEA1683C59CFDF71A458B1FA7AC4CE08B2274C97D4D7B58
820BDF24E506C006B50492E669145D15D02F5FB2E550E5A2C5B82940A902E3EC
C2BB4CE6AE69D4B803EB9EA8814544E86050E2D7CDB1862B60E3320CEDDA9613
E357A87E4428481E0AE35F40E8C598DA59FDB5C5B873783BC29DD3D6216A395D
00835DC751413C70DE04E45ADE3949FC74F0D8FF65DCF2A1F7587966EC582EB2
B8D2D31A37AE3B4D4C652835984F82E8E80A46CF38C0E180A1884D0CEA4FCFCA
34050C44CB82A3B83C45B336548393F2ECD8C0080B1D9DEAC17EBC9580BD4B20
28FCEF1EB10CD37D0D72BD69034872253D3BED85D5963BAFDD8B53835FBCD665
C6C3C2F2F2E69393688B73AE49844434AC34A49F2E7BFA87AACFD85298BCB0D6
44B5C579AC97BE9296B7A9C9F7AF4A562BC10D0C405A62B9589CB1A8538685C7
1756BC2894C56F944D4754BE72B0359FFF40ADC16F71AB4D840619EB7327919F
A60EF5396DA3278C015914A4C667006DEA42FF7DCE23207766CD498361B676C6
5F5B163132F66434FE6A87DE1437B62D3D1B9CFD798C105ACB860D9ED06CBF19
9BD9B48DBB9C1C29BF07EB5A5C9D613BEA099AC81F52C3F1878415C8C7BF6553
334C65527E7F91D7ED67B559131776A3FB1113744904F7FD064EA54CB2CCA01C
36BEC8D5B28A47051D7D319F1343C8F18460A8AD43000658E22F6023C1DB7CBD
2C7BCEC96B469E260F522901EDB67A9AF26E4C31DDC60DF38858E45661DEB0A7
F5AC7F458305F897DACB3915E0E68A04D1F5B229AACFE3D4F27849D8E58F2CE3
C54230B7231E058932A27F01A163ED482BDB13E8FB41A343C88F91951FF09B12
4BB042EC5820547D070A8B76FAAA146426E68CFA6A16B27EBF5FFE45D4E3BE0F
D2A739E7EA7906D137447DBEDDDA1EB5BAB60E5F739ED9DADC1BF7714A44EEA0
255EC6659C117F995D17FCF59A7944EB56DCC9562FC8B15B299830796ACC4C72
75660A13436F1FB21802FE086FE7E84875BB650D87785135B466240500094520
92DF4CE20725CC072CE702954160702C905EEBF0969C4285DCBCAE076B8F3B2E
F65CAFE0B0D8D0C73403620C6CB08D85725BED7FBE6A4C70430DF16A8FAB558B
DF700536823B17157D1B4896F03D5CAB5200D98F881C4DD53AD87FBC818668F5
599B4BD3B1765102570EA771381BAE4EE67374948833730463549D6455A13BD7
BDFA6A7B03E5E22C73B34BDD110A90E5D6898A64A177BF7DE2B8E47202B4E744
F65CEBFA95A009B61D07A2C2AD16B113B0CE52646A6821D9B0E0BE52DBB313D4
8FD6E64EF70BA3F83C2CD9EBCAA26F42BC569806A9A76A0EB9EF087C89025D1A
CD414A89B5377F7BBA82F5AD91839BBF58502B1EDDCC354C360E22770968A136
AD71A5F3B114EAFC4FD9934EFDEA40236BBFC0C2F58ABFA8C78A19B95AE5B670
61C8E18F957F3EC08960C5ED0F6AEE92E9E89A3E641235F5D3E158734C7F6640
C4F5CD6B8555758623691D7C555721D236ECA6DB4E67806817CF11F71A92AC11
A309641D35AB808BD7872CE00C11047BB32A02D3294F9098A4A2CA68294E66CD
F52B019DE93F9E324FB761286A9C87AAE8E39C267A8DA55DE74FACC3C7B0740F
80897D04827D14325FD1EF6DCE8D893C58B55C072614BCE598B3B45434373C4D
E71408B0A8BDD54E20CB0A8332ED7AD5785E585BA1647621C48D8196715CFB69
99AC50AEF55DAB3F08509769CBF317115372B8A0DB1BB4A37981007BF0B259E1
5FD887DA26B0E3EEAB2ABDAD2CBAB4A5D807DE98A67FA519EEEFF8F4BB803FF0
1BB7C99C1356F116EDF350398EBE34089066E262AAA0AF3598EA7ABF50AA59C6
15D89EC7D35BA681706420CAE357C0496DFF76332CCA59660A9CA5F0232B5E18
223085306E11E9AFEC9EF4A5472956AC794B38707438477BD7339C2A1FB35068
487773DAA4D556582DA3014705B1661D957F2ED085E2B37853F21014C9EB953D
EEAAD29A573AA67E6C6DCC14FEAF5CC3F767DECDE217C73C5B0D3BCBA915B9F1
FF01084666EE7C3530255E986F5E59D48A6A8B6ACF17362032BF445BC7A94197
289DB62E6BE40CC06C8F0DF835CA9F87C09571A76F7BF6139CEA89CECD7577CD
D7CFAE91ADA2E404B51898C223D4712D644628100077559AD2630D25F710E45B
7DF3C38240499C13423FB3346BC0619FCC0BEEF169A56B93312EFD98CA16C621
923B4718C59F0D355EA80153356466617F1A1B1CAC3971E5C42CD77AEA7F918E
59D355B37C56BE2CC2A7A10A27860E38A0B271E7A2DB93BC04222295BDB762D0
57C97D16AB9CDA69A60BDF7A1D79B57AC85AB2E54450C0CF884CA3CDD5E86907
E32819C8B4DA91B78352CD0327B09A5389BF561D3CEAC907557766FE370B2C8B
69121DA00DC5E4C140F6BB1639335554ADB3F991055BA92358AC42196C6225E3
5C0BC08BB85025A93406333E0BF79C4D6CD46F282D7694B97F226E1E4BE61D3B
274EF6BB8595E8DEEEA892457424CB0AEB73D856F0E5909E4EB76AF065DF1D21
07C7E77CBA691ABDF65168EDEFC9AD0B8832422ECD1073349930754E58AE1C86
D465FFD3B67FFB19C61CE49ABAEA8EB01FB09E9C85066ACF28378CAD6E28314F
2944186B54D26CB90126994F7BB1FA91AA3F5BA713C89348AD462546DB20EB29
D7EDA1A73AF8837BFE0DCE43C80FDF67DFBDC1C7047C8D37312C10AB820D870F
DAB1BF869028490C4E1EB11F417C3B366843557AEEB01CD9AC83295D6B67669C
67DC5C299B3F7F3D1EE05C41AF6F6691B4A625DE48AFED4985C8FB95745F872D
DDB4B7497F8CB34B04418D624B14BEBAB3C7043808618908C549A409AD9478C4
A093FB772A49869290FB83AC0580E6E9599E4B2431710C6203DFAA0B0AEBDCAF
1055933C06B1A823D241DC2DB549697C9AEF86F2CF175A5CAF9209A45D0C1F0D
7AA760627AB6772FACB15B55A5857883D830817F28915E36C52874F48A96C3D5
39455E83A91EDCB67B23FD355F7D3CBB363CABA54C5E9F7C17062BE70E9765BF
49D6F1F4FA3D9E38292E4305002707013A77E1B0FC25CAFF1A464BD5C8B42252
709BACF55CC46EF089E0F4239D21B59903643B2FF88DADE6730808964630AB44
B6318D8FAF683BA13C5239E4F907ED21002E6F5EBA8F0B799BC397C681CE9EFA
301EE35089C43294E4C7A2DBBCBBF8B86BAFFC7483EC9478AD2A38848F26BA9B
A919E94959E1CC6FEB81B58B15762BE092718E3294288F16D37CA8222DBDB943
FF36F7066F97FDBF239F22584283F586610A9225C2E25AAE1A3D7CB2F2B2F52E
FE01C2CABFFA53C33E687B58038D5E3FC928D09F41506AB7A33F644AC69001A5
6079B79E272AADFBB6D8FBAC3F011CEAB98F73AB84A6B198CDE22DA6929220B5
7D05F66F71ACF3E64A5DE5ABA08892C178DE659355FEF5056FA61E959121ED26
8E968CBC6F2867250E6FE2D998BE241D64B83140039758FE7AC2AF07E772B94B
D5315C0018B18F2CDDCAB63E955527FF7A45B118822B106EA6A99A3DDE5BE290
2EE5C314D4898C226DBD5986EA8F869D0D42F581AE8B014F7BB2F503B485A760
941816A325D480732D73D0B0A83993014D0F4728DB2CE35F615964C41DC91EBC
D799DF53C812B2D2DFA9DF8C4F6CEEC378BCE0B810CEEA1A7178169CE8F99B27
FA4578F2CB436BADC7F386CACC10033C04BB239E31970A05F1C865CFFF157FD6
28FA6ADDCBAF42B04002ED1304496FBC4B478B24F95F0B4398F02549067840B3
49874C6C3C0E8FC044198E3BB2AF0F31448BD85B0933D1000297F1D83CCAC561
348448A18E077A38BE6C500B4C85B93A75BF5D3A736F5AA3A0CF5623D634368B
51825B1CC34614EF77A70C99E4D9C8B5B1AB60FD80D08E440AB1DD2196216575
D5D3DB6EBDD9F040ED505962B4C545C06713914BE8BE3F5184F020C4061606A2
1F7B651C13CBF00E4D0BD8F612592ACCE5FFB0B0C51AC12A0DEAFAE5A2EC221B
BB9321018959ECE60DF2FD265824DBE214CF00C09E9D4F94A949B4545D5DF420
E104AF401D115920E5D6584666D5F4D671EB97C3AE81EDC5A46295878A9959C2
4746446D95C0D4915D4F9103FA2E939B1F12C36D9613EEC5C519F109D5162DD4
1C822F5B3A267E1FA7285EAB72BDA5C9F4CE98342DF3D74862FAF29AE83854FC
56E044601D9E1B62572AD250FCEB58C93AC52FB98354660A3C04A36D086FE558
2D704CB28CBE1B20A9E31687D2EEF1A661CA5AA13E2B5F7F2A8413254C6DC430
CACB19B0C17182BCABA686B067A00DEF78FF50E3CABDE2CF651CE1F8CA315E28
DD72B4AB4203618EA09305B3BAB029D8C532A0D689A1F99C9B4B79913171DDD1
D50BF5D527001295D3C0EF7D7C2B5AD3563414D09784ACA397E38BD91BE836BA
06C6D54BA024397FCF726C65ED78A9B1E56A0B9EA675AA8D60F23672CB6317A9
B17E637F9C7689B80D10E62BF95326D66B9868A9C248F33315F4BA1EF9A6A550
C379D1DE6EA1723A28E109A3F3281A477674B68E2212EBB9035E760923177F1B
1B8A8E8D07EE84A01C1C18BD09E266A12986396DFCFEEBC4D96238454BB94326
81487BB6D6014E9835AD41E8F97BA462255F6351506608A2913B493941A174BD
B71CA9A277731C7C67919EB96350671F93DBB3D2F26AB1337D4DB8EFA8E6E82A
AFE25DA6B7182D116B191CF8E096C8A452362A5147A0056A21B32D4BC34C5B23
CDE4C53AC8814FA57DDAD24D90A4237C831152C11910A18712CC56404CEDA5E6
63D2EE73CA6B3B3E468002EE36
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 45 /hyphen put
dup 67 /C put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B7AB327313BA
9991211FE10DE49402F33CF209D2CBFDE8EF0639019E61D6A682E17FC51FAB1E
5A30FF9E2514D99A63514DFAAB6B264FBC027EB63D36DA3035062140C6AC8E98
C4B755BB6CA3442ACF8958AAB4E8F66CB61FC450C02E9D7644F2BE1752589382
EF005AD5093D7D1B7851A2EC15F88320AECCF5FDD4038CD95B9D0CC977ED0CF8
3DCDD34E1179D1BF3E3EE8D0CAB859DCEB6624ABBC821474B63677A34146BCC5
4C9BC46863C0A0009A6A479455FF90AD1E9A94F5E1A4545779A95A99034D9E67
08CF46B573ED5D9D051C02B8A29A8EC3385A23699937944869B592677E0A9FC8
76E93995DD2C1537C183B5F81871449F658F1D7C2C04A8BB0D4B46287F962E4C
A0C4ED048A062F34A9791B2F3BFD051CC7E1EB1F5DFE62385009A31C8C67278D
AF82382BB50E5AD01087946EB64854031A0A87E5BCF2C3ABBECC36DAEA0364FD
4352611DA66DFE362D789BC1D72DF01D8D6169169EC87B11ABE754B54AEDE2DC
17104AC8F078A31850FA73DADD5995D196AEA3E36C73964CD4E3F05F99650986
6B0E2002D55D7AE51C953F9BB822802F7806C305D26E93A42DF6342F229D6832
C765A2EC1EA2DEFB185E41F8B4A223848E5AD8EA26D08AB806CAA944152B8B07
8682513B2985A9ED134FA15E899A83534F9CCE0151FB16362478CF2C71ACA936
B63F66FA04BA7BD8EDFEB821FCBAACDCF56EECDFED17F8299E429A959EE170E8
F50FCED3885CE2804477C83AA7168BA5534378644C6AFB4B59E8BE5C6170201B
A921ABFCB83B192B394DAC19EA9F201F3BE6F5646F3090933D02CFAEBA3500CF
EB7B35F398142D8E27E0E2F8429B08FC2ECE5E488BF5BACC57F66E5E838C7D05
B667B103A1A06A4E6E52C4FE9444FB11B9846102024BEB40E3AB60BABD88DE43
2E0266BAEEB25F36D100C9DF66BDFCAFA5EF8C05FF7A2178B09F86C20DD3D7D0
5200A30FBADF23198633E5BB4AEBD914AE20FAF513CB603AA09FC6FB8D49DC06
7CED8FDD64111D5AD77B4F28D73BF451986024F16CC3AF92DBD3BE8A28FAAACB
B8D9A775ED426647AA18CC5A99B594756405EFE4568A0132C5BF4517DF2EA0B8
090DCB67970E6709FCBEF3070A9A3F0C55E3E35CE2ED12557D97D2A8130B51D3
F8B616CCA442912CE54F4981CC0C167CE8EA1E5A2BB6F7EBCF26F0E9BBEA2FE2
37B9CA027CEB397A98EB2B41C0E936CEADC1521835D93924AB64ADA76742456B
412456DF91ADC2EB750AE30627C2D4A41632920DC864CEA1CBCC1129E81AEF29
42FF4BACD5C5F00EE0BB86E4D022ECF0107601CC5F7D42CB33ABF386461FBE7D
9639FA15FD329019B3827911CCB6511C120C085422B14F74DD8281B0DF6C87CA
5B8CEC358DFE678EC83E7E2C0211C7F04A9D21D9920B50CAE82553B1EBD34EA6
A4813AB903E49C81803FBC0A657E77F4E54FB384B47AF1BB9E71328C2B8D28F9
498F932210117602EA4FACFB45EA0271FED6B29346880BDE32FA1708C83C6CB1
345626C54CF645656CA001FAC4BB36ECDD707734EA7A1972336A237685905D72
2424365BF9EA0E78263EF75D27C9B972386CAF02290ACD92AA5A98150E18DB91
00DE1339BA0EDD2C9C3210401D6E68E700BAC4B80494A94B862B5FD57CEC5AA4
183ED8D33D9046C7C61B62B5E73F10D53D0F35BF63321B9AF990457611DA9D54
71B288B207BD8F54D7B75A66AAA5CC291CE4A0A5B2AA476AA0C36F63A5FD945F
3B72461CEE070396F39FFC98344ED520A736FAABF074FDEF5A6179119E19183C
E237C58EEE5C33109992199AE6590BBDC759D25F292EB6A63E777CDE6894D47A
A86E37BCF17B1C251FE8AFE84A2C1A250876E03BDC5A0CE9D2F622628A484F53
40FE85B6853DF9828F0BDF42A2ED4003BE92181E04C6DFD183733E0A17EA6FD1
7725B70F4D93BD526A723AA6C6475FB39439B93DF285EC4C772350915DC9829B
02B9FC08084EB8DDC96A1C0577AF9E4767BF7090D1319696C11AAB8E02BD64AF
861D6E6F45150739363CEF2DAB519F175715EBD21165C68BCA474FD43D613972
A0CB7C08A0F54221A734EA1EA008BD1E19B5AF96CB7029300F9A3741EF51FDC7
9A639DED175E46B6FEF47FF363010B068B2729283C229BD3B3B706551A71C834
47A2518AD0E4C4F5F7F94848D1EDAEC1FDBBA1CCF6BF89A3BD462735FC89ABF6
7D6A39084801F4CC2F2DA9DBF86D0D352F728D1B25563FC741639EEB35ACDE88
B0AC2035429245C7BB37BF8F181D80665686E85573BB065C5EA8C8D78547E99A
E7CD3FE4BE83043F35D94815A73679505A97FB94A83300327E5174713EA1046E
9A87DE3459CF22225C5208B542987DE6D140A8C76C03C7578C556BF2CB14B032
32D837E0C7BF1C1C76C22B41F37474A906DE59EA73B1E0FAEB770E2F22912B3C
F05390C77FF47CE534C1EA0786A3018D1AD07ABB9C63CBC0CEBB5DA8119AAEC0
D5C3A3EC3EAB75450C34D146CB3A14B0359E3F6241D7210371B3B1B711572556
F6CB1C96BB7DE4396B9C7547CDCD2E5E2FBBC7B5AF3CD89FEBE906D1B7C2534B
508032F71DBD6D0E092D5A82526BB50A1A8633DC2D5200A222487CBD920A9571
E36AB04B4E9821A2BA2FEA45191487D3DAD02AFE0239DA39618280E161C07940
BFA2BA6DC718F587752FCB5FD0EC7E592C12BD24A9180B541B4872E8DC4534DC
936F9FC46C2B34AE8B8C91F99D133154A323AB7BC42FE02ED39DC00A37609126
5D9318EDB73A2691F53D1657B866A6DA9450776BF174D70DEDB511F276078C76
382DF61B9C7A99CCEEA288EB3F4D9B2C61982F26F0C08463D453BE769BD2CF39
F77563CA37736B55915D2D091BE749BD10DC6EBDFD86385FFD9520CD1C49E69C
F8B91EE6D65C620A135719D2A7F12A43ACD31A5F7B232E8E721D600DB8454D76
1FCB88CF2B5AEF6EB545BB1DC5035A154B4FF452A40784967C9C9598CFC2B949
A597E3351AFB74565EF94E7706C4E73B208F8A1B0EE5BCD2C8BD9C26EA8C5DB0
C24D198106B3ADB5A0C260406E3BF50288C108A2C410AED947059FE36434305E
333813C44E0DABDEDD3CC0EBDD675BEBA0A4EDF00256EF263C92A2CFEDE5E04F
795926C783D8B71645BC5582C2B01858813903518FCD5DF259FBBF67568F4350
A170615191BC62A0B6CF94DCC88F4EC2A25B1A907C909C0973EF218348653EF2
720170218B65044B86847F59DEB46EE8B27BDC4DF2535C6ED6AC4408E3E493DE
CEDB3A9BD38F1F39EED2CFD861BADF290DDB5493A6918BB0E514A87FACACDC95
237C0D3EF928BE5F7970780CA67DF3B5F4FCFB27E30923A39B1CF02745650F24
76DA7121712946D329B26A65EA6F78161F358CE0E36C5EBB3E9D0B4CCF68649D
3E8D6D26827E2EC0D1EB4B53E3E7888AB3D3C6E4AB77AD0FD0D1E09D6FCC4373
46D2F7BFAB37482C1235AEC4430A25CC6450B4C04EA904889E77EC2E27355AF2
986C18C334F4EC979B394AE442728081DCDFA8374E2B9ADB975AA4E41511D7B3
413C970C69633C1B291FCFC655FFA4645F38A8A8E54E474CAF1CBA3E58E735B3
B69C1BF7F2363AD81E5221FD8892378BBBF384C613AFFF66637BE337400AEED2
165D1D483CEC0507E8F72394B2B1875AD689EF91627AB24D29BC7DCE17897D6B
0BD3D252B555BF07740282CA80E9F1413B9AE93DB5DCF19E69CFA95CA47DEB54
6E4BDF4449BADE2EF1DBE58A4C122D835BA5985CDCF153330659789356E37F3B
CBEC45C067C149954322397497330B1B29DCC96DE17215516D2721FFD7955F58
6E9246F696E16DCE8E8908A9F1D164B21C16E217A7CCB313B36E3F24B07BD41E
BC7F3C17381DE0CED0A830A5C4BCD0DC772158884EE11065E2229800B26C37E0
A159E55883288EEF22D3F0E16E72C77A52C7809726E2E50AAB998AC30557DAB3
53D880B5ABEDBC1BB95FA49BDE02AF5B0AD808873790515E87FC66979E4C6B8B
A691D55C70085B14855D321E9B1BAAC720CE762BCB8AAC16B8BED3183D658DCA
8BD6618E3043B0959C2CC1146CADFB6611AF9F9A9E9F30D3D3B36569CEF7FC07
5FA298B015A6DB8AE579AD85651D99A0AD5EEFCC7EABF0688D94E8C993768EDB
E8D8BDC2ED0B2900E0DF4B6CA47EDE2AA30E94B3AC918D9F8B6E6FFBD88D9DBE
179791AD20F3E01380F6A7DAB0F88041DEF07B3CA0899BB72A938F9EAB19E4D9
115BF70EEF2E321417614D374F9DD6FCF5E0EE1A00FF93AB48C1AA8656DD0E3E
7CAC54E05F9874C7585DBFEF3A493F233367BE657A7E4454EA40462E5F0859E1
87FC6C91EEE8E468A989897B29E0D06D166A92BF2803590FA73D7FB0989078EA
A7EDD1B8FDA9C48BB1D551C82BB3E0776C0B551990E8EC35A6C18A7D862847FE
6BEF08E390F326A040698CB1BFD7B38B4B56ED25A4607261114DF1D9FA92C9FB
EE5BAC156E767E92BEF4A2F4632010315D93774DE89A102D705DFDB5D7CF3D86
DEDF309CCCF2A0C6F01E7DA201FB95A039FC5C495E1DF6E99B3B7EAA4E4A4A9D
BFDF87EFAF21CA20D7FA1F5F1F0EF7683C5CF32F5DF3A2967F40B171FC5D826B
5328F2F577AB86FDE0DD404F7D7AB477C03BA4E353B73DC63787C5CBE8DEDA1B
89B34DE4CE94D0CB6233DF22AB7E186DD5A5B45024C56D98DAA7444401FBBE43
C9CFE0591EFE0A12D84558F238C761AD7F519BB1A6A6A8965DD3DD1D33B478A5
D7C6FA36C671C09C62024FB903D12266E732D1EB665D36CAAF023340634E406D
7F5218A4C41EC5698F0E64AD7B2F877B2A711F8BE7E74CBEEAE36A0C63F1F241
94C28487FDC56E19CF057ECDBABD61B3EA3AF87CF202442DF0B4315537B8F95E
D74C791FAA2918870098783BB78E21F90C60B34FE76B91958290E3171E8F98C4
C106537B3F8489E0F84E8E3F3D46537CCB4111B55560CD587C4D41E11EF2CB7E
72BDFE291591EB29C094EB30B595811D987204B4DA6FF746FBB18B60F626F4CE
5A90
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (new34.dvi)
@start /Fa 205[30 50[{}1 49.8132 /CMR6 rf /Fb 147[20
33 25 106[{}3 49.8132 /CMMI6 rf /Fc 142[100 100 21[55
127 144 6[94 105 19[89 1[89 1[89 22[79 79 5[75 6[73 73
59 59 3[33 2[58 58 6[46 46{}22 99.6264 /CMEX10 rf /Fd
135[40 3[25 3[36 1[43 1[21 37 29 24 43[35 1[20 40[33
18[{}11 66.4176 /CMMI8 rf /Fe 143[83 5[28 6[44 44 18[79
23[0 0 3[66 100 15[100 11[77 77 4[50 12[77 28 77{}16
99.6264 /CMSY10 rf /Ff 128[42 2[83 42 37 44 44 60 44
46 32 33 33 44 46 42 46 69 23 44 1[23 46 42 25 37 46
37 46 42 3[23 1[23 51 62 62 85 62 62 60 46 61 1[57 65
62 76 52 65 43 30 62 65 54 57 63 60 59 62 6[23 42 42
42 42 42 42 42 42 42 42 42 23 28 23 2[32 32 23 65 23[69
1[46 12[{}76 83.022 /CMR10 rf /Fg 252[34 3[{}1 58.1154
/CMSY7 rf /Fh 133[40 47 45 65 45 52 32 40 41 45 50 50
55 80 25 45 1[30 50 45 30 45 50 45 45 50 12[70 55 2[66
4[75 3[75 64 11[30 1[50 1[50 50 50 50 50 50 2[30 1[30
2[40 40 40[{}43 99.6264 /CMTI12 rf /Fi 140[28 28 4[59
6[22 31 39 31 39 35 35[55 3[35 2[35 1[35 35 35 35 35
4[55 1[27 27 40[{}20 66.4176 /CMR8 rf /Fj 134[48 55 3[35
3[49 1[58 85 29 51 40 33 3[45 51 42 9[57 81 7[63 7[81
77 2[81 70 74 3[76 49 1[27 27 18[64 4[46 2[61 3[55 1[55
6[45 3[43 2[62 11[{}33 99.6264 /CMMI12 rf /Fk 133[50
1[59 81 59 62 44 44 46 59 62 56 62 93 31 59 1[31 62 56
34 51 62 50 62 54 12[78 1[84 3[88 4[42 1[88 3[81 1[85
9[56 56 56 56 56 56 56 2[31 37 32[62 12[{}41 99.6264
/CMBX12 rf /Fl 136[55 1[45 28 34 35 1[42 42 47 68 21
38 1[25 42 1[25 38 1[38 1[42 7[62 3[62 1[47 2[56 1[62
74 3[32 5[59 10[42 2[42 2[42 42 42 1[25 1[25 44[{}32
83.022 /CMTI10 rf /Fm 143[59 62[71 28[55 16[35 2[55{}5
66.4176 /CMSY8 rf /Fn 129[49 1[98 49 43 51 51 70 51 54
38 38 38 51 54 49 54 81 27 51 30 27 54 49 30 43 54 43
54 49 3[27 49 27 60 2[100 73 73 70 54 72 1[66 76 73 89
61 1[50 35 73 77 64 66 75 70 69 73 3[76 1[27 27 49 49
49 49 49 49 49 49 49 49 49 27 33 27 76 1[38 38 2[81 2[49
19[81 54 54 57 11[{}80 99.6264 /CMR12 rf /Fo 137[70 73
51 52 51 70 73 66 73 111 36 2[36 73 66 40 58 73 58 1[66
29[96 21[43 32[72 12[{}22 143.462 /CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 145 100 a Fo(Computing)43 b(the)h(con\014dence)h
(lev)l(els)e(for)f(a)h(ro)t(ot-mean-square)g(test)f(of)1536
282 y(go)t(o)t(dness-of-\014t)978 552 y Fn(William)33
b(P)m(erkins)t(,)i(Mark)e(T)m(ygert)2275 516 y Fm(\003)2307
552 y Fn(,)g(Rac)m(hel)g(W)-8 b(ard)332 702 y Fl(Cour)l(ant)30
b(Institute)e(of)j(Mathematic)l(al)h(Scienc)l(es,)e(NYU,)f(251)i(Mer)l
(c)l(er)g(St.,)e(New)h(Y)-6 b(ork,)30 b(NY)f(10012)p
0 1103 3901 4 v 0 1272 a Fk(Abstract)0 1440 y Fn(The)43
b(classic)h Fj(\037)580 1403 y Fi(2)662 1440 y Fn(statistic)g(for)e
(testing)h(go)s(o)s(dness-of-\014t)e(has)i(long)g(b)s(een)g(a)f
(cornerstone)i(of)e(mo)s(dern)0 1560 y(statistical)31
b(practice.)43 b(The)31 b(statistic)g(consists)h(of)d(a)h(sum)h(in)f
(whic)m(h)i(eac)m(h)f(summand)g(in)m(v)m(olv)m(es)i(division)0
1680 y(b)m(y)e(the)g(probabilit)m(y)g(asso)s(ciated)g(with)f(the)h
(corresp)s(onding)g(bin)g(in)f(the)h(distribution)g(b)s(eing)f(tested)h
(for)0 1801 y(go)s(o)s(dness-of-\014t.)41 b(T)m(ypically)30
b(this)f(division)g(should)g(precipitate)g(rebinning)g(to)f(uniformize)
h(the)g(proba-)0 1921 y(bilities)d(asso)s(ciated)f(with)g(the)g(bins,)j
(in)c(order)h(to)f(mak)m(e)i(the)f(test)g(reasonably)h(p)s(o)m(w)m
(erful.)41 b(With)25 b(the)g(no)m(w)0 2042 y(widespread)30
b(a)m(v)-5 b(ailabilit)m(y)29 b(of)f(computers,)i(there)f(is)g(no)f
(longer)g(an)m(y)h(need)g(for)e(this.)43 b(The)29 b(presen)m(t)h(pap)s
(er)0 2162 y(pro)m(vides)37 b(e\016cien)m(t)f(blac)m(k-b)s(o)m(x)g
(algorithms)g(for)e(calculating)h(the)h(asymptotic)g(con\014dence)h
(lev)m(els)g(of)d(a)0 2282 y(v)-5 b(arian)m(t)32 b(on)f(the)h(classic)i
Fj(\037)991 2246 y Fi(2)1062 2282 y Fn(test)e(whic)m(h)h(omits)f(the)g
(problematic)h(division.)45 b(In)31 b(man)m(y)i(circumstances,)0
2403 y(it)g(is)g(also)f(feasible)i(to)e(compute)i(the)f(exact)g
(con\014dence)i(lev)m(els)f(via)f(Mon)m(te)h(Carlo)e(sim)m(ulation.)0
2574 y Fh(Keywor)-5 b(ds:)93 b Fn(c)m(hi-square,)34 b(go)s(o)s(dness)f
(of)f(\014t,)h(con\014dence,)i(signi\014cance,)f(test,)g(Euclidean)g
(norm)p 0 2680 V 0 2994 a Fk(1.)56 b(In)m(tro)s(duction)146
3186 y Fn(A)37 b(basic)f(task)h(in)g(statistics)g(is)g(to)f(ascertain)h
(whether)g(a)f(giv)m(en)h(set)g(of)f(indep)s(enden)m(t)i(and)e(iden)m
(ti-)0 3306 y(cally)f(distributed)h(\(i.i.d.\))e(dra)m(ws)i(do)s(es)e
(not)g(come)h(from)f(a)g(sp)s(eci\014ed)i(probabilit)m(y)f
(distribution)g(\(this)0 3426 y(sp)s(eci\014ed)h(distribution)f(is)f
(kno)m(wn)h(as)f(the)h(\\mo)s(del"\).)47 b(In)34 b(the)h(presen)m(t)g
(pap)s(er,)g(w)m(e)g(consider)g(the)f(case)0 3547 y(in)28
b(whic)m(h)i(the)e(dra)m(ws)h(are)f(discrete)i(random)e(v)-5
b(ariables,)30 b(taking)e(v)-5 b(alues)29 b(in)f(a)g(\014nite)h(set.)43
b(In)28 b(accordance)0 3667 y(with)39 b(the)g(standard)g(terminology)-8
b(,)41 b(w)m(e)e(will)g(refer)g(to)f(the)h(p)s(ossible)h(v)-5
b(alues)40 b(of)e(the)h(discrete)h(random)0 3787 y(v)-5
b(ariables)33 b(as)g(\\bins")g(\(\\categories,")g(\\cells,")h(and)e
(\\classes")i(are)f(common)g(synon)m(yms)i(for)d(\\bins"\).)146
3908 y(A)23 b(natural)g(approac)m(h)g(to)g(ascertaining)g(whether)i
(the)e(i.i.d.)g(dra)m(ws)h(do)f(not)g(come)g(from)g(the)g(sp)s
(eci\014ed)0 4028 y(probabilit)m(y)44 b(distribution)g(uses)h(a)d(ro)s
(ot-mean-square)h(statistic.)76 b(T)-8 b(o)43 b(construct)h(this)g
(statistic,)j(w)m(e)0 4149 y(estimate)d(the)g(probabilit)m(y)g
(distribution)h(o)m(v)m(er)f(the)g(bins)g(using)g(the)g(giv)m(en)g
(i.i.d.)g(dra)m(ws,)j(and)c(then)0 4269 y(measure)24
b(the)f(ro)s(ot-mean-square)g(di\013erence)h(b)s(et)m(w)m(een)h(this)e
(empirical)h(distribution)f(and)g(the)g(sp)s(eci\014ed)0
4389 y(mo)s(del)38 b(distribution;)j(see,)f(for)d(example,)j([1],)f
(page)f(123)f(of)g([2],)h(or)g(Section)g(2)f(b)s(elo)m(w.)59
b(If)38 b(the)g(dra)m(ws)0 4510 y(do)d(in)g(fact)f(arise)h(from)g(the)g
(sp)s(eci\014ed)i(mo)s(del,)e(then)h(with)f(high)g(probabilit)m(y)h
(this)f(ro)s(ot-mean-square)0 4630 y(is)g(not)g(large.)49
b(Th)m(us,)37 b(if)d(the)h(ro)s(ot-mean-square)g(statistic)g(is)h
(large,)f(then)g(w)m(e)g(can)g(b)s(e)g(con\014den)m(t)h(that)0
4750 y(the)d(dra)m(ws)h(do)e(not)h(arise)g(from)f(the)h(sp)s(eci\014ed)
h(probabilit)m(y)g(distribution.)146 4871 y(Let)40 b(us)h(denote)g(b)m
(y)f Fj(x)980 4886 y Fi(rms)1139 4871 y Fn(the)g(v)-5
b(alue)41 b(of)e(the)i(ro)s(ot-mean-square)e(for)h(the)g(giv)m(en)h
(i.i.d.)g(dra)m(ws;)k(let)0 4991 y(us)36 b(denote)h(b)m(y)g
Fj(X)666 5006 y Fi(rms)820 4991 y Fn(the)f(ro)s(ot-mean-square)g
(statistic)h(constructed)g(for)f(di\013eren)m(t)h(i.i.d.)f(dra)m(ws)h
(that)0 5112 y(de\014nitely)c(do)d(in)h(fact)g(come)g(from)g(the)g(sp)s
(eci\014ed)h(mo)s(del)f(distribution.)44 b(Then,)33 b(the)e
(signi\014cance)h(lev)m(el)p 0 5309 1560 4 v 111 5370
a Fg(\003)149 5400 y Ff(Corresp)r(onding)26 b(author.)0
5649 y Fl(Pr)l(eprint)3073 b(Mar)l(ch)31 b(8,)f(2011)p
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 100 a Fj(\013)42 b Fn(is)g(de\014ned)h(to)e(b)s
(e)h(the)f(probabilit)m(y)i(that)e Fj(X)1811 115 y Fi(rms)1972
100 y Fe(\025)i Fj(x)2147 115 y Fi(rms)2307 100 y Fn(\(viewing)g
Fj(X)2790 115 y Fi(rms)2950 100 y Fn(|)e(but)g(not)h
Fj(x)3514 115 y Fi(rms)3674 100 y Fn(|)f(as)0 220 y(a)c(random)h(v)-5
b(ariable\).)59 b(The)39 b(con\014dence)g(lev)m(el)g(that)f(the)g(giv)m
(en)h(i.i.d.)f(dra)m(ws)h(do)e(not)h(arise)g(from)g(the)0
340 y(sp)s(eci\014ed)c(mo)s(del)f(distribution)h(is)f(the)g(complemen)m
(t)i(of)d(the)h(signi\014cance)h(lev)m(el,)h(namely)e(1)22
b Fe(\000)h Fj(\013)q Fn(.)146 461 y(Unfortunately)-8
b(,)27 b(the)e(con\014dence)i(lev)m(els)g(for)d(the)h(simple)h(ro)s
(ot-mean-square)e(statistic)i(are)f(di\013eren)m(t)0
581 y(for)35 b(di\013eren)m(t)i(mo)s(del)f(probabilit)m(y)h
(distributions.)55 b(T)-8 b(o)35 b(a)m(v)m(oid)i(this)f(seeming)i
(incon)m(v)m(enience)h(\(at)c(least)0 702 y(asymptotically\),)f(one)e
(ma)m(y)h(w)m(eigh)m(t)g(the)g(a)m(v)m(erage)g(in)f(the)h(ro)s
(ot-mean-square)f(b)m(y)h(the)f(in)m(v)m(erses)j(of)d(the)0
822 y(mo)s(del)37 b(probabilities)g(asso)s(ciated)g(with)g(the)g(v)-5
b(arious)36 b(bins,)i(obtaining)e(the)h(classic)h Fj(\037)3270
786 y Fi(2)3346 822 y Fn(statistic;)h(see,)0 942 y(for)j(example,)k
([3])d(or)f(Remark)h(2.1)f(b)s(elo)m(w.)74 b(Ho)m(w)m(ev)m(er,)47
b(with)c(the)g(no)m(w)g(widespread)i(a)m(v)-5 b(ailabilit)m(y)43
b(of)0 1063 y(computers,)i(direct)d(use)g(of)f(the)h(ro)s
(ot-mean-square)f(statistic)h(has)g(b)s(ecome)g(feasible)g(\(and)f
(actually)0 1183 y(turns)33 b(out)f(to)g(b)s(e)g(v)m(ery)i(con)m(v)m
(enien)m(t\).)46 b(The)33 b(presen)m(t)h(pap)s(er)e(pro)m(vides)i
(e\016cien)m(t)g(blac)m(k-b)s(o)m(x)g(algorithms)0 1303
y(for)29 b(computing)i(the)f(con\014dence)i(lev)m(els)f(for)f(an)m(y)g
(sp)s(eci\014ed)i(mo)s(del)e(distribution,)h(in)f(the)h(limit)f(of)f
(large)0 1424 y(n)m(um)m(b)s(ers)h(of)d(dra)m(ws.)43
b(Calculating)28 b(con\014dence)i(lev)m(els)g(for)d(small)i(n)m(um)m(b)
s(ers)g(of)e(dra)m(ws)i(via)f(Mon)m(te)h(Carlo)0 1544
y(can)k(also)f(b)s(e)h(practical.)146 1665 y(The)k(simple)g(statistic)g
(describ)s(ed)g(ab)s(o)m(v)m(e)g(w)m(ould)g(seem)g(to)e(b)s(e)h(more)g
(natural)g(than)f(the)i(standard)0 1785 y Fj(\037)61
1749 y Fi(2)132 1785 y Fn(statistic)c(of)f([3],)g(is)g(t)m(ypically)i
(easier)f(to)e(use)i(\(since)g(it)f(do)s(es)g(not)g(require)h(an)m(y)g
(rebinning)g(of)e(data\),)0 1905 y(and)40 b(is)h(more)g(p)s(o)m(w)m
(erful)g(in)f(man)m(y)i(circumstances,)j(as)40 b(w)m(e)h(demonstrate)h
(b)s(oth)e(in)g(Section)h(6)f(b)s(elo)m(w)0 2026 y(and)h(more)h
(extensiv)m(ely)j(in)c(a)g(forthcoming)h(pap)s(er.)70
b(Ev)m(en)43 b(more)e(p)s(o)m(w)m(erful)i(is)e(the)h(com)m(bination)g
(of)0 2146 y(the)29 b(ro)s(ot-mean-square)g(statistic)g(and)g(an)g
(asymptotically)h(equiv)-5 b(alen)m(t)30 b(v)-5 b(ariation)29
b(of)f(the)h Fj(\037)3468 2110 y Fi(2)3536 2146 y Fn(statistic,)0
2267 y(suc)m(h)35 b(as)e(the)h(\(log\)lik)m(eliho)s(o)s(d-ratio)e(or)h
(\\)p Fj(G)1634 2230 y Fi(2)1673 2267 y Fn(")g(statistic;)i(the)f
(\(log\)lik)m(eliho)s(o)s(d-ratio)e(and)i Fj(\037)3452
2230 y Fi(2)3524 2267 y Fn(statistics)0 2387 y(are)24
b(asymptotically)j(equiv)-5 b(alen)m(t)26 b(when)f(the)g(dra)m(ws)h
(arise)f(from)f(the)h(mo)s(del,)i(while)e(the)g(\(log\)lik)m(eliho)s(o)
s(d-)0 2507 y(ratio)32 b(can)i(b)s(e)f(more)g(p)s(o)m(w)m(erful)h(than)
f Fj(\037)1475 2471 y Fi(2)1547 2507 y Fn(for)g(small)g(n)m(um)m(b)s
(ers)i(of)d(dra)m(ws)i(\(see,)h(for)d(example,)j([1)o(]\).)45
b(The)0 2628 y(rest)27 b(of)g(the)g(presen)m(t)i(article)e(has)g(the)g
(follo)m(wing)g(structure:)42 b(Section)28 b(2)e(details)i(the)f
(statistic)h(discussed)0 2748 y(ab)s(o)m(v)m(e,)33 b(expressing)h(the)e
(con\014dence)i(lev)m(els)g(for)d(the)h(asso)s(ciated)h(go)s(o)s
(dness-of-\014t)e(test)i(in)f(a)f(form)h(suit-)0 2868
y(able)i(for)e(computation.)47 b(Section)34 b(3)f(discusses)j(the)e
(most)g(in)m(v)m(olv)m(ed)h(part)e(of)g(the)h(computation)g(of)f(the)0
2989 y(con\014dence)26 b(lev)m(els,)i(computing)d(the)g(cum)m(ulativ)m
(e)h(distribution)f(function)g(of)f(the)g(sum)h(of)f(the)h(squares)g
(of)0 3109 y(indep)s(enden)m(t)h(cen)m(tered)g(Gaussian)f(random)f(v)-5
b(ariables.)42 b(Section)25 b(4)f(summarizes)i(the)f(metho)s(d)f(for)g
(com-)0 3230 y(puting)32 b(the)g(con\014dence)i(lev)m(els)g(of)d(the)h
(ro)s(ot-mean-square)f(statistic.)45 b(Section)32 b(5)g(applies)g(the)h
(metho)s(d)0 3350 y(to)40 b(sev)m(eral)i(examples.)70
b(Section)41 b(6)g(v)m(ery)h(brie\015y)f(illustrates)h(the)f(p)s(o)m(w)
m(er)h(of)e(the)h(ro)s(ot-mean-square.)0 3470 y(Section)33
b(7)g(dra)m(ws)g(some)h(conclusions)g(and)f(prop)s(oses)g(directions)h
(for)e(further)h(researc)m(h.)0 3740 y Fk(2.)56 b(The)38
b(simple)h(statistic)146 3935 y Fn(This)46 b(section)g(details)g(the)f
(ro)s(ot-mean-square)g(statistic)g(discussed)j(brie\015y)e(in)f
(Section)g(1,)j(and)0 4056 y(determines)32 b(its)e(probabilit)m(y)g
(distribution)h(in)f(the)g(limit)g(of)f(large)g(n)m(um)m(b)s(ers)j(of)d
(dra)m(ws,)i(assuming)g(that)0 4176 y(the)41 b(dra)m(ws)h(do)e(in)h
(fact)g(come)g(from)f(the)h(sp)s(eci\014ed)i(mo)s(del.)68
b(The)41 b(distribution)h(determined)g(in)f(this)0 4296
y(section)32 b(yields)g(the)e(con\014dence)j(lev)m(els)f(\(in)f(the)g
(limit)f(of)g(large)h(n)m(um)m(b)s(ers)h(of)e(dra)m(ws\):)43
b(Giv)m(en)32 b(a)e(v)-5 b(alue)31 b Fj(x)0 4417 y Fn(for)40
b(the)i(ro)s(ot-mean-square)f(statistic)h(constructed)h(from)d(i.i.d.)i
(dra)m(ws)g(coming)g(from)e(an)h(unkno)m(wn)0 4537 y(distribution,)31
b(the)e(con\014dence)i(lev)m(el)g(that)e(the)g(dra)m(ws)h(do)f(not)g
(come)h(from)e(the)i(sp)s(eci\014ed)h(mo)s(del)e(is)h(the)0
4658 y(probabilit)m(y)40 b(that)g(the)g(ro)s(ot-mean-square)f
(statistic)h(is)g(less)h(than)f Fj(x)f Fn(when)i(constructed)g(from)e
(i.i.d.)0 4778 y(dra)m(ws)34 b(that)e(do)g(come)i(from)e(the)h(mo)s
(del)g(distribution.)146 4898 y(T)-8 b(o)35 b(b)s(egin,)g(w)m(e)h(set)f
(notation)f(and)h(form)f(the)h(statistic)g Fj(X)42 b
Fn(to)34 b(b)s(e)h(analyzed.)51 b(Giv)m(en)35 b Fj(n)g
Fn(bins,)h(n)m(um-)0 5019 y(b)s(ered)d(1,)e(2,)h(.)16
b(.)g(.)g(,)33 b Fj(n)21 b Fe(\000)g Fn(1,)32 b Fj(n)p
Fn(,)g(w)m(e)h(denote)f(b)m(y)h Fj(p)1714 5034 y Fi(1)1753
5019 y Fn(,)f Fj(p)1861 5034 y Fi(2)1901 5019 y Fn(,)g(.)16
b(.)g(.)g(,)33 b Fj(p)2198 5034 y Fd(n)p Fm(\000)p Fi(1)2335
5019 y Fn(,)f Fj(p)2443 5034 y Fd(n)2521 5019 y Fn(the)h(probabilities)
g(asso)s(ciated)f(with)0 5139 y(the)41 b(resp)s(ectiv)m(e)h(bins)g
(under)f(the)f(sp)s(eci\014ed)i(mo)s(del;)j(of)40 b(course,)2494
5064 y Fc(P)2599 5091 y Fd(n)2599 5168 y(k)r Fi(=1)2749
5139 y Fj(p)2798 5154 y Fd(k)2881 5139 y Fn(=)h(1.)66
b(T)-8 b(o)40 b(obtain)g(a)g(dra)m(w)0 5259 y(conforming)d(to)g(the)h
(mo)s(del,)g(w)m(e)h(select)f(at)f(random)g(one)h(of)f(the)g
Fj(n)g Fn(bins,)j(with)e(probabilities)g Fj(p)3681 5274
y Fi(1)3720 5259 y Fn(,)g Fj(p)3834 5274 y Fi(2)3873
5259 y Fn(,)0 5380 y(.)16 b(.)g(.)g(,)33 b Fj(p)238 5395
y Fd(n)p Fm(\000)p Fi(1)375 5380 y Fn(,)f Fj(p)483 5395
y Fd(n)530 5380 y Fn(.)43 b(W)-8 b(e)32 b(p)s(erform)g(this)h
(selection)g(indep)s(enden)m(tly)i Fj(m)d Fn(times.)44
b(F)-8 b(or)31 b Fj(k)g Fn(=)d(1,)j(2,)h(.)16 b(.)g(.)g(,)33
b Fj(n)21 b Fe(\000)g Fn(1,)32 b Fj(n)p Fn(,)1926 5649
y(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 100 a Fn(w)m(e)41 b(denote)g(b)m(y)h
Fj(Y)674 115 y Fd(k)756 100 y Fn(the)f(fraction)f(of)g(times)i(that)e
(w)m(e)h(c)m(ho)s(ose)g(bin)g Fj(k)i Fn(\(that)e(is,)h
Fj(Y)3094 115 y Fd(k)3177 100 y Fn(is)f(the)g(n)m(um)m(b)s(er)g(of)0
220 y(times)30 b(that)f(w)m(e)h(c)m(ho)s(ose)g(bin)g
Fj(k)s Fn(,)g(divided)h(b)m(y)f Fj(m)p Fn(\);)g(ob)m(viously)-8
b(,)2288 145 y Fc(P)2393 172 y Fd(n)2393 249 y(k)r Fi(=1)2542
220 y Fj(Y)2599 235 y Fd(k)2669 220 y Fn(=)28 b(1.)42
b(W)-8 b(e)29 b(de\014ne)i Fj(X)3415 235 y Fd(k)3487
220 y Fn(to)d(b)s(e)3732 148 y Fe(p)p 3815 148 86 4 v
72 x Fj(m)0 340 y Fn(times)34 b(the)f(di\013erence)h(of)e
Fj(Y)1033 355 y Fd(k)1108 340 y Fn(from)g(its)h(exp)s(ected)i(v)-5
b(alue,)33 b(that)f(is,)1536 560 y Fj(X)1617 575 y Fd(k)1687
560 y Fn(=)1791 484 y Fe(p)p 1874 484 V 76 x Fj(m)17
b Fn(\()p Fj(Y)2071 575 y Fd(k)2135 560 y Fe(\000)23
b Fj(p)2284 575 y Fd(k)2326 560 y Fn(\))1411 b(\(1\))0
780 y(for)32 b Fj(k)f Fn(=)c(1,)33 b(2,)f(.)16 b(.)g(.)g(,)34
b Fj(n)22 b Fe(\000)h Fn(1,)32 b Fj(n)p Fn(.)44 b(Finally)-8
b(,)33 b(w)m(e)g(form)g(the)g(statistic)1682 1071 y Fj(X)j
Fn(=)1953 946 y Fd(n)1902 976 y Fc(X)1910 1188 y Fd(k)r
Fi(=1)2063 1071 y Fj(X)2152 1030 y Fi(2)2144 1095 y Fd(k)2191
1071 y Fj(;)1557 b Fn(\(2\))0 1381 y(and)40 b(no)m(w)h(determine)h(its)
f(distribution)g(in)f(the)h(limit)f(of)g(large)g Fj(m)p
Fn(.)67 b(\()p Fj(X)47 b Fn(is)41 b(the)g(square)g(of)f(the)g(ro)s(ot-)
0 1501 y(mean-square)k(statistic)956 1417 y Fc(p)p 1055
1417 971 4 v 1055 1427 a(P)1161 1453 y Fd(n)1161 1530
y(k)r Fi(=1)1293 1501 y Fn(\()p Fj(mY)1473 1516 y Fd(k)1538
1501 y Fe(\000)23 b Fj(mp)1772 1516 y Fd(k)1815 1501
y Fn(\))1853 1473 y Fi(2)1892 1501 y Fj(=m)p Fn(.)73
b(Since)43 b(the)g(square)g(ro)s(ot)e(is)i(a)f(monotonically)0
1622 y(increasing)j(function,)i(the)d(con\014dence)i(lev)m(els)g(are)e
(the)g(same)h(whether)g(determined)h(via)e Fj(X)51 b
Fn(or)44 b(via)0 1658 y Fe(p)p 83 1658 89 4 v 84 x Fj(X)8
b Fn(;)32 b(for)g(con)m(v)m(enience,)k(w)m(e)e(fo)s(cus)f(on)f
Fj(X)41 b Fn(b)s(elo)m(w.\))0 1945 y Fk(Remark)d(2.1.)k
Fn(The)33 b(classic)h Fj(\037)1201 1909 y Fi(2)1274 1945
y Fn(test)f(for)f(go)s(o)s(dness-of-\014t)f(of)i([3)o(])g(replaces)h
(\(2\))e(with)h(the)g(statistic)1666 2241 y Fj(\037)1727
2200 y Fi(2)1794 2241 y Fn(=)1949 2117 y Fd(n)1898 2147
y Fc(X)1906 2359 y Fd(k)r Fi(=1)2068 2174 y Fj(X)2157
2138 y Fi(2)2149 2200 y Fd(k)p 2068 2218 129 4 v 2087
2310 a Fj(p)2136 2325 y Fd(k)2207 2241 y Fj(;)1541 b
Fn(\(3\))0 2556 y(where)45 b Fj(X)374 2571 y Fi(1)413
2556 y Fn(,)e Fj(X)564 2571 y Fi(2)604 2556 y Fn(,)j(.)16
b(.)g(.)g(,)47 b Fj(X)961 2571 y Fd(n)p Fm(\000)p Fi(1)1098
2556 y Fn(,)c Fj(X)1249 2571 y Fd(n)1339 2556 y Fn(are)h(the)f(same)h
(as)g(in)f(\(1\))g(and)h(\(2\).)75 b Fj(\037)2858 2520
y Fi(2)2941 2556 y Fn(de\014ned)44 b(in)g(\(3\))f(has)h(the)0
2676 y(adv)-5 b(an)m(tage)33 b(that)h(its)f(con\014dence)j(lev)m(els)f
(are)e(the)h(same)g(for)f(ev)m(ery)i(mo)s(del)f(distribution,)h(indep)s
(enden)m(t)0 2797 y(of)26 b(the)h(v)-5 b(alues)28 b(of)e
Fj(p)706 2812 y Fi(1)746 2797 y Fn(,)g Fj(p)848 2812
y Fi(2)888 2797 y Fn(,)i(.)16 b(.)g(.)g(,)29 b Fj(p)1177
2812 y Fd(n)p Fm(\000)p Fi(1)1314 2797 y Fn(,)d Fj(p)1416
2812 y Fd(n)1463 2797 y Fn(,)i(in)f(the)g(limit)g(of)g(large)f(n)m(um)m
(b)s(ers)j(of)d(dra)m(ws.)43 b(In)27 b(con)m(trast,)h(using)0
2917 y Fj(X)40 b Fn(de\014ned)34 b(in)f(\(2\))f(requires)j(computing)e
(its)g(con\014dence)h(lev)m(els)h(anew)e(for)f(ev)m(ery)j(di\013eren)m
(t)f(mo)s(del.)146 3120 y(The)i(m)m(ultiv)-5 b(ariate)35
b(cen)m(tral)g(limit)g(theorem)g(sho)m(ws)h(that)e(the)h(join)m(t)f
(distribution)i(of)e Fj(X)3460 3135 y Fi(1)3499 3120
y Fn(,)h Fj(X)3642 3135 y Fi(2)3681 3120 y Fn(,)g(.)16
b(.)g(.)g(,)0 3241 y Fj(X)81 3256 y Fd(n)p Fm(\000)p
Fi(1)218 3241 y Fn(,)42 b Fj(X)368 3256 y Fd(n)457 3241
y Fn(con)m(v)m(erges)i(in)e(distribution)h(as)f Fj(m)i
Fe(!)f(1)p Fn(,)h(with)f(the)f(limiting)h(generalized)g(probabilit)m(y)
0 3361 y(densit)m(y)35 b(prop)s(ortional)c(to)1283 3563
y(exp)1449 3393 y Fc( )1528 3563 y Fe(\000)1672 3439
y Fd(n)1622 3468 y Fc(X)1629 3681 y Fd(k)r Fi(=1)1813
3496 y Fj(x)1868 3460 y Fi(2)1868 3522 y Fd(k)p 1792
3540 141 4 v 1792 3631 a Fn(2)p Fj(p)1890 3646 y Fd(k)1943
3393 y Fc(!)2093 3563 y Fj(\016)2157 3393 y Fc( )2286
3439 y Fd(n)2236 3468 y Fc(X)2243 3681 y Fd(k)r Fi(=1)2396
3563 y Fj(x)2451 3578 y Fd(k)2494 3393 y Fc(!)2590 3563
y Fj(;)1158 b Fn(\(4\))0 3828 y(where)44 b Fj(\016)j
Fn(is)d(the)f(Dirac)g(delta;)49 b(see,)d(for)d(example,)k([4])c(or)g
(Chapter)h(25)e(and)h(Example)i(15.3)d(of)h([5].)0 3948
y(The)33 b(generalized)g(probabilit)m(y)f(densit)m(y)i(\(4\))d(is)h(a)g
(cen)m(tered)h(m)m(ultiv)-5 b(ariate)33 b(Gaussian)f(concen)m(trated)h
(on)0 4068 y(a)42 b(h)m(yp)s(erplane)i(passing)f(through)f(the)g
(origin)g(\(the)h(h)m(yp)s(erplane)h(consists)g(of)d(the)i(p)s(oin)m
(ts)g(suc)m(h)g(that)0 4114 y Fc(P)105 4140 y Fd(n)105
4218 y(k)r Fi(=1)255 4189 y Fj(x)310 4204 y Fd(k)392
4189 y Fn(=)d(0\);)i(the)e(restriction)h(of)e(the)h(generalized)h
(probabilit)m(y)f(densit)m(y)i(\(4\))d(to)g(the)h(h)m(yp)s(erplane)0
4309 y(through)i(the)h(origin)f(is)g(also)h(a)f(cen)m(tered)i(m)m
(ultiv)-5 b(ariate)43 b(Gaussian.)72 b(Th)m(us,)47 b(the)42
b(distribution)i(of)d Fj(X)0 4429 y Fn(de\014ned)e(in)e(\(2\))g(con)m
(v)m(erges)i(as)f Fj(m)d Fe(!)g(1)i Fn(to)g(the)h(distribution)g(of)f
(the)g(sum)h(of)f(the)g(squares)i(of)e Fj(n)25 b Fe(\000)h
Fn(1)0 4550 y(indep)s(enden)m(t)39 b(Gaussian)e(random)g(v)-5
b(ariables)38 b(of)e(mean)i(zero)f(whose)h(v)-5 b(ariances)38
b(are)e(the)i(v)-5 b(ariances)37 b(of)0 4670 y(the)g(restricted)h(m)m
(ultiv)-5 b(ariate)37 b(Gaussian)g(distribution)g(along)f(its)h
(principal)g(axes;)j(see,)e(for)e(example,)0 4791 y([4])i(or)f(Chapter)
i(25)e(of)h([5].)59 b(Giv)m(en)39 b(these)g(v)-5 b(ariances,)41
b(the)d(follo)m(wing)g(section)h(describ)s(es)h(an)e(e\016cien)m(t)0
4911 y(algorithm)32 b(for)g(computing)g(the)h(probabilit)m(y)g(that)f
(the)h(asso)s(ciated)g(sum)g(of)e(squares)j(is)f(less)g(than)f(an)m(y)0
5031 y(particular)c(v)-5 b(alue;)30 b(this)f(probabilit)m(y)g(is)g(the)
f(desired)i(con\014dence)g(lev)m(el,)g(in)f(the)f(limit)h(of)e(large)h
(n)m(um)m(b)s(ers)0 5152 y(of)k(dra)m(ws.)45 b(See)33
b(Sections)h(4)e(and)h(5)f(for)g(further)h(details.)146
5272 y(T)-8 b(o)38 b(compute)g(the)f(v)-5 b(ariances)39
b(of)d(the)i(restricted)h(m)m(ultiv)-5 b(ariate)38 b(Gaussian)f
(distribution)i(along)d(its)0 5393 y(principal)28 b(axes,)h(w)m(e)f(m)m
(ultiply)h(the)f(diagonal)e(matrix)i Fj(D)i Fn(whose)e(diagonal)f(en)m
(tries)h(are)g(1)p Fj(=p)3409 5408 y Fi(1)3448 5393 y
Fn(,)f(1)p Fj(=p)3649 5408 y Fi(2)3688 5393 y Fn(,)h(.)16
b(.)g(.)g(,)1926 5649 y(3)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 100 a Fn(1)p Fj(=p)147 115 y
Fd(n)p Fm(\000)p Fi(1)284 100 y Fn(,)32 b(1)p Fj(=p)490
115 y Fd(n)569 100 y Fn(from)h(b)s(oth)f(the)h(left)g(and)f(the)h(righ)
m(t)g(b)m(y)h(the)f(pro)5 b(jection)33 b(matrix)g Fj(P)46
b Fn(whose)34 b(en)m(tries)g(are)1436 334 y Fj(P)1499
349 y Fd(j;k)1618 334 y Fn(=)1721 193 y Fc(\032)1837
273 y Fn(1)22 b Fe(\000)2022 233 y Fi(1)p 2018 250 43
4 v 2018 307 a Fd(n)2071 273 y Fj(;)83 b(j)33 b Fn(=)28
b Fj(k)1931 393 y Fe(\000)2022 354 y Fi(1)p 2018 370
V 2018 427 a Fd(n)2071 393 y Fj(;)83 b(j)33 b Fe(6)p
Fn(=)28 b Fj(k)3775 334 y Fn(\(5\))0 567 y(for)35 b Fj(j;)17
b(k)36 b Fn(=)d(1,)j(2,)g(.)16 b(.)g(.)g(,)38 b Fj(n)24
b Fe(\000)h Fn(1,)35 b Fj(n)h Fn(\(up)s(on)g(application)g(to)f(a)h(v)m
(ector,)h Fj(P)49 b Fn(pro)5 b(jects)37 b(on)m(to)f(the)g(orthogonal)0
688 y(complemen)m(t)f(of)d(the)h(subspace)i(consisting)f(of)e(ev)m(ery)
j(v)m(ector)f(whose)f(en)m(tries)i(are)d(all)h(the)g(same\).)45
b(The)0 808 y(en)m(tries)34 b(of)e(this)h(pro)s(duct)g
Fj(B)g Fn(=)28 b Fj(P)14 b(D)s(P)45 b Fn(are)907 1095
y Fj(B)981 1110 y Fd(j;k)1100 1095 y Fn(=)1203 891 y
Fc(8)1203 981 y(<)1203 1160 y(:)1362 967 y Fi(1)p 1343
983 74 4 v 1343 1040 a Fd(p)1379 1052 y Fb(k)1449 1006
y Fe(\000)1562 967 y Fi(1)p 1558 983 43 4 v 1558 1040
a Fd(n)1628 895 y Fc(\020)1714 967 y Fi(1)p 1697 983
69 4 v 1697 1040 a Fd(p)1733 1050 y Fb(j)1797 1006 y
Fn(+)1925 967 y Fi(1)p 1905 983 74 4 v 1905 1040 a Fd(p)1941
1052 y Fb(k)1989 895 y Fc(\021)2071 1006 y Fn(+)2200
967 y Fi(1)p 2179 983 78 4 v 2179 1040 a Fd(n)2222 1021
y Fa(2)2283 931 y Fc(P)2388 957 y Fd(n)2388 1035 y(l)q
Fi(=1)2543 967 y(1)p 2530 983 60 4 v 2530 1040 a Fd(p)2566
1052 y Fb(l)2600 1006 y Fj(;)83 b(j)34 b Fn(=)27 b Fj(k)1471
1185 y Fe(\000)1562 1146 y Fi(1)p 1558 1162 43 4 v 1558
1220 a Fd(n)1628 1075 y Fc(\020)1714 1146 y Fi(1)p 1697
1162 69 4 v 1697 1220 a Fd(p)1733 1230 y Fb(j)1797 1185
y Fn(+)1925 1146 y Fi(1)p 1905 1162 74 4 v 1905 1220
a Fd(p)1941 1232 y Fb(k)1989 1075 y Fc(\021)2071 1185
y Fn(+)2200 1146 y Fi(1)p 2179 1162 78 4 v 2179 1220
a Fd(n)2222 1201 y Fa(2)2283 1110 y Fc(P)2388 1137 y
Fd(n)2388 1214 y(l)q Fi(=1)2543 1146 y(1)p 2530 1162
60 4 v 2530 1220 a Fd(p)2566 1232 y Fb(l)2600 1185 y
Fj(;)83 b(j)34 b Fe(6)p Fn(=)27 b Fj(k)3775 1095 y Fn(\(6\))0
1383 y(for)34 b Fj(j;)17 b(k)35 b Fn(=)c(1,)j(2,)h(.)16
b(.)g(.)g(,)36 b Fj(n)24 b Fe(\000)g Fn(1,)34 b Fj(n)p
Fn(.)50 b(Clearly)-8 b(,)36 b Fj(B)k Fn(is)35 b(self-adjoin)m(t.)50
b(By)35 b(construction,)h(exactly)h(one)d(of)h(the)0
1503 y(eigen)m(v)-5 b(alues)27 b(of)e Fj(B)30 b Fn(is)c(0.)41
b(The)26 b(other)g(eigen)m(v)-5 b(alues)27 b(of)e Fj(B)30
b Fn(are)25 b(the)h(m)m(ultiplicativ)m(e)i(in)m(v)m(erses)g(of)d(the)g
(desired)0 1624 y(v)-5 b(ariances)34 b(of)e(the)h(restricted)h(m)m
(ultiv)-5 b(ariate)33 b(Gaussian)g(distribution)h(along)e(its)h
(principal)g(axes.)0 1789 y Fk(Remark)47 b(2.2.)f Fn(The)41
b Fj(n)28 b Fe(\002)g Fj(n)40 b Fn(matrix)h Fj(B)46 b
Fn(de\014ned)c(in)e(\(6\))g(is)h(the)g(sum)h(of)e(a)g(diagonal)g
(matrix)h(and)f(a)0 1909 y(lo)m(w-rank)e(matrix.)58 b(The)38
b(metho)s(ds)h(of)e([6)o(,)i(7])e(for)g(computing)h(the)g(eigen)m(v)-5
b(alues)39 b(of)e(suc)m(h)i(a)e(matrix)h Fj(B)0 2030
y Fn(require)j(only)e(either)h Fe(O)s Fn(\()p Fj(n)1016
1994 y Fi(2)1056 2030 y Fn(\))f(or)g Fe(O)s Fn(\()p Fj(n)p
Fn(\))g(\015oating-p)s(oin)m(t)g(op)s(erations.)64 b(The)40
b Fe(O)s Fn(\()p Fj(n)3046 1994 y Fi(2)3085 2030 y Fn(\))f(metho)s(ds)i
(of)d([6,)j(7])0 2150 y(are)33 b(usually)g(more)g(e\016cien)m(t)i(than)
d(the)h Fe(O)s Fn(\()p Fj(n)p Fn(\))g(metho)s(d)g(of)f([7],)h(unless)h
Fj(n)f Fn(is)g(impractically)h(large.)0 2316 y Fk(Remark)45
b(2.3.)g Fn(It)39 b(is)g(not)g(hard)g(to)f(accommo)s(date)h
(homogeneous)h(linear)g(constrain)m(ts)g(of)e(the)h(form)0
2361 y Fc(P)105 2388 y Fd(n)105 2465 y(k)r Fi(=1)255
2436 y Fj(c)297 2451 y Fd(k)356 2436 y Fj(x)411 2451
y Fd(k)482 2436 y Fn(=)28 b(0)k(\(where)i Fj(c)1029 2451
y Fi(1)1069 2436 y Fn(,)e Fj(c)1170 2451 y Fi(2)1210
2436 y Fn(,)h(.)16 b(.)g(.)g(,)33 b Fj(c)1501 2451 y
Fd(n)p Fm(\000)p Fi(1)1639 2436 y Fn(,)f Fj(c)1740 2451
y Fd(n)1820 2436 y Fn(are)h(real)g(n)m(um)m(b)s(ers\))h(in)f(addition)g
(to)f(the)i(requiremen)m(t)0 2556 y(that)219 2482 y Fc(P)324
2508 y Fd(n)324 2586 y(k)r Fi(=1)474 2556 y Fj(x)529
2571 y Fd(k)612 2556 y Fn(=)41 b(0.)66 b(Accoun)m(ting)41
b(for)f(an)m(y)g(additional)h(constrain)m(ts)g(is)g(en)m(tirely)h
(analogous)e(to)g(the)0 2677 y(pro)s(cedure)34 b(detailed)g(ab)s(o)m(v)
m(e)g(for)e(the)h(particular)h(constrain)m(t)f(that)2537
2602 y Fc(P)2642 2628 y Fd(n)2642 2706 y(k)r Fi(=1)2792
2677 y Fj(x)2847 2692 y Fd(k)2918 2677 y Fn(=)28 b(0.)45
b(The)34 b(estimation)f(of)0 2797 y(parameters)e(from)f(the)g(data)f
(in)i(order)f(to)f(sp)s(ecify)j(the)e(mo)s(del)g(can)g(imp)s(ose)h(suc)
m(h)g(extra)g(homogeneous)0 2918 y(linear)44 b(constrain)m(ts;)50
b(see,)e(for)43 b(example,)48 b(Chapter)c(25)f(of)g([5].)76
b(A)44 b(detailed)g(treatmen)m(t)g(is)g(a)m(v)-5 b(ailable)0
3038 y(in)33 b([8].)0 3289 y Fk(3.)56 b(The)38 b(sum)g(of)g(the)f
(squares)i(of)e(indep)s(enden)m(t)j(cen)m(tered)d(Gaussian)i(random)g
(v)-6 b(ariables)146 3465 y Fn(This)26 b(section)g(describ)s(es)g
(e\016cien)m(t)g(algorithms)f(for)f(ev)-5 b(aluating)25
b(the)g(cum)m(ulativ)m(e)h(distribution)g(func-)0 3585
y(tion)g(\(cdf)7 b(\))25 b(of)h(the)g(sum)h(of)e(the)h(squares)h(of)e
(indep)s(enden)m(t)j(cen)m(tered)g(Gaussian)e(random)g(v)-5
b(ariables.)42 b(The)0 3706 y(principal)33 b(to)s(ol)e(is)h(the)g
(follo)m(wing)h(theorem,)f(expressing)j(the)d(cdf)g(as)g(an)g(in)m
(tegral)g(suitable)h(for)e(ev)-5 b(alua-)0 3826 y(tion)33
b(via)f(quadratures)i(\(see,)g(for)e(example,)i(Remark)f(3.4)f(b)s(elo)
m(w\).)0 3992 y Fk(Theorem)26 b(3.1.)33 b Fh(Supp)-5
b(ose)24 b(that)i Fj(n)f Fh(is)g(a)f(p)-5 b(ositive)24
b(inte)-5 b(ger,)27 b Fj(X)2240 4007 y Fi(1)2279 3992
y Fh(,)e Fj(X)2415 4007 y Fi(2)2455 3992 y Fh(,)h(.)15
b(.)g(.)g(,)27 b Fj(X)2784 4007 y Fd(n)p Fm(\000)p Fi(1)2921
3992 y Fh(,)e Fj(X)3057 4007 y Fd(n)3128 3992 y Fh(ar)-5
b(e)25 b(i.i.d.)f(Gaussian)0 4112 y(r)-5 b(andom)32 b(variables)h(of)g
(zer)-5 b(o)33 b(me)-5 b(an)33 b(and)f(unit)i(varianc)-5
b(e,)33 b(and)g Fj(\033)2384 4127 y Fi(1)2424 4112 y
Fh(,)g Fj(\033)2542 4127 y Fi(2)2582 4112 y Fh(,)g(.)15
b(.)g(.)g(,)34 b Fj(\033)2899 4127 y Fd(n)p Fm(\000)p
Fi(1)3036 4112 y Fh(,)f Fj(\033)3154 4127 y Fd(n)3235
4112 y Fh(ar)-5 b(e)34 b(p)-5 b(ositive)32 b(r)-5 b(e)g(al)0
4232 y(numb)g(ers.)44 b(Supp)-5 b(ose)34 b(in)h(addition)f(that)h
Fj(X)43 b Fh(is)34 b(the)h(r)-5 b(andom)34 b(variable)1580
4479 y Fj(X)h Fn(=)1850 4354 y Fd(n)1800 4384 y Fc(X)1807
4596 y Fd(k)r Fi(=1)1960 4479 y Fe(j)p Fj(\033)2043 4494
y Fd(k)2103 4479 y Fj(X)2184 4494 y Fd(k)2226 4479 y
Fe(j)2254 4437 y Fi(2)2293 4479 y Fj(:)1455 b Fn(\(7\))146
4744 y Fh(Then,)34 b(the)h(cumulative)g(distribution)g(function)f(\(c)
-5 b(df)10 b(\))35 b Fj(P)48 b Fh(of)34 b Fj(X)43 b Fh(is)368
5007 y Fj(P)14 b Fn(\()p Fj(x)p Fn(\))27 b(=)707 4872
y Fc(Z)807 4898 y Fm(1)762 5097 y Fi(0)898 5007 y Fn(Im)1031
4837 y Fc( )2031 4940 y Fj(e)2076 4904 y Fi(1)p Fm(\000)p
Fd(t)2212 4940 y Fj(e)2257 4904 y Fd(it)2306 4856 y Fm(p)p
2366 4856 43 3 v 2366 4904 a Fd(n)p 1120 4985 2205 4
v 1120 5091 a Fj(\031)1195 5010 y Fc(\000)1241 5091 y
Fj(t)22 b Fe(\000)1498 5051 y Fi(1)p 1408 5068 216 4
v 1408 5126 a(1)p Fm(\000)p Fd(i)1522 5078 y Fm(p)p 1581
5078 43 3 v 48 x Fd(n)1634 5010 y Fc(\001)1696 5016 y(Q)1790
5042 y Fd(n)1790 5120 y(k)r Fi(=1)1939 5004 y Fc(p)p
2039 5004 1285 4 v 87 x Fn(1)g Fe(\000)h Fn(2\()p Fj(t)f
Fe(\000)g Fn(1\))p Fj(\033)2599 5056 y Fi(2)2595 5118
y Fd(k)2639 5091 y Fj(=x)g Fn(+)g(2)p Fj(it\033)3039
5056 y Fi(2)3035 5118 y Fd(k)3079 5019 y Fe(p)p 3162
5019 59 4 v 72 x Fj(n=x)3334 4837 y Fc(!)3446 5007 y
Fj(dt)243 b Fn(\(8\))0 5280 y Fh(for)32 b(any)g(p)-5
b(ositive)31 b(r)-5 b(e)g(al)31 b(numb)-5 b(er)32 b Fj(x)p
Fh(,)h(and)e Fj(P)14 b Fn(\()p Fj(x)p Fn(\))27 b(=)h(0)k
Fh(for)f(any)h(nonp)-5 b(ositive)31 b(r)-5 b(e)g(al)31
b(numb)-5 b(er)32 b Fj(x)p Fh(.)44 b(The)31 b(squar)-5
b(e)0 5400 y(r)g(o)g(ots)35 b(in)f(\(8\))h(denote)f(the)h(princip)-5
b(al)34 b(br)-5 b(anch,)34 b(and)51 b Fn(Im)35 b Fh(takes)g(the)f
(imaginary)g(p)-5 b(art.)1926 5649 y Fn(4)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 100 a Fh(Pr)-5 b(o)g(of.)48 b
Fn(F)-8 b(or)32 b(an)m(y)h Fj(k)e Fn(=)d(1,)k(2,)h(.)16
b(.)g(.)g(,)33 b Fj(n)23 b Fe(\000)f Fn(1,)33 b Fj(n)p
Fn(,)f(the)h(c)m(haracteristic)i(function)e(of)f Fe(j)p
Fj(X)3032 115 y Fd(k)3074 100 y Fe(j)3102 63 y Fi(2)3174
100 y Fn(is)1568 364 y Fj(')1632 379 y Fi(1)1672 364
y Fn(\()p Fj(t)p Fn(\))27 b(=)2085 297 y(1)p 1924 341
371 4 v 1924 361 a Fe(p)p 2007 361 288 4 v 79 x Fn(1)22
b Fe(\000)g Fn(2)p Fj(it)2305 364 y(;)1443 b Fn(\(9\))0
634 y(using)26 b(the)g(principal)h(branc)m(h)f(of)g(the)g(square)h(ro)s
(ot.)40 b(By)26 b(the)g(indep)s(endence)i(of)e Fj(X)3024
649 y Fi(1)3063 634 y Fn(,)g Fj(X)3197 649 y Fi(2)3236
634 y Fn(,)h(.)16 b(.)g(.)g(,)28 b Fj(X)3555 649 y Fd(n)p
Fm(\000)p Fi(1)3692 634 y Fn(,)e Fj(X)3826 649 y Fd(n)3873
634 y Fn(,)0 754 y(the)33 b(c)m(haracteristic)h(function)f(of)g(the)g
(random)f(v)-5 b(ariable)33 b Fj(X)40 b Fn(de\014ned)34
b(in)f(\(7\))f(is)h(therefore)1114 1050 y Fj(')p Fn(\()p
Fj(t)p Fn(\))28 b(=)1463 926 y Fd(n)1421 955 y Fc(Y)1420
1168 y Fd(k)r Fi(=1)1565 1050 y Fj(')1629 1065 y Fi(1)1669
1050 y Fn(\()p Fj(t\033)1801 1009 y Fi(2)1797 1075 y
Fd(k)1840 1050 y Fn(\))g(=)2360 983 y(1)p 2020 1027 730
4 v 2020 1057 a Fc(Q)2114 1084 y Fd(n)2114 1161 y(k)r
Fi(=1)2263 1047 y Fc(p)p 2363 1047 387 4 v 85 x Fn(1)22
b Fe(\000)g Fn(2)p Fj(it\033)2709 1098 y Fi(2)2705 1160
y Fd(k)2759 1050 y Fj(:)941 b Fn(\(10\))0 1355 y(The)34
b(probabilit)m(y)f(densit)m(y)i(function)e(of)f Fj(X)40
b Fn(is)33 b(therefore)713 1629 y Fj(p)p Fn(\()p Fj(x)p
Fn(\))28 b(=)1064 1562 y(1)p 1035 1607 108 4 v 1035 1698
a(2)p Fj(\031)1169 1494 y Fc(Z)1268 1520 y Fm(1)1224
1719 y(\0001)1370 1629 y Fj(e)1415 1588 y Fm(\000)p Fd(itx)1580
1629 y Fj(')p Fn(\()p Fj(t)p Fn(\))17 b Fj(dt)28 b Fn(=)2029
1562 y(1)p 1999 1607 V 1999 1698 a(2)p Fj(\031)2133 1494
y Fc(Z)2233 1520 y Fm(1)2189 1719 y(\0001)2613 1562 y
Fj(e)2658 1526 y Fm(\000)p Fd(itx)p 2345 1607 730 4 v
2345 1637 a Fc(Q)2439 1663 y Fd(n)2439 1741 y(k)r Fi(=1)2588
1627 y Fc(p)p 2688 1627 387 4 v 84 x Fn(1)22 b Fe(\000)h
Fn(2)p Fj(it\033)3035 1677 y Fi(2)3031 1739 y Fd(k)3101
1629 y Fj(dt)540 b Fn(\(11\))0 1919 y(for)32 b(an)m(y)h(real)g(n)m(um)m
(b)s(er)h Fj(x)p Fn(,)f(and)g(the)g(cdf)g(of)f Fj(X)40
b Fn(is)669 2194 y Fj(P)14 b Fn(\()p Fj(x)p Fn(\))27
b(=)1008 2058 y Fc(Z)1108 2085 y Fd(x)1063 2284 y Fm(\0001)1210
2194 y Fj(p)p Fn(\()p Fj(y)t Fn(\))17 b Fj(dy)29 b Fn(=)1645
2127 y(1)p 1645 2171 49 4 v 1645 2262 a(2)1726 2194 y(+)1871
2127 y Fj(i)p 1834 2171 108 4 v 1834 2262 a Fn(2)p Fj(\031)1968
2194 y Fn(PV)2109 2058 y Fc(Z)2209 2085 y Fm(1)2164 2284
y(\0001)2623 2127 y Fj(e)2668 2090 y Fm(\000)p Fd(itx)p
2321 2171 798 4 v 2321 2276 a Fj(t)2389 2201 y Fc(Q)2483
2227 y Fd(n)2483 2305 y(k)r Fi(=1)2633 2191 y Fc(p)p
2732 2191 387 4 v 2732 2276 a Fn(1)22 b Fe(\000)h Fn(2)p
Fj(it\033)3079 2242 y Fi(2)3075 2304 y Fd(k)3145 2194
y Fj(dt)496 b Fn(\(12\))0 2484 y(for)32 b(an)m(y)h(real)g(n)m(um)m(b)s
(er)h Fj(x)p Fn(,)f(where)h(PV)g(denotes)g(the)f(principal)g(v)-5
b(alue.)146 2604 y(It)35 b(follo)m(ws)g(from)f(the)h(fact)f(that)g
Fj(X)42 b Fn(is)35 b(almost)g(surely)h(p)s(ositiv)m(e)f(that)g(the)f
(cdf)h Fj(P)14 b Fn(\()p Fj(x)p Fn(\))34 b(is)h(iden)m(tically)0
2724 y(zero)f(for)e Fj(x)e Fe(\024)f Fn(0;)k(there)h(is)g(no)f(need)i
(to)d(calculate)j(the)e(cdf)h(for)f Fj(x)c Fe(\024)g
Fn(0.)45 b(Substituting)35 b Fj(t)29 b Fe(7!)f Fj(t=x)34
b Fn(in)g(\(12\))0 2845 y(yields)g(that)f(the)g(cdf)f(is)931
3120 y Fj(P)14 b Fn(\()p Fj(x)p Fn(\))27 b(=)1279 3052
y(1)p 1279 3097 49 4 v 1279 3188 a(2)1360 3120 y(+)1505
3052 y Fj(i)p 1468 3097 108 4 v 1468 3188 a Fn(2)p Fj(\031)1603
3120 y Fn(PV)1743 2984 y Fc(Z)1843 3010 y Fm(1)1799 3209
y(\0001)2329 3052 y Fj(e)2374 3016 y Fm(\000)p Fd(it)p
1955 3097 903 4 v 1955 3202 a Fj(t)2023 3127 y Fc(Q)2117
3153 y Fd(n)2117 3231 y(k)r Fi(=1)2267 3117 y Fc(p)p
2367 3117 491 4 v 85 x Fn(1)21 b Fe(\000)i Fn(2)p Fj(it\033)2713
3167 y Fi(2)2709 3229 y Fd(k)2753 3202 y Fj(=x)2884 3120
y(dt)757 b Fn(\(13\))0 3409 y(for)40 b(an)m(y)g(p)s(ositiv)m(e)i(real)e
(n)m(um)m(b)s(er)i Fj(x)p Fn(,)g(where)g(again)e(PV)h(denotes)h(the)e
(principal)h(v)-5 b(alue.)67 b(The)41 b(branc)m(h)0 3530
y(cuts)33 b(for)g(the)g(in)m(tegrand)g(in)g(\(13\))f(are)g(all)h(on)f
(the)h(lo)m(w)m(er)h(half)e(of)g(the)h(imaginary)g(axis.)146
3650 y(Though)43 b(the)g(in)m(tegration)g(in)g(\(13\))e(is)i(along)f
(\()p Fe(\0001)p Fj(;)17 b Fe(1)p Fn(\),)45 b(w)m(e)e(ma)m(y)g(shift)g
(con)m(tours)g(and)g(instead)0 3770 y(in)m(tegrate)33
b(along)f(the)h(ra)m(ys)1291 3810 y Fc(\010)1349 3891
y Fn(\()p Fe(\000)1464 3814 y(p)p 1548 3814 59 4 v 1548
3891 a Fj(n)22 b Fe(\000)h Fj(i)p Fn(\))p Fj(t)f Fn(+)g
Fj(i)56 b Fn(:)g Fj(t)27 b Fe(2)i Fn(\(0)p Fj(;)17 b
Fe(1)p Fn(\))2552 3810 y Fc(\011)3727 3891 y Fn(\(14\))0
4065 y(and)1308 4105 y Fc(\010)1366 4185 y Fn(\()1404
4109 y Fe(p)p 1487 4109 V 76 x Fj(n)23 b Fe(\000)f Fj(i)p
Fn(\))p Fj(t)h Fn(+)f Fj(i)56 b Fn(:)f Fj(t)28 b Fe(2)g
Fn(\(0)p Fj(;)17 b Fe(1)p Fn(\))2491 4105 y Fc(\011)2565
4185 y Fj(;)1135 b Fn(\(15\))0 4360 y(obtaining)33 b(from)f(\(13\))g
(that)83 4692 y Fj(P)14 b Fn(\()p Fj(x)p Fn(\))27 b(=)469
4625 y Fj(i)p 432 4669 108 4 v 432 4760 a Fn(2)p Fj(\031)566
4556 y Fc(Z)666 4583 y Fm(1)622 4782 y Fi(0)757 4522
y Fc( )1693 4625 y Fj(e)1738 4588 y Fi(1)p Fm(\000)p
Fd(t)1874 4625 y Fj(e)1919 4588 y Fm(\000)p Fd(it)2023
4540 y Fm(p)p 2083 4540 43 3 v 2083 4588 a Fd(n)p 846
4669 2131 4 v 846 4695 a Fc(\000)892 4775 y Fj(t)22 b
Fe(\000)1149 4736 y Fi(1)p 1059 4752 216 4 v 1059 4810
a(1+)p Fd(i)1173 4762 y Fm(p)p 1232 4762 43 3 v 48 x
Fd(n)1284 4695 y Fc(\001)1347 4700 y(Q)1441 4727 y Fd(n)1441
4804 y(k)r Fi(=1)1590 4689 y Fc(p)p 1690 4689 1287 4
v 86 x Fn(1)g Fe(\000)g Fn(2\()p Fj(t)g Fe(\000)h Fn(1\))p
Fj(\033)2250 4741 y Fi(2)2246 4803 y Fd(k)2289 4775 y
Fj(=x)g Fe(\000)f Fn(2)p Fj(it\033)2691 4741 y Fi(2)2687
4803 y Fd(k)2731 4703 y Fe(p)p 2814 4703 59 4 v 72 x
Fj(n=x)1187 5033 y Fe(\000)2180 4966 y Fj(e)2225 4930
y Fi(1)p Fm(\000)p Fd(t)2362 4966 y Fj(e)2407 4930 y
Fd(it)2456 4882 y Fm(p)p 2515 4882 43 3 v 48 x Fd(n)p
1307 5010 2129 4 v 1307 5036 a Fc(\000)1352 5117 y Fj(t)h
Fe(\000)1610 5077 y Fi(1)p 1519 5094 216 4 v 1519 5151
a(1)p Fm(\000)p Fd(i)1633 5104 y Fm(p)p 1692 5104 43
3 v 47 x Fd(n)1745 5036 y Fc(\001)1807 5042 y(Q)1902
5068 y Fd(n)1902 5146 y(k)r Fi(=1)2051 5030 y Fc(p)p
2151 5030 1285 4 v 87 x Fn(1)f Fe(\000)g Fn(2\()p Fj(t)g
Fe(\000)h Fn(1\))p Fj(\033)2711 5082 y Fi(2)2707 5144
y Fd(k)2750 5117 y Fj(=x)f Fn(+)g(2)p Fj(it\033)3150
5082 y Fi(2)3146 5144 y Fd(k)3190 5045 y Fe(p)p 3273
5045 59 4 v 72 x Fj(n=x)3446 4863 y Fc(!)3558 5033 y
Fj(dt)83 b Fn(\(16\))0 5350 y(for)32 b(an)m(y)h(p)s(ositiv)m(e)h(real)f
(n)m(um)m(b)s(er)h Fj(x)p Fn(.)44 b(Com)m(bining)34 b(\(16\))e(and)g
(the)h(de\014nition)h(of)e(\\Im")g(yields)j(\(8\).)p
3829 5350 4 66 v 3833 5287 59 4 v 3833 5350 V 3891 5350
4 66 v 1926 5649 a(5)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 100 a Fk(Remark)35 b(3.2.)k Fn(W)-8
b(e)30 b(c)m(hose)h(the)f(con)m(tours)h(\(14\))e(and)h(\(15\))f(so)g
(that)h(the)g(absolute)g(v)-5 b(alue)30 b(of)g(the)g(expres-)0
220 y(sion)j(under)g(the)g(square)h(ro)s(ot)e(in)h(\(8\))f(is)h
(greater)f(than)2088 135 y Fc(p)p 2188 135 411 4 v 85
x Fj(n=)p Fn(\()p Fj(n)22 b Fn(+)g(1\).)43 b(Therefore,)677
358 y Fc(\014)677 418 y(\014)677 478 y(\014)677 538 y(\014)677
597 y(\014)754 408 y Fd(n)711 438 y Fc(Y)711 650 y Fd(k)r
Fi(=1)856 409 y Fc(q)p 956 409 1285 4 v 124 x Fn(1)21
b Fe(\000)i Fn(2\()p Fj(t)f Fe(\000)h Fn(1\))p Fj(\033)1516
498 y Fi(2)1512 560 y Fd(k)1555 533 y Fj(=x)f Fn(+)g(2)p
Fj(it\033)1955 498 y Fi(2)1951 560 y Fd(k)1995 456 y
Fe(p)p 2078 456 59 4 v 77 x Fj(n=x)2241 358 y Fc(\014)2241
418 y(\014)2241 478 y(\014)2241 538 y(\014)2241 597 y(\014)2301
533 y Fj(>)2405 392 y Fc(\022)2573 465 y Fj(n)p 2488
510 228 4 v 2488 601 a(n)h Fn(+)f(1)2725 392 y Fc(\023)2799
415 y Fd(n=)p Fi(4)2944 533 y Fj(>)3111 465 y Fn(1)p
3057 510 156 4 v 3057 601 a Fj(e)3102 572 y Fi(1)p Fd(=)p
Fi(4)3727 533 y Fn(\(17\))0 843 y(for)h(an)m(y)h Fj(t)k
Fe(2)g Fn(\(0)p Fj(;)17 b Fe(1)p Fn(\))23 b(and)g(an)m(y)i
Fj(x)j Fe(2)g Fn(\(0)p Fj(;)17 b Fe(1)p Fn(\).)39 b(Th)m(us,)27
b(the)d(in)m(tegrand)g(in)g(\(8\))f(is)h(nev)m(er)i(large)d(for)g
Fj(t)28 b Fe(2)g Fn(\(0)p Fj(;)17 b Fe(1)p Fn(\).)0 1046
y Fk(Remark)40 b(3.3.)j Fn(The)35 b(in)m(tegrand)g(in)g(\(8\))f(deca)m
(ys)i(exp)s(onen)m(tially)h(fast,)d(at)h(a)f(rate)g(indep)s(enden)m(t)j
(of)d(the)0 1167 y(v)-5 b(alues)33 b(of)g Fj(\033)457
1182 y Fi(1)496 1167 y Fn(,)g Fj(\033)611 1182 y Fi(2)651
1167 y Fn(,)g(.)16 b(.)g(.)g(,)33 b Fj(\033)955 1182
y Fd(n)p Fm(\000)p Fi(1)1093 1167 y Fn(,)f Fj(\033)1207
1182 y Fd(n)1255 1167 y Fn(,)g(and)h Fj(x)g Fn(\(see)h(the)f(preceding)
h(remark\).)0 1370 y Fk(Remark)i(3.4.)41 b Fn(An)31 b(e\016cien)m(t)h
(means)g(of)f(ev)-5 b(aluating)31 b(\(8\))f(n)m(umerically)j(is)f(to)e
(emplo)m(y)j(adaptiv)m(e)e(Gaus-)0 1490 y(sian)39 b(quadratures;)j
(see,)e(for)e(example,)j(Section)e(4.7)f(of)f([9].)60
b(T)-8 b(o)38 b(attain)g(double-precision)i(accuracy)0
1611 y(\(roughly)29 b(15-digit)e(precision\),)j(the)f(domain)f(of)g(in)
m(tegration)g(for)g Fj(t)g Fn(in)h(\(8\))f(need)h(b)s(e)f(only)h(\(0)p
Fj(;)17 b Fn(40\))27 b(rather)0 1731 y(than)39 b(the)f(whole)i(\(0)p
Fj(;)17 b Fe(1)p Fn(\).)60 b(Go)s(o)s(d)37 b(c)m(hoices)j(for)e(the)h
(lo)m(w)m(est)h(orders)g(of)e(the)g(quadratures)i(used)g(in)f(the)0
1852 y(adaptiv)m(e)34 b(Gaussian)f(quadratures)g(are)g(10)f(and)h(21,)f
(for)g(double-precision)i(accuracy)-8 b(.)0 2055 y Fk(Remark)45
b(3.5.)g Fn(F)-8 b(or)38 b(a)h(similar,)i(more)f(general)f(approac)m
(h,)i(see)f([10].)62 b(F)-8 b(or)38 b(alternativ)m(e)j(approac)m(hes,)0
2175 y(see)35 b([11].)47 b(Unlik)m(e)36 b(these)f(alternativ)m(es,)h
(the)e(approac)m(h)h(of)e(the)h(presen)m(t)i(section)f(has)f(an)g(upp)s
(er)h(b)s(ound)0 2296 y(on)i(its)h(required)h(n)m(um)m(b)s(er)g(of)e
(\015oating-p)s(oin)m(t)g(op)s(erations)g(that)h(dep)s(ends)h(only)f
(on)f(the)h(n)m(um)m(b)s(er)h Fj(n)e Fn(of)0 2416 y(bins)45
b(and)g(on)f(the)h(precision)h Fj(")e Fn(of)g(computations,)k(not)d(on)
f(the)h(v)-5 b(alues)45 b(of)f Fj(\033)3021 2431 y Fi(1)3061
2416 y Fn(,)h Fj(\033)3188 2431 y Fi(2)3227 2416 y Fn(,)j(.)16
b(.)g(.)g(,)48 b Fj(\033)3561 2431 y Fd(n)p Fm(\000)p
Fi(1)3699 2416 y Fn(,)c Fj(\033)3825 2431 y Fd(n)3873
2416 y Fn(,)0 2536 y(or)e Fj(x)p Fn(.)72 b(Indeed,)47
b(it)42 b(is)g(easy)i(to)d(see)j(that)e(the)g(n)m(umerical)i(ev)-5
b(aluation)42 b(of)g(\(8\))g(theoretically)h(requires)0
2657 y Fe(O)s Fn(\()p Fj(n)33 b Fn(ln)293 2614 y Fi(2)332
2657 y Fn(\()370 2585 y Fe(p)p 453 2585 59 4 v 72 x Fj(n=")p
Fn(\)\))e(quadrature)h(no)s(des:)44 b(the)31 b(denominator)h(of)f(the)h
(in)m(tegrand)g(in)g(\(8\))f(cannot)g(oscillate)0 2777
y(more)h(than)g Fj(n)22 b Fn(+)f(1)32 b(times)h(\(once)f(for)g(eac)m(h)
h(\\p)s(ole"\))e(as)i Fj(t)f Fn(ranges)g(from)g(0)g(to)g
Fe(1)p Fn(,)g(while)h(the)f(n)m(umerator)0 2898 y(of)48
b(the)g(in)m(tegrand)h(cannot)g(oscillate)g(more)g(than)1991
2826 y Fe(p)p 2074 2826 V 72 x Fj(n)33 b Fn(ln)q(\(2)2334
2826 y Fe(p)p 2416 2826 V 2416 2898 a Fj(n)q(=")p Fn(\))47
b(times)j(as)e Fj(t)h Fn(ranges)f(from)g(0)g(to)0 3018
y(ln\(2)168 2946 y Fe(p)p 251 2946 V 72 x Fj(n=")p Fn(\);)35
b(furthermore,)g(the)g(domain)f(of)g(in)m(tegration)g(for)g
Fj(t)g Fn(in)g(\(8\))g(need)h(b)s(e)g(only)f(\(0)p Fj(;)f
Fn(ln)q(\(2)3589 2946 y Fe(p)p 3671 2946 V 3671 3018
a Fj(n)q(=")p Fn(\)\))0 3138 y(rather)d(than)g(the)g(whole)h(\(0)p
Fj(;)17 b Fe(1)p Fn(\).)41 b(In)30 b(practice,)i(using)e(sev)m(eral)i
(h)m(undred)f(quadrature)f(no)s(des)h(pro)s(duces)0 3259
y(double-precision)45 b(accuracy)f(\(roughly)g(15-digit)e(precision\);)
50 b(see,)c(for)d(example,)k(Section)d(5)f(b)s(elo)m(w.)0
3379 y(Also,)d(the)f(observ)m(ed)h(p)s(erformance)e(is)h(similar)g
(when)g(subtracting)g(the)f(imaginary)h(unit)f Fj(i)h
Fn(from)f(the)0 3500 y(con)m(tours)33 b(\(14\))f(and)h(\(15\).)0
3769 y Fk(4.)56 b(A)37 b(pro)s(cedure)h(for)g(computing)g(the)f
(con\014dence)h(lev)m(els)146 3964 y Fn(An)33 b(e\016cien)m(t)i(metho)s
(d)d(for)g(calculating)i(the)f(con\014dence)h(lev)m(els)h(in)d(the)h
(limit)g(of)g(large)f(n)m(um)m(b)s(ers)i(of)0 4085 y(dra)m(ws)h(pro)s
(ceeds)h(as)e(follo)m(ws.)50 b(Giv)m(en)35 b(i.i.d.)g(dra)m(ws)g(from)f
(an)m(y)h(distribution)g(|)f(not)g(necessarily)j(from)0
4205 y(the)d(sp)s(eci\014ed)h(mo)s(del)e(|)g(w)m(e)i(can)e(form)g(the)h
(asso)s(ciated)g(statistic)g Fj(X)41 b Fn(de\014ned)35
b(in)e(\(2\))g(and)h(\(1\);)f(in)h(the)0 4326 y(limit)k(of)f(large)h(n)
m(um)m(b)s(ers)h(of)f(dra)m(ws,)i(the)e(con\014dence)h(lev)m(el)h(that)
d(the)h(dra)m(ws)h(do)e(not)h(arise)g(from)g(the)0 4446
y(mo)s(del)e(is)h(then)f(just)h(the)f(cum)m(ulativ)m(e)i(distribution)f
(function)g Fj(P)49 b Fn(in)36 b(\(8\))f(ev)-5 b(aluated)37
b(at)f Fj(x)d Fn(=)h Fj(X)8 b Fn(,)36 b(with)0 4566 y
Fj(\033)59 4530 y Fi(2)55 4592 y Fd(k)126 4566 y Fn(in)29
b(\(8\))e(b)s(eing)i(the)f(in)m(v)m(erses)j(of)d(the)g(p)s(ositiv)m(e)i
(eigen)m(v)-5 b(alues)30 b(of)d(the)i(matrix)f Fj(B)33
b Fn(de\014ned)d(in)e(\(6\))g(|)f(after)0 4687 y(all,)i
Fj(P)14 b Fn(\()p Fj(x)p Fn(\))28 b(is)g(then)h(the)g(probabilit)m(y)g
(that)f Fj(x)g Fn(is)h(greater)f(than)g(the)g(sum)h(of)f(the)g(squares)
i(of)e(indep)s(enden)m(t)0 4807 y(cen)m(tered)41 b(Gaussian)e(random)g
(v)-5 b(ariables)40 b(whose)g(v)-5 b(ariances)40 b(are)f(the)g(m)m
(ultiplicativ)m(e)i(in)m(v)m(erses)h(of)d(the)0 4927
y(p)s(ositiv)m(e)32 b(eigen)m(v)-5 b(alues)32 b(of)f
Fj(B)5 b Fn(.)43 b(Remark)31 b(3.4)f(ab)s(o)m(v)m(e)h(describ)s(es)i
(an)d(e\016cien)m(t)j(means)e(of)f(ev)-5 b(aluating)31
b Fj(P)14 b Fn(\()p Fj(x)p Fn(\))0 5048 y(n)m(umerically)-8
b(.)1926 5649 y(6)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 100 a Fk(5.)56 b(Numerical)38
b(examples)146 277 y Fn(This)31 b(section)g(illustrates)g(the)f(p)s
(erformance)g(of)g(the)g(algorithm)f(of)g(Section)i(4,)f(via)g(sev)m
(eral)h(n)m(umer-)0 397 y(ical)i(examples.)146 518 y(Belo)m(w,)h(w)m(e)
g(plot)e(the)h(complemen)m(tary)i(cum)m(ulativ)m(e)g(distribution)f
(function)f(of)f(the)i(square)f(of)g(the)0 638 y(ro)s(ot-mean-square)h
(statistic)h(whose)g(probabilit)m(y)g(distribution)g(is)g(determined)h
(in)e(Section)h(2,)f(in)h(the)0 758 y(limit)25 b(of)g(large)g(n)m(um)m
(b)s(ers)i(of)d(dra)m(ws.)42 b(This)26 b(is)g(the)f(distribution)h(of)f
(the)g(statistic)h Fj(X)33 b Fn(de\014ned)26 b(in)f(\(2\))g(when)0
879 y(the)33 b(i.i.d.)g(dra)m(ws)g(used)h(to)d(form)i
Fj(X)40 b Fn(come)33 b(from)f(the)g(same)i(mo)s(del)e(distribution)i
Fj(p)3123 894 y Fi(1)3162 879 y Fn(,)e Fj(p)3270 894
y Fi(2)3310 879 y Fn(,)g(.)16 b(.)g(.)g(,)34 b Fj(p)3608
894 y Fd(n)p Fm(\000)p Fi(1)3745 879 y Fn(,)e Fj(p)3853
894 y Fd(n)0 999 y Fn(used)d(in)e(\(1\))h(for)f(de\014ning)h
Fj(X)8 b Fn(.)42 b(In)27 b(order)h(to)f(ev)-5 b(aluate)28
b(the)g(cum)m(ulativ)m(e)i(distribution)f(function)f(\(cdf)7
b(\))27 b Fj(P)14 b Fn(,)0 1120 y(w)m(e)43 b(apply)h(adaptiv)m(e)f
(Gaussian)g(quadratures)h(to)e(the)h(in)m(tegral)g(in)f(\(8\))g(as)h
(describ)s(ed)h(in)f(Section)g(3,)0 1240 y(obtaining)33
b Fj(\033)489 1255 y Fd(k)564 1240 y Fn(in)g(\(8\))f(via)h(the)g
(algorithm)f(describ)s(ed)j(in)e(Section)g(2.)146 1360
y(In)j(applications)g(to)e(go)s(o)s(dness-of-\014t)g(testing,)j(if)e
(the)g(statistic)h Fj(X)43 b Fn(from)35 b(\(2\))f(tak)m(es)i(on)f(a)g
(v)-5 b(alue)35 b Fj(x)p Fn(,)0 1481 y(then)44 b(the)g(con\014dence)i
(lev)m(el)f(that)f(the)g(dra)m(ws)h(do)e(not)h(arise)g(from)f(the)i(mo)
s(del)f(distribution)g(is)h(the)0 1601 y(cdf)29 b Fj(P)42
b Fn(in)29 b(\(8\))f(ev)-5 b(aluated)30 b(at)e Fj(x)p
Fn(;)j(the)e(signi\014cance)h(lev)m(el)h(that)d(the)i(dra)m(ws)f(do)g
(not)g(arise)g(from)f(the)i(mo)s(del)0 1721 y(distribution)43
b(is)f(therefore)h(1)28 b Fe(\000)h Fj(P)14 b Fn(\()p
Fj(x)p Fn(\).)70 b(Figures)43 b(1)e(and)h(2)f(plot)h(the)g
(signi\014cance)i(lev)m(el)f(\(1)28 b Fe(\000)h Fj(P)14
b Fn(\()p Fj(x)p Fn(\)\))0 1842 y(v)m(ersus)41 b Fj(x)f
Fn(for)f(six)h(example)h(mo)s(del)f(distributions)h(\(examples)g(a,)g
(b,)g(c,)g(d,)g(e,)h(f)7 b(\).)63 b(T)-8 b(able)40 b(3)f(pro)m(vides)0
1962 y(form)m(ulae)g(for)f(the)h(mo)s(del)g(distributions)h(used)f(in)g
(the)g(six)g(examples.)64 b(T)-8 b(ables)39 b(1)f(and)h(2)f(summarize)0
2083 y(the)i(computational)g(costs)g(required)h(to)e(attain)h(at)f
(least)h(9-digit)f(absolute)h(accuracy)h(for)e(the)h(plots)0
2203 y(in)35 b(Figures)h(1)f(and)g(2,)h(resp)s(ectiv)m(ely)-8
b(.)54 b(Eac)m(h)36 b(plot)f(displa)m(ys)j(1)23 b Fe(\000)i
Fj(P)14 b Fn(\()p Fj(x)p Fn(\))34 b(at)h(100)g(v)-5 b(alues)36
b(for)e Fj(x)p Fn(.)52 b(Figure)35 b(2)0 2323 y(fo)s(cuses)f(on)e(the)h
(tails)g(of)f(the)h(distributions,)h(corresp)s(onding)g(to)e(suitably)i
(high)f(con\014dence)h(lev)m(els.)146 2444 y(The)g(follo)m(wing)f(list)
g(describ)s(es)i(the)e(headings)g(of)f(the)h(tables:)145
2611 y Fe(\017)49 b Fj(n)24 b Fn(is)g(the)h(n)m(um)m(b)s(er)g(of)e
(bins/categories/cells/classes)29 b(in)24 b(Section)g(2)g(\()p
Fj(p)2840 2626 y Fi(1)2879 2611 y Fn(,)g Fj(p)2979 2626
y Fi(2)3019 2611 y Fn(,)h(.)16 b(.)g(.)g(,)27 b Fj(p)3303
2626 y Fd(n)p Fm(\000)p Fi(1)3440 2611 y Fn(,)d Fj(p)3540
2626 y Fd(n)3611 2611 y Fn(are)g(the)244 2732 y(probabilities)i(of)e
(dra)m(wing)i(the)f(corresp)s(onding)h(bins)f(under)h(the)f(sp)s
(eci\014ed)i(mo)s(del)e(distribution\).)145 2923 y Fe(\017)49
b Fj(l)36 b Fn(is)e(the)g(maxim)m(um)i(n)m(um)m(b)s(er)f(of)e
(quadrature)i(no)s(des)f(required)h(in)f(an)m(y)h(of)e(the)h(100)f(ev)
-5 b(aluations)244 3044 y(of)32 b(1)22 b Fe(\000)h Fj(P)14
b Fn(\()p Fj(x)p Fn(\))32 b(displa)m(y)m(ed)j(in)e(eac)m(h)g(plot)g(of)
f(Figures)h(1)f(and)h(2.)145 3235 y Fe(\017)49 b Fj(t)31
b Fn(is)h(the)f(total)g(n)m(um)m(b)s(er)h(of)f(seconds)h(required)h(to)
e(p)s(erform)g(the)g(quadratures)h(for)f(all)g(100)f(ev)-5
b(alu-)244 3356 y(ations)33 b(of)f(1)22 b Fe(\000)g Fj(P)14
b Fn(\()p Fj(x)p Fn(\))33 b(displa)m(y)m(ed)i(in)d(eac)m(h)i(plot)e(of)
g(Figures)h(1)g(and)f(2.)145 3547 y Fe(\017)49 b Fj(p)293
3562 y Fd(k)370 3547 y Fn(is)34 b(the)h(probabilit)m(y)g(asso)s(ciated)
g(with)g(bin)f Fj(k)k Fn(\()p Fj(k)33 b Fn(=)d(1,)k(2,)h(.)16
b(.)g(.)g(,)35 b Fj(n)24 b Fe(\000)f Fn(1,)34 b Fj(n)p
Fn(\))h(in)f(Section)h(2.)48 b(The)244 3667 y(constan)m(ts)27
b Fj(C)739 3683 y Fi(\(a\))833 3667 y Fn(,)f Fj(C)956
3683 y Fi(\(b\))1054 3667 y Fn(,)h Fj(C)1178 3683 y Fi(\(c\))1268
3667 y Fn(,)g Fj(C)1392 3683 y Fi(\(d\))1490 3667 y Fn(,)g
Fj(C)1614 3683 y Fi(\(e\))1704 3667 y Fn(,)f Fj(C)1827
3683 y Fi(\(f)5 b(\))1938 3667 y Fn(in)26 b(T)-8 b(able)26
b(3)g(are)f(the)h(p)s(ositiv)m(e)h(real)f(n)m(um)m(b)s(ers)h(c)m(hosen)
244 3788 y(suc)m(h)40 b(that)687 3713 y Fc(P)792 3739
y Fd(n)792 3817 y(k)r Fi(=1)942 3788 y Fj(p)991 3803
y Fd(k)1071 3788 y Fn(=)d(1.)61 b(F)-8 b(or)38 b(an)m(y)h(real)f(n)m
(um)m(b)s(er)i Fj(x)p Fn(,)g(the)f(\015o)s(or)f Fe(b)p
Fj(x)p Fe(c)h Fn(is)g(the)g(greatest)g(in)m(teger)244
3908 y(less)d(than)f(or)f(equal)i(to)e Fj(x)p Fn(;)j(the)e(probabilit)m
(y)h(distributions)g(for)e(examples)j(\(c\))e(and)g(\(d\))g(in)m(v)m
(olv)m(e)244 4029 y(the)e(\015o)s(or.)146 4196 y(W)-8
b(e)32 b(used)g(F)-8 b(ortran)30 b(77)h(and)g(ran)g(all)g(examples)i
(on)e(one)g(core)h(of)f(a)f(2.2)h(GHz)g(In)m(tel)h(Core)g(2)f(Duo)f
(mi-)0 4317 y(cropro)s(cessor)i(with)f(2)f(MB)h(of)f(L2)g(cac)m(he.)44
b(Our)31 b(co)s(de)g(is)g(complian)m(t)g(with)g(the)g(IEEE)h
(double-precision)0 4437 y(standard)26 b(\(so)g(that)g(the)g(man)m
(tissas)i(of)d(v)-5 b(ariables)27 b(ha)m(v)m(e)g(appro)m(ximately)h
(one)e(bit)g(of)f(precision)j(less)f(than)0 4557 y(16)d(digits,)i
(yielding)f(a)f(relativ)m(e)i(precision)f(of)f(ab)s(out)g(2E{16\).)40
b(W)-8 b(e)24 b(diagonalized)h(the)g(matrix)f Fj(B)30
b Fn(de\014ned)0 4678 y(in)f(\(6\))g(using)h(the)g(Jacobi)f(algorithm)h
(\(see,)h(for)d(example,)k(Chapter)e(8)f(of)g([12)o(]\),)h(not)f
(taking)h(adv)-5 b(an)m(tage)0 4798 y(of)23 b(Remark)h(2.2;)i
(explicitly)g(forming)d(the)h(en)m(tries)h(of)f(the)f(matrix)h
Fj(B)29 b Fn(de\014ned)c(in)f(\(6\))f(can)h(incur)g(a)f(n)m(umer-)0
4918 y(ical)36 b(error)f(of)g(at)g(most)h(the)g(mac)m(hine)h(precision)
g(\(ab)s(out)e(2E{16\))g(times)i(max)2967 4933 y Fi(1)p
Fm(\024)p Fd(k)r Fm(\024)p Fd(n)3215 4918 y Fj(p)3264
4933 y Fd(k)3306 4918 y Fj(=)17 b Fn(min)3534 4933 y
Fi(1)p Fm(\024)p Fd(k)r Fm(\024)p Fd(n)3781 4918 y Fj(p)3830
4933 y Fd(k)3873 4918 y Fn(,)0 5039 y(yielding)44 b(9-digit)e(accuracy)
h(or)g(b)s(etter)g(for)f(all)g(our)h(examples.)75 b(A)43
b(future)g(article)g(will)g(exploit)h(the)0 5159 y(in)m(terlacing)c
(prop)s(erties)g(of)f(eigen)m(v)-5 b(alues,)43 b(as)c(in)h([6)o(],)h
(to)e(obtain)g(higher)h(precision.)65 b(Of)38 b(course,)k(ev)m(en)0
5280 y(5-digit)33 b(precision)h(w)m(ould)h(su\016ce)g(for)d(most)i
(statistical)g(applications;)h(ho)m(w)m(ev)m(er,)h(mo)s(dern)d
(computers)0 5400 y(can)g(pro)s(duce)g(high)g(accuracy)h(v)m(ery)g
(fast,)e(as)h(the)g(examples)i(in)d(this)i(section)f(illustrate.)1926
5649 y(7)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop -235 222 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 -235 222 a -235 222
a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 -235 222 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 5040 @rwi @setspecial
%%BeginDocument: run2_.ps
%!PS-Adobe-2.0
%%Title: run2_.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:52:37 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run2_.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:52:37 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 1009 M
31 0 V
5069 0 R
-31 0 V
1770 1249 M
31 0 V
5069 0 R
-31 0 V
1770 1419 M
31 0 V
5069 0 R
-31 0 V
1770 1551 M
31 0 V
5069 0 R
-31 0 V
1770 1658 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 2369 M
31 0 V
5069 0 R
-31 0 V
1770 2609 M
31 0 V
5069 0 R
-31 0 V
1770 2779 M
31 0 V
5069 0 R
-31 0 V
1770 2911 M
31 0 V
5069 0 R
-31 0 V
1770 3018 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-01) Rshow
1.000 UL
LTb
1770 3729 M
31 0 V
5069 0 R
-31 0 V
1770 3969 M
31 0 V
5069 0 R
-31 0 V
1770 4139 M
31 0 V
5069 0 R
-31 0 V
1770 4271 M
31 0 V
5069 0 R
-31 0 V
1770 4378 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-00) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0) Cshow
1.000 UL
LTb
2620 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.2) Cshow
1.000 UL
LTb
3470 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.4) Cshow
1.000 UL
LTb
4320 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.6) Cshow
1.000 UL
LTb
5170 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.8) Cshow
1.000 UL
LTb
6020 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.2) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4680 CircleF
1872 4680 CircleF
1923 4680 CircleF
1974 4680 CircleF
2025 4680 CircleF
2076 4680 CircleF
2127 4680 CircleF
2178 4680 CircleF
2229 4680 CircleF
2280 4680 CircleF
2331 4680 CircleF
2382 4680 CircleF
2433 4680 CircleF
2484 4680 CircleF
2535 4680 CircleF
2586 4680 CircleF
2637 4680 CircleF
2688 4680 CircleF
2739 4680 CircleF
2790 4680 CircleF
2841 4680 CircleF
2892 4680 CircleF
2943 4680 CircleF
2994 4680 CircleF
3045 4680 CircleF
3096 4680 CircleF
3147 4680 CircleF
3198 4680 CircleF
3249 4680 CircleF
3300 4680 CircleF
3351 4680 CircleF
3402 4680 CircleF
3453 4680 CircleF
3504 4680 CircleF
3555 4680 CircleF
3606 4680 CircleF
3657 4680 CircleF
3708 4680 CircleF
3759 4680 CircleF
3810 4680 CircleF
3861 4680 CircleF
3912 4680 CircleF
3963 4680 CircleF
4014 4680 CircleF
4065 4680 CircleF
4116 4680 CircleF
4167 4680 CircleF
4218 4680 CircleF
4269 4680 CircleF
4320 4680 CircleF
4371 4680 CircleF
4422 4680 CircleF
4473 4680 CircleF
4524 4680 CircleF
4575 4680 CircleF
4626 4680 CircleF
4677 4680 CircleF
4728 4680 CircleF
4779 4680 CircleF
4830 4680 CircleF
4881 4680 CircleF
4932 4680 CircleF
4983 4680 CircleF
5034 4680 CircleF
5085 4680 CircleF
5136 4679 CircleF
5187 4679 CircleF
5238 4678 CircleF
5289 4676 CircleF
5340 4673 CircleF
5391 4669 CircleF
5442 4663 CircleF
5493 4654 CircleF
5544 4642 CircleF
5595 4626 CircleF
5646 4605 CircleF
5697 4578 CircleF
5748 4546 CircleF
5799 4506 CircleF
5850 4458 CircleF
5901 4403 CircleF
5952 4338 CircleF
6003 4265 CircleF
6054 4182 CircleF
6105 4089 CircleF
6156 3987 CircleF
6207 3875 CircleF
6258 3753 CircleF
6309 3620 CircleF
6360 3478 CircleF
6411 3326 CircleF
6462 3164 CircleF
6513 2992 CircleF
6564 2810 CircleF
6615 2619 CircleF
6666 2418 CircleF
6717 2208 CircleF
6768 1989 CircleF
6819 1761 CircleF
6870 1524 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial -235 222 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 -235 222 a 1109 222 a
 currentpoint grestore moveto
 1109 222
a 872 1669 a Ff(\(a\))1980 222 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 1980 222 a 1980 222
a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 1980 222 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 5040 @rwi @setspecial
%%BeginDocument: run1_.ps
%!PS-Adobe-2.0
%%Title: run1_.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:24:25 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run1_.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:24:25 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 1009 M
31 0 V
5069 0 R
-31 0 V
1770 1249 M
31 0 V
5069 0 R
-31 0 V
1770 1419 M
31 0 V
5069 0 R
-31 0 V
1770 1551 M
31 0 V
5069 0 R
-31 0 V
1770 1658 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 2369 M
31 0 V
5069 0 R
-31 0 V
1770 2609 M
31 0 V
5069 0 R
-31 0 V
1770 2779 M
31 0 V
5069 0 R
-31 0 V
1770 2911 M
31 0 V
5069 0 R
-31 0 V
1770 3018 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-01) Rshow
1.000 UL
LTb
1770 3729 M
31 0 V
5069 0 R
-31 0 V
1770 3969 M
31 0 V
5069 0 R
-31 0 V
1770 4139 M
31 0 V
5069 0 R
-31 0 V
1770 4271 M
31 0 V
5069 0 R
-31 0 V
1770 4378 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-00) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0) Cshow
1.000 UL
LTb
2499 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.2) Cshow
1.000 UL
LTb
3227 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.4) Cshow
1.000 UL
LTb
3956 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.6) Cshow
1.000 UL
LTb
4684 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.8) Cshow
1.000 UL
LTb
5413 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1) Cshow
1.000 UL
LTb
6141 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.2) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.4) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4680 CircleF
1872 4680 CircleF
1923 4680 CircleF
1974 4680 CircleF
2025 4680 CircleF
2076 4680 CircleF
2127 4680 CircleF
2178 4680 CircleF
2229 4680 CircleF
2280 4680 CircleF
2331 4680 CircleF
2382 4680 CircleF
2433 4680 CircleF
2484 4680 CircleF
2535 4680 CircleF
2586 4680 CircleF
2637 4680 CircleF
2688 4680 CircleF
2739 4680 CircleF
2790 4680 CircleF
2841 4680 CircleF
2892 4680 CircleF
2943 4680 CircleF
2994 4680 CircleF
3045 4680 CircleF
3096 4680 CircleF
3147 4680 CircleF
3198 4680 CircleF
3249 4680 CircleF
3300 4680 CircleF
3351 4680 CircleF
3402 4680 CircleF
3453 4680 CircleF
3504 4680 CircleF
3555 4680 CircleF
3606 4680 CircleF
3657 4680 CircleF
3708 4680 CircleF
3759 4680 CircleF
3810 4680 CircleF
3861 4680 CircleF
3912 4680 CircleF
3963 4680 CircleF
4014 4680 CircleF
4065 4680 CircleF
4116 4679 CircleF
4167 4679 CircleF
4218 4678 CircleF
4269 4677 CircleF
4320 4676 CircleF
4371 4674 CircleF
4422 4672 CircleF
4473 4669 CircleF
4524 4664 CircleF
4575 4659 CircleF
4626 4652 CircleF
4677 4643 CircleF
4728 4632 CircleF
4779 4619 CircleF
4830 4604 CircleF
4881 4586 CircleF
4932 4566 CircleF
4983 4543 CircleF
5034 4516 CircleF
5085 4486 CircleF
5136 4453 CircleF
5187 4417 CircleF
5238 4376 CircleF
5289 4333 CircleF
5340 4285 CircleF
5391 4234 CircleF
5442 4179 CircleF
5493 4120 CircleF
5544 4058 CircleF
5595 3992 CircleF
5646 3922 CircleF
5697 3849 CircleF
5748 3772 CircleF
5799 3691 CircleF
5850 3607 CircleF
5901 3519 CircleF
5952 3428 CircleF
6003 3333 CircleF
6054 3236 CircleF
6105 3134 CircleF
6156 3030 CircleF
6207 2923 CircleF
6258 2812 CircleF
6309 2698 CircleF
6360 2582 CircleF
6411 2462 CircleF
6462 2339 CircleF
6513 2214 CircleF
6564 2086 CircleF
6615 1956 CircleF
6666 1822 CircleF
6717 1686 CircleF
6768 1548 CircleF
6819 1407 CircleF
6870 1264 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial 1980 222 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 1980 222 a 3324 222 a
 currentpoint grestore moveto
 3324 222
a 3084 1669 a Ff(\(b\))-235 1850 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 -235 1850 a -235 1850
a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 -235 1850 a @beginspecial 50 @llx 50 @lly 554 @urx
770 @ury 5040 @rwi @setspecial
%%BeginDocument: run3_.ps
%!PS-Adobe-2.0
%%Title: run3_.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:25:39 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run3_.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:25:39 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 1009 M
31 0 V
5069 0 R
-31 0 V
1770 1249 M
31 0 V
5069 0 R
-31 0 V
1770 1419 M
31 0 V
5069 0 R
-31 0 V
1770 1551 M
31 0 V
5069 0 R
-31 0 V
1770 1658 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 2369 M
31 0 V
5069 0 R
-31 0 V
1770 2609 M
31 0 V
5069 0 R
-31 0 V
1770 2779 M
31 0 V
5069 0 R
-31 0 V
1770 2911 M
31 0 V
5069 0 R
-31 0 V
1770 3018 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-01) Rshow
1.000 UL
LTb
1770 3729 M
31 0 V
5069 0 R
-31 0 V
1770 3969 M
31 0 V
5069 0 R
-31 0 V
1770 4139 M
31 0 V
5069 0 R
-31 0 V
1770 4271 M
31 0 V
5069 0 R
-31 0 V
1770 4378 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-00) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0) Cshow
1.000 UL
LTb
2499 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.2) Cshow
1.000 UL
LTb
3227 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.4) Cshow
1.000 UL
LTb
3956 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.6) Cshow
1.000 UL
LTb
4684 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.8) Cshow
1.000 UL
LTb
5413 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1) Cshow
1.000 UL
LTb
6141 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.2) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.4) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4680 CircleF
1872 4680 CircleF
1923 4680 CircleF
1974 4680 CircleF
2025 4680 CircleF
2076 4680 CircleF
2127 4680 CircleF
2178 4680 CircleF
2229 4680 CircleF
2280 4680 CircleF
2331 4680 CircleF
2382 4680 CircleF
2433 4680 CircleF
2484 4680 CircleF
2535 4680 CircleF
2586 4680 CircleF
2637 4680 CircleF
2688 4680 CircleF
2739 4680 CircleF
2790 4680 CircleF
2841 4680 CircleF
2892 4680 CircleF
2943 4680 CircleF
2994 4680 CircleF
3045 4680 CircleF
3096 4680 CircleF
3147 4680 CircleF
3198 4680 CircleF
3249 4680 CircleF
3300 4680 CircleF
3351 4680 CircleF
3402 4680 CircleF
3453 4680 CircleF
3504 4680 CircleF
3555 4680 CircleF
3606 4680 CircleF
3657 4680 CircleF
3708 4680 CircleF
3759 4680 CircleF
3810 4680 CircleF
3861 4680 CircleF
3912 4680 CircleF
3963 4680 CircleF
4014 4679 CircleF
4065 4679 CircleF
4116 4678 CircleF
4167 4678 CircleF
4218 4676 CircleF
4269 4675 CircleF
4320 4673 CircleF
4371 4670 CircleF
4422 4667 CircleF
4473 4662 CircleF
4524 4657 CircleF
4575 4650 CircleF
4626 4642 CircleF
4677 4632 CircleF
4728 4620 CircleF
4779 4606 CircleF
4830 4590 CircleF
4881 4572 CircleF
4932 4551 CircleF
4983 4528 CircleF
5034 4502 CircleF
5085 4473 CircleF
5136 4441 CircleF
5187 4406 CircleF
5238 4367 CircleF
5289 4326 CircleF
5340 4282 CircleF
5391 4234 CircleF
5442 4182 CircleF
5493 4128 CircleF
5544 4070 CircleF
5595 4009 CircleF
5646 3944 CircleF
5697 3876 CircleF
5748 3805 CircleF
5799 3730 CircleF
5850 3653 CircleF
5901 3571 CircleF
5952 3487 CircleF
6003 3400 CircleF
6054 3309 CircleF
6105 3215 CircleF
6156 3118 CircleF
6207 3018 CircleF
6258 2915 CircleF
6309 2809 CircleF
6360 2700 CircleF
6411 2588 CircleF
6462 2474 CircleF
6513 2356 CircleF
6564 2236 CircleF
6615 2113 CircleF
6666 1988 CircleF
6717 1859 CircleF
6768 1728 CircleF
6819 1595 CircleF
6870 1459 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial -235 1850 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 -235 1850 a 1109 1850 a
 currentpoint grestore moveto
 1109
1850 a 874 3297 a Ff(\(c\))1980 1850 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 1980 1850 a 1980
1850 a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 1980 1850 a @beginspecial 50 @llx 50 @lly 554
@urx 770 @ury 5040 @rwi @setspecial
%%BeginDocument: run4_.ps
%!PS-Adobe-2.0
%%Title: run4_.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:25:58 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run4_.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:25:58 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 1009 M
31 0 V
5069 0 R
-31 0 V
1770 1249 M
31 0 V
5069 0 R
-31 0 V
1770 1419 M
31 0 V
5069 0 R
-31 0 V
1770 1551 M
31 0 V
5069 0 R
-31 0 V
1770 1658 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 2369 M
31 0 V
5069 0 R
-31 0 V
1770 2609 M
31 0 V
5069 0 R
-31 0 V
1770 2779 M
31 0 V
5069 0 R
-31 0 V
1770 2911 M
31 0 V
5069 0 R
-31 0 V
1770 3018 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-01) Rshow
1.000 UL
LTb
1770 3729 M
31 0 V
5069 0 R
-31 0 V
1770 3969 M
31 0 V
5069 0 R
-31 0 V
1770 4139 M
31 0 V
5069 0 R
-31 0 V
1770 4271 M
31 0 V
5069 0 R
-31 0 V
1770 4378 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-00) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0) Cshow
1.000 UL
LTb
3045 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.4) Cshow
1.000 UL
LTb
4320 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0.8) Cshow
1.000 UL
LTb
5595 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.2) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.6) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4680 CircleF
1872 4680 CircleF
1923 4680 CircleF
1974 4680 CircleF
2025 4680 CircleF
2076 4680 CircleF
2127 4680 CircleF
2178 4680 CircleF
2229 4680 CircleF
2280 4680 CircleF
2331 4680 CircleF
2382 4680 CircleF
2433 4680 CircleF
2484 4680 CircleF
2535 4680 CircleF
2586 4680 CircleF
2637 4680 CircleF
2688 4680 CircleF
2739 4680 CircleF
2790 4680 CircleF
2841 4680 CircleF
2892 4680 CircleF
2943 4680 CircleF
2994 4680 CircleF
3045 4680 CircleF
3096 4680 CircleF
3147 4680 CircleF
3198 4680 CircleF
3249 4679 CircleF
3300 4679 CircleF
3351 4678 CircleF
3402 4678 CircleF
3453 4677 CircleF
3504 4675 CircleF
3555 4674 CircleF
3606 4672 CircleF
3657 4669 CircleF
3708 4666 CircleF
3759 4662 CircleF
3810 4657 CircleF
3861 4651 CircleF
3912 4644 CircleF
3963 4637 CircleF
4014 4628 CircleF
4065 4617 CircleF
4116 4606 CircleF
4167 4593 CircleF
4218 4578 CircleF
4269 4562 CircleF
4320 4544 CircleF
4371 4525 CircleF
4422 4504 CircleF
4473 4481 CircleF
4524 4457 CircleF
4575 4431 CircleF
4626 4403 CircleF
4677 4373 CircleF
4728 4341 CircleF
4779 4308 CircleF
4830 4273 CircleF
4881 4236 CircleF
4932 4197 CircleF
4983 4157 CircleF
5034 4115 CircleF
5085 4071 CircleF
5136 4025 CircleF
5187 3978 CircleF
5238 3929 CircleF
5289 3878 CircleF
5340 3825 CircleF
5391 3772 CircleF
5442 3716 CircleF
5493 3659 CircleF
5544 3600 CircleF
5595 3540 CircleF
5646 3479 CircleF
5697 3416 CircleF
5748 3351 CircleF
5799 3285 CircleF
5850 3218 CircleF
5901 3149 CircleF
5952 3079 CircleF
6003 3008 CircleF
6054 2935 CircleF
6105 2862 CircleF
6156 2787 CircleF
6207 2710 CircleF
6258 2633 CircleF
6309 2554 CircleF
6360 2474 CircleF
6411 2394 CircleF
6462 2312 CircleF
6513 2228 CircleF
6564 2144 CircleF
6615 2059 CircleF
6666 1973 CircleF
6717 1886 CircleF
6768 1798 CircleF
6819 1708 CircleF
6870 1618 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial 1980 1850 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 1980 1850 a 3324 1850 a
 currentpoint grestore moveto
 3324
1850 a 3084 3297 a Ff(\(d\))-235 3478 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 -235 3478 a -235
3478 a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 -235 3478 a @beginspecial 50 @llx 50 @lly 554
@urx 770 @ury 5040 @rwi @setspecial
%%BeginDocument: run5_.ps
%!PS-Adobe-2.0
%%Title: run5_.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:26:29 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run5_.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:26:29 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 1009 M
31 0 V
5069 0 R
-31 0 V
1770 1249 M
31 0 V
5069 0 R
-31 0 V
1770 1419 M
31 0 V
5069 0 R
-31 0 V
1770 1551 M
31 0 V
5069 0 R
-31 0 V
1770 1658 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 2369 M
31 0 V
5069 0 R
-31 0 V
1770 2609 M
31 0 V
5069 0 R
-31 0 V
1770 2779 M
31 0 V
5069 0 R
-31 0 V
1770 2911 M
31 0 V
5069 0 R
-31 0 V
1770 3018 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-01) Rshow
1.000 UL
LTb
1770 3729 M
31 0 V
5069 0 R
-31 0 V
1770 3969 M
31 0 V
5069 0 R
-31 0 V
1770 4139 M
31 0 V
5069 0 R
-31 0 V
1770 4271 M
31 0 V
5069 0 R
-31 0 V
1770 4378 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-00) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0) Cshow
1.000 UL
LTb
3045 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1) Cshow
1.000 UL
LTb
4320 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 2) Cshow
1.000 UL
LTb
5595 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 3) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 4) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4679 CircleF
1872 4672 CircleF
1923 4657 CircleF
1974 4635 CircleF
2025 4608 CircleF
2076 4575 CircleF
2127 4540 CircleF
2178 4502 CircleF
2229 4463 CircleF
2280 4422 CircleF
2331 4380 CircleF
2382 4337 CircleF
2433 4293 CircleF
2484 4250 CircleF
2535 4205 CircleF
2586 4161 CircleF
2637 4116 CircleF
2688 4072 CircleF
2739 4027 CircleF
2790 3982 CircleF
2841 3938 CircleF
2892 3893 CircleF
2943 3848 CircleF
2994 3804 CircleF
3045 3760 CircleF
3096 3716 CircleF
3147 3671 CircleF
3198 3628 CircleF
3249 3584 CircleF
3300 3540 CircleF
3351 3497 CircleF
3402 3453 CircleF
3453 3410 CircleF
3504 3367 CircleF
3555 3324 CircleF
3606 3282 CircleF
3657 3239 CircleF
3708 3197 CircleF
3759 3154 CircleF
3810 3112 CircleF
3861 3070 CircleF
3912 3028 CircleF
3963 2987 CircleF
4014 2945 CircleF
4065 2903 CircleF
4116 2862 CircleF
4167 2821 CircleF
4218 2780 CircleF
4269 2739 CircleF
4320 2698 CircleF
4371 2657 CircleF
4422 2616 CircleF
4473 2576 CircleF
4524 2535 CircleF
4575 2495 CircleF
4626 2455 CircleF
4677 2415 CircleF
4728 2375 CircleF
4779 2335 CircleF
4830 2295 CircleF
4881 2255 CircleF
4932 2215 CircleF
4983 2176 CircleF
5034 2136 CircleF
5085 2097 CircleF
5136 2057 CircleF
5187 2018 CircleF
5238 1979 CircleF
5289 1940 CircleF
5340 1900 CircleF
5391 1861 CircleF
5442 1823 CircleF
5493 1784 CircleF
5544 1745 CircleF
5595 1706 CircleF
5646 1667 CircleF
5697 1629 CircleF
5748 1590 CircleF
5799 1552 CircleF
5850 1513 CircleF
5901 1475 CircleF
5952 1436 CircleF
6003 1398 CircleF
6054 1360 CircleF
6105 1322 CircleF
6156 1283 CircleF
6207 1245 CircleF
6258 1207 CircleF
6309 1169 CircleF
6360 1131 CircleF
6411 1093 CircleF
6462 1055 CircleF
6513 1018 CircleF
6564 980 CircleF
6615 942 CircleF
6666 904 CircleF
6717 867 CircleF
6768 829 CircleF
6819 791 CircleF
6870 754 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial -235 3478 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 -235 3478 a 1109 3478 a
 currentpoint grestore moveto
 1109
3478 a 874 4925 a Ff(\(e\))1980 3478 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 1980 3478 a 1980
3478 a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 1980 3478 a @beginspecial 50 @llx 50 @lly 554
@urx 770 @ury 5040 @rwi @setspecial
%%BeginDocument: run6_.ps
%!PS-Adobe-2.0
%%Title: run6_.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:27:01 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run6_.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:27:01 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 1009 M
31 0 V
5069 0 R
-31 0 V
1770 1249 M
31 0 V
5069 0 R
-31 0 V
1770 1419 M
31 0 V
5069 0 R
-31 0 V
1770 1551 M
31 0 V
5069 0 R
-31 0 V
1770 1658 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 2369 M
31 0 V
5069 0 R
-31 0 V
1770 2609 M
31 0 V
5069 0 R
-31 0 V
1770 2779 M
31 0 V
5069 0 R
-31 0 V
1770 2911 M
31 0 V
5069 0 R
-31 0 V
1770 3018 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-01) Rshow
1.000 UL
LTb
1770 3729 M
31 0 V
5069 0 R
-31 0 V
1770 3969 M
31 0 V
5069 0 R
-31 0 V
1770 4139 M
31 0 V
5069 0 R
-31 0 V
1770 4271 M
31 0 V
5069 0 R
-31 0 V
1770 4378 M
31 0 V
5069 0 R
-31 0 V
-5069 91 R
31 0 V
5069 0 R
-31 0 V
-5069 79 R
31 0 V
5069 0 R
-31 0 V
-5069 70 R
31 0 V
5069 0 R
-31 0 V
-5069 62 R
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-00) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 0) Cshow
1.000 UL
LTb
3045 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1) Cshow
1.000 UL
LTb
4320 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 2) Cshow
1.000 UL
LTb
5595 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 3) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 4) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4675 CircleF
1872 4661 CircleF
1923 4640 CircleF
1974 4614 CircleF
2025 4585 CircleF
2076 4553 CircleF
2127 4519 CircleF
2178 4484 CircleF
2229 4448 CircleF
2280 4411 CircleF
2331 4373 CircleF
2382 4335 CircleF
2433 4296 CircleF
2484 4257 CircleF
2535 4217 CircleF
2586 4177 CircleF
2637 4138 CircleF
2688 4097 CircleF
2739 4057 CircleF
2790 4017 CircleF
2841 3977 CircleF
2892 3936 CircleF
2943 3896 CircleF
2994 3856 CircleF
3045 3815 CircleF
3096 3775 CircleF
3147 3734 CircleF
3198 3694 CircleF
3249 3653 CircleF
3300 3613 CircleF
3351 3573 CircleF
3402 3532 CircleF
3453 3492 CircleF
3504 3452 CircleF
3555 3412 CircleF
3606 3372 CircleF
3657 3331 CircleF
3708 3291 CircleF
3759 3251 CircleF
3810 3211 CircleF
3861 3171 CircleF
3912 3132 CircleF
3963 3092 CircleF
4014 3052 CircleF
4065 3012 CircleF
4116 2973 CircleF
4167 2933 CircleF
4218 2893 CircleF
4269 2854 CircleF
4320 2814 CircleF
4371 2775 CircleF
4422 2736 CircleF
4473 2696 CircleF
4524 2657 CircleF
4575 2618 CircleF
4626 2579 CircleF
4677 2539 CircleF
4728 2500 CircleF
4779 2461 CircleF
4830 2422 CircleF
4881 2383 CircleF
4932 2344 CircleF
4983 2305 CircleF
5034 2267 CircleF
5085 2228 CircleF
5136 2189 CircleF
5187 2150 CircleF
5238 2112 CircleF
5289 2073 CircleF
5340 2035 CircleF
5391 1996 CircleF
5442 1958 CircleF
5493 1919 CircleF
5544 1881 CircleF
5595 1842 CircleF
5646 1804 CircleF
5697 1766 CircleF
5748 1727 CircleF
5799 1689 CircleF
5850 1651 CircleF
5901 1613 CircleF
5952 1575 CircleF
6003 1537 CircleF
6054 1499 CircleF
6105 1461 CircleF
6156 1423 CircleF
6207 1385 CircleF
6258 1347 CircleF
6309 1309 CircleF
6360 1271 CircleF
6411 1233 CircleF
6462 1196 CircleF
6513 1158 CircleF
6564 1120 CircleF
6615 1083 CircleF
6666 1045 CircleF
6717 1007 CircleF
6768 970 CircleF
6819 932 CircleF
6870 895 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial 1980 3478 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 1980 3478 a 3324 3478 a
 currentpoint grestore moveto
 3324
3478 a 3092 4925 a Ff(\(f)6 b(\))454 5128 y Fn(Fig.)32
b(1:)43 b(The)34 b(v)m(ertical)g(axis)f(is)g(1)22 b Fe(\000)g
Fj(P)14 b Fn(\()p Fj(x)p Fn(\))33 b(from)f(\(8\);)g(the)h(horizon)m
(tal)g(axis)h(is)f Fj(x)p Fn(.)1926 5649 y(8)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop -235 222 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 -235 222 a -235 222
a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 -235 222 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 5040 @rwi @setspecial
%%BeginDocument: run2.ps
%!PS-Adobe-2.0
%%Title: run2.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:20:04 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run2.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:20:04 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-09) Rshow
1.000 UL
LTb
1770 1183 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-08) Rshow
1.000 UL
LTb
1770 1766 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-07) Rshow
1.000 UL
LTb
1770 2349 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-06) Rshow
1.000 UL
LTb
1770 2931 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-05) Rshow
1.000 UL
LTb
1770 3514 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-04) Rshow
1.000 UL
LTb
1770 4097 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 4680 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.2) Cshow
1.000 UL
LTb
2620 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.25) Cshow
1.000 UL
LTb
3470 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.3) Cshow
1.000 UL
LTb
4320 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.35) Cshow
1.000 UL
LTb
5170 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.4) Cshow
1.000 UL
LTb
6020 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.45) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.5) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4467 CircleF
1872 4441 CircleF
1923 4415 CircleF
1974 4388 CircleF
2025 4361 CircleF
2076 4334 CircleF
2127 4307 CircleF
2178 4279 CircleF
2229 4251 CircleF
2280 4223 CircleF
2331 4195 CircleF
2382 4167 CircleF
2433 4138 CircleF
2484 4109 CircleF
2535 4080 CircleF
2586 4051 CircleF
2637 4021 CircleF
2688 3991 CircleF
2739 3962 CircleF
2790 3931 CircleF
2841 3901 CircleF
2892 3870 CircleF
2943 3840 CircleF
2994 3809 CircleF
3045 3777 CircleF
3096 3746 CircleF
3147 3714 CircleF
3198 3683 CircleF
3249 3651 CircleF
3300 3618 CircleF
3351 3586 CircleF
3402 3553 CircleF
3453 3521 CircleF
3504 3488 CircleF
3555 3454 CircleF
3606 3421 CircleF
3657 3387 CircleF
3708 3354 CircleF
3759 3320 CircleF
3810 3286 CircleF
3861 3251 CircleF
3912 3217 CircleF
3963 3182 CircleF
4014 3147 CircleF
4065 3112 CircleF
4116 3077 CircleF
4167 3041 CircleF
4218 3006 CircleF
4269 2970 CircleF
4320 2934 CircleF
4371 2898 CircleF
4422 2861 CircleF
4473 2825 CircleF
4524 2788 CircleF
4575 2751 CircleF
4626 2714 CircleF
4677 2677 CircleF
4728 2640 CircleF
4779 2602 CircleF
4830 2564 CircleF
4881 2526 CircleF
4932 2488 CircleF
4983 2450 CircleF
5034 2412 CircleF
5085 2373 CircleF
5136 2334 CircleF
5187 2296 CircleF
5238 2257 CircleF
5289 2217 CircleF
5340 2178 CircleF
5391 2138 CircleF
5442 2099 CircleF
5493 2059 CircleF
5544 2019 CircleF
5595 1979 CircleF
5646 1938 CircleF
5697 1898 CircleF
5748 1857 CircleF
5799 1816 CircleF
5850 1776 CircleF
5901 1734 CircleF
5952 1693 CircleF
6003 1652 CircleF
6054 1610 CircleF
6105 1569 CircleF
6156 1527 CircleF
6207 1485 CircleF
6258 1443 CircleF
6309 1400 CircleF
6360 1358 CircleF
6411 1315 CircleF
6462 1273 CircleF
6513 1230 CircleF
6564 1187 CircleF
6615 1144 CircleF
6666 1100 CircleF
6717 1057 CircleF
6768 1014 CircleF
6819 970 CircleF
6870 926 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial -235 222 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 -235 222 a 1109 222 a
 currentpoint grestore moveto
 1109 222
a 872 1669 a Ff(\(a\))1980 222 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 1980 222 a 1980 222
a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 1980 222 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 5040 @rwi @setspecial
%%BeginDocument: run1.ps
%!PS-Adobe-2.0
%%Title: run1.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:19:00 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run1.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:19:00 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-09) Rshow
1.000 UL
LTb
1770 1183 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-08) Rshow
1.000 UL
LTb
1770 1766 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-07) Rshow
1.000 UL
LTb
1770 2349 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-06) Rshow
1.000 UL
LTb
1770 2931 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-05) Rshow
1.000 UL
LTb
1770 3514 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-04) Rshow
1.000 UL
LTb
1770 4097 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 4680 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.4) Cshow
1.000 UL
LTb
2620 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.5) Cshow
1.000 UL
LTb
3470 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.6) Cshow
1.000 UL
LTb
4320 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.7) Cshow
1.000 UL
LTb
5170 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.8) Cshow
1.000 UL
LTb
6020 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.9) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 2) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4355 CircleF
1872 4328 CircleF
1923 4301 CircleF
1974 4274 CircleF
2025 4247 CircleF
2076 4219 CircleF
2127 4191 CircleF
2178 4164 CircleF
2229 4135 CircleF
2280 4107 CircleF
2331 4079 CircleF
2382 4050 CircleF
2433 4022 CircleF
2484 3993 CircleF
2535 3964 CircleF
2586 3934 CircleF
2637 3905 CircleF
2688 3875 CircleF
2739 3846 CircleF
2790 3816 CircleF
2841 3786 CircleF
2892 3756 CircleF
2943 3725 CircleF
2994 3695 CircleF
3045 3664 CircleF
3096 3634 CircleF
3147 3603 CircleF
3198 3572 CircleF
3249 3541 CircleF
3300 3509 CircleF
3351 3478 CircleF
3402 3446 CircleF
3453 3414 CircleF
3504 3383 CircleF
3555 3350 CircleF
3606 3318 CircleF
3657 3286 CircleF
3708 3254 CircleF
3759 3221 CircleF
3810 3188 CircleF
3861 3156 CircleF
3912 3123 CircleF
3963 3090 CircleF
4014 3056 CircleF
4065 3023 CircleF
4116 2990 CircleF
4167 2956 CircleF
4218 2922 CircleF
4269 2889 CircleF
4320 2855 CircleF
4371 2821 CircleF
4422 2787 CircleF
4473 2752 CircleF
4524 2718 CircleF
4575 2683 CircleF
4626 2649 CircleF
4677 2614 CircleF
4728 2579 CircleF
4779 2544 CircleF
4830 2509 CircleF
4881 2474 CircleF
4932 2439 CircleF
4983 2404 CircleF
5034 2368 CircleF
5085 2333 CircleF
5136 2297 CircleF
5187 2261 CircleF
5238 2225 CircleF
5289 2189 CircleF
5340 2153 CircleF
5391 2117 CircleF
5442 2081 CircleF
5493 2044 CircleF
5544 2008 CircleF
5595 1971 CircleF
5646 1935 CircleF
5697 1898 CircleF
5748 1861 CircleF
5799 1824 CircleF
5850 1787 CircleF
5901 1750 CircleF
5952 1713 CircleF
6003 1676 CircleF
6054 1638 CircleF
6105 1601 CircleF
6156 1563 CircleF
6207 1526 CircleF
6258 1488 CircleF
6309 1450 CircleF
6360 1412 CircleF
6411 1374 CircleF
6462 1336 CircleF
6513 1298 CircleF
6564 1260 CircleF
6615 1222 CircleF
6666 1183 CircleF
6717 1145 CircleF
6768 1106 CircleF
6819 1068 CircleF
6870 1029 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial 1980 222 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 1980 222 a 3324 222 a
 currentpoint grestore moveto
 3324 222
a 3084 1669 a Ff(\(b\))-235 1850 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 -235 1850 a -235 1850
a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 -235 1850 a @beginspecial 50 @llx 50 @lly 554 @urx
770 @ury 5040 @rwi @setspecial
%%BeginDocument: run3.ps
%!PS-Adobe-2.0
%%Title: run3.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:21:04 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run3.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:21:04 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-09) Rshow
1.000 UL
LTb
1770 1183 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-08) Rshow
1.000 UL
LTb
1770 1766 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-07) Rshow
1.000 UL
LTb
1770 2349 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-06) Rshow
1.000 UL
LTb
1770 2931 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-05) Rshow
1.000 UL
LTb
1770 3514 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-04) Rshow
1.000 UL
LTb
1770 4097 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 4680 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.4) Cshow
1.000 UL
LTb
2620 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.5) Cshow
1.000 UL
LTb
3470 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.6) Cshow
1.000 UL
LTb
4320 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.7) Cshow
1.000 UL
LTb
5170 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.8) Cshow
1.000 UL
LTb
6020 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.9) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 2) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4440 CircleF
1872 4414 CircleF
1923 4389 CircleF
1974 4363 CircleF
2025 4337 CircleF
2076 4311 CircleF
2127 4284 CircleF
2178 4257 CircleF
2229 4231 CircleF
2280 4204 CircleF
2331 4176 CircleF
2382 4149 CircleF
2433 4121 CircleF
2484 4094 CircleF
2535 4066 CircleF
2586 4038 CircleF
2637 4009 CircleF
2688 3981 CircleF
2739 3952 CircleF
2790 3924 CircleF
2841 3895 CircleF
2892 3866 CircleF
2943 3836 CircleF
2994 3807 CircleF
3045 3777 CircleF
3096 3747 CircleF
3147 3717 CircleF
3198 3687 CircleF
3249 3657 CircleF
3300 3627 CircleF
3351 3596 CircleF
3402 3565 CircleF
3453 3534 CircleF
3504 3503 CircleF
3555 3472 CircleF
3606 3441 CircleF
3657 3409 CircleF
3708 3377 CircleF
3759 3346 CircleF
3810 3314 CircleF
3861 3281 CircleF
3912 3249 CircleF
3963 3217 CircleF
4014 3184 CircleF
4065 3151 CircleF
4116 3118 CircleF
4167 3085 CircleF
4218 3052 CircleF
4269 3019 CircleF
4320 2985 CircleF
4371 2952 CircleF
4422 2918 CircleF
4473 2884 CircleF
4524 2850 CircleF
4575 2816 CircleF
4626 2782 CircleF
4677 2747 CircleF
4728 2713 CircleF
4779 2678 CircleF
4830 2643 CircleF
4881 2608 CircleF
4932 2573 CircleF
4983 2538 CircleF
5034 2503 CircleF
5085 2467 CircleF
5136 2432 CircleF
5187 2396 CircleF
5238 2360 CircleF
5289 2324 CircleF
5340 2288 CircleF
5391 2252 CircleF
5442 2216 CircleF
5493 2179 CircleF
5544 2143 CircleF
5595 2106 CircleF
5646 2069 CircleF
5697 2032 CircleF
5748 1995 CircleF
5799 1958 CircleF
5850 1920 CircleF
5901 1883 CircleF
5952 1846 CircleF
6003 1808 CircleF
6054 1770 CircleF
6105 1732 CircleF
6156 1694 CircleF
6207 1656 CircleF
6258 1618 CircleF
6309 1580 CircleF
6360 1541 CircleF
6411 1503 CircleF
6462 1464 CircleF
6513 1425 CircleF
6564 1386 CircleF
6615 1347 CircleF
6666 1308 CircleF
6717 1269 CircleF
6768 1230 CircleF
6819 1190 CircleF
6870 1151 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial -235 1850 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 -235 1850 a 1109 1850 a
 currentpoint grestore moveto
 1109
1850 a 874 3297 a Ff(\(c\))1980 1850 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 1980 1850 a 1980
1850 a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 1980 1850 a @beginspecial 50 @llx 50 @lly 554
@urx 770 @ury 5040 @rwi @setspecial
%%BeginDocument: run4.ps
%!PS-Adobe-2.0
%%Title: run4.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:21:37 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run4.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:21:37 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-09) Rshow
1.000 UL
LTb
1770 1183 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-08) Rshow
1.000 UL
LTb
1770 1766 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-07) Rshow
1.000 UL
LTb
1770 2349 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-06) Rshow
1.000 UL
LTb
1770 2931 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-05) Rshow
1.000 UL
LTb
1770 3514 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-04) Rshow
1.000 UL
LTb
1770 4097 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 4680 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.6) Cshow
1.000 UL
LTb
2620 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 1.8) Cshow
1.000 UL
LTb
3470 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 2) Cshow
1.000 UL
LTb
4320 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 2.2) Cshow
1.000 UL
LTb
5170 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 2.4) Cshow
1.000 UL
LTb
6020 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 2.6) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 2.8) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4504 CircleF
1872 4475 CircleF
1923 4445 CircleF
1974 4415 CircleF
2025 4385 CircleF
2076 4355 CircleF
2127 4324 CircleF
2178 4294 CircleF
2229 4263 CircleF
2280 4232 CircleF
2331 4200 CircleF
2382 4169 CircleF
2433 4137 CircleF
2484 4105 CircleF
2535 4073 CircleF
2586 4041 CircleF
2637 4009 CircleF
2688 3976 CircleF
2739 3943 CircleF
2790 3910 CircleF
2841 3877 CircleF
2892 3844 CircleF
2943 3810 CircleF
2994 3777 CircleF
3045 3743 CircleF
3096 3709 CircleF
3147 3675 CircleF
3198 3641 CircleF
3249 3606 CircleF
3300 3572 CircleF
3351 3537 CircleF
3402 3502 CircleF
3453 3467 CircleF
3504 3432 CircleF
3555 3397 CircleF
3606 3361 CircleF
3657 3326 CircleF
3708 3290 CircleF
3759 3254 CircleF
3810 3218 CircleF
3861 3182 CircleF
3912 3146 CircleF
3963 3109 CircleF
4014 3073 CircleF
4065 3036 CircleF
4116 2999 CircleF
4167 2962 CircleF
4218 2925 CircleF
4269 2888 CircleF
4320 2851 CircleF
4371 2814 CircleF
4422 2776 CircleF
4473 2738 CircleF
4524 2701 CircleF
4575 2663 CircleF
4626 2625 CircleF
4677 2587 CircleF
4728 2549 CircleF
4779 2510 CircleF
4830 2472 CircleF
4881 2434 CircleF
4932 2395 CircleF
4983 2356 CircleF
5034 2318 CircleF
5085 2279 CircleF
5136 2240 CircleF
5187 2201 CircleF
5238 2161 CircleF
5289 2122 CircleF
5340 2083 CircleF
5391 2043 CircleF
5442 2004 CircleF
5493 1964 CircleF
5544 1924 CircleF
5595 1884 CircleF
5646 1844 CircleF
5697 1804 CircleF
5748 1764 CircleF
5799 1724 CircleF
5850 1684 CircleF
5901 1644 CircleF
5952 1603 CircleF
6003 1563 CircleF
6054 1522 CircleF
6105 1481 CircleF
6156 1440 CircleF
6207 1400 CircleF
6258 1359 CircleF
6309 1318 CircleF
6360 1277 CircleF
6411 1235 CircleF
6462 1194 CircleF
6513 1153 CircleF
6564 1111 CircleF
6615 1070 CircleF
6666 1028 CircleF
6717 987 CircleF
6768 945 CircleF
6819 903 CircleF
6870 862 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial 1980 1850 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 1980 1850 a 3324 1850 a
 currentpoint grestore moveto
 3324
1850 a 3084 3297 a Ff(\(d\))-235 3478 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 -235 3478 a -235
3478 a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 -235 3478 a @beginspecial 50 @llx 50 @lly 554
@urx 770 @ury 5040 @rwi @setspecial
%%BeginDocument: run5.ps
%!PS-Adobe-2.0
%%Title: run5.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:56:33 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run5.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:56:33 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-09) Rshow
1.000 UL
LTb
1770 1183 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-08) Rshow
1.000 UL
LTb
1770 1766 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-07) Rshow
1.000 UL
LTb
1770 2349 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-06) Rshow
1.000 UL
LTb
1770 2931 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-05) Rshow
1.000 UL
LTb
1770 3514 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-04) Rshow
1.000 UL
LTb
1770 4097 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 4680 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 4) Cshow
1.000 UL
LTb
3045 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 6) Cshow
1.000 UL
LTb
4320 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 8) Cshow
1.000 UL
LTb
5595 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 10) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 12) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4131 CircleF
1872 4099 CircleF
1923 4067 CircleF
1974 4035 CircleF
2025 4003 CircleF
2076 3971 CircleF
2127 3939 CircleF
2178 3907 CircleF
2229 3875 CircleF
2280 3844 CircleF
2331 3812 CircleF
2382 3780 CircleF
2433 3749 CircleF
2484 3717 CircleF
2535 3685 CircleF
2586 3654 CircleF
2637 3622 CircleF
2688 3591 CircleF
2739 3559 CircleF
2790 3528 CircleF
2841 3497 CircleF
2892 3465 CircleF
2943 3434 CircleF
2994 3403 CircleF
3045 3371 CircleF
3096 3340 CircleF
3147 3309 CircleF
3198 3278 CircleF
3249 3247 CircleF
3300 3215 CircleF
3351 3184 CircleF
3402 3153 CircleF
3453 3122 CircleF
3504 3091 CircleF
3555 3060 CircleF
3606 3029 CircleF
3657 2998 CircleF
3708 2967 CircleF
3759 2936 CircleF
3810 2905 CircleF
3861 2874 CircleF
3912 2843 CircleF
3963 2812 CircleF
4014 2781 CircleF
4065 2750 CircleF
4116 2719 CircleF
4167 2689 CircleF
4218 2658 CircleF
4269 2627 CircleF
4320 2596 CircleF
4371 2565 CircleF
4422 2534 CircleF
4473 2504 CircleF
4524 2473 CircleF
4575 2442 CircleF
4626 2411 CircleF
4677 2381 CircleF
4728 2350 CircleF
4779 2319 CircleF
4830 2288 CircleF
4881 2258 CircleF
4932 2227 CircleF
4983 2196 CircleF
5034 2166 CircleF
5085 2135 CircleF
5136 2104 CircleF
5187 2074 CircleF
5238 2043 CircleF
5289 2013 CircleF
5340 1982 CircleF
5391 1951 CircleF
5442 1921 CircleF
5493 1890 CircleF
5544 1860 CircleF
5595 1829 CircleF
5646 1798 CircleF
5697 1768 CircleF
5748 1737 CircleF
5799 1707 CircleF
5850 1676 CircleF
5901 1646 CircleF
5952 1615 CircleF
6003 1585 CircleF
6054 1554 CircleF
6105 1524 CircleF
6156 1493 CircleF
6207 1463 CircleF
6258 1432 CircleF
6309 1402 CircleF
6360 1371 CircleF
6411 1341 CircleF
6462 1311 CircleF
6513 1280 CircleF
6564 1250 CircleF
6615 1219 CircleF
6666 1189 CircleF
6717 1158 CircleF
6768 1128 CircleF
6819 1098 CircleF
6870 1067 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial -235 3478 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 -235 3478 a 1109 3478 a
 currentpoint grestore moveto
 1109
3478 a 874 4925 a Ff(\(e\))1980 3478 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 1980 3478 a 1980
3478 a
 currentpoint currentpoint translate .32 .32 scale neg exch neg exch translate
 1980 3478 a @beginspecial 50 @llx 50 @lly 554
@urx 770 @ury 5040 @rwi @setspecial
%%BeginDocument: run6.ps
%!PS-Adobe-2.0
%%Title: run6.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Jun 20 11:56:51 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (run6.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 20 11:56:51 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1770 600 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-09) Rshow
1.000 UL
LTb
1770 1183 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-08) Rshow
1.000 UL
LTb
1770 1766 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-07) Rshow
1.000 UL
LTb
1770 2349 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-06) Rshow
1.000 UL
LTb
1770 2931 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-05) Rshow
1.000 UL
LTb
1770 3514 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-04) Rshow
1.000 UL
LTb
1770 4097 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-03) Rshow
1.000 UL
LTb
1770 4680 M
63 0 V
5037 0 R
-63 0 V
-5217 0 R
(1E-02) Rshow
1.000 UL
LTb
1770 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 4) Cshow
1.000 UL
LTb
3045 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 6) Cshow
1.000 UL
LTb
4320 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 8) Cshow
1.000 UL
LTb
5595 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 10) Cshow
1.000 UL
LTb
6870 600 M
0 63 V
0 4017 R
0 -63 V
0 -4317 R
( 12) Cshow
1.000 UL
LTb
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
/Times-Roman findfont 300 scalefont setfont
1821 4191 CircleF
1872 4159 CircleF
1923 4127 CircleF
1974 4095 CircleF
2025 4063 CircleF
2076 4032 CircleF
2127 4000 CircleF
2178 3968 CircleF
2229 3936 CircleF
2280 3904 CircleF
2331 3873 CircleF
2382 3841 CircleF
2433 3810 CircleF
2484 3778 CircleF
2535 3746 CircleF
2586 3715 CircleF
2637 3684 CircleF
2688 3652 CircleF
2739 3621 CircleF
2790 3589 CircleF
2841 3558 CircleF
2892 3527 CircleF
2943 3495 CircleF
2994 3464 CircleF
3045 3433 CircleF
3096 3402 CircleF
3147 3371 CircleF
3198 3340 CircleF
3249 3308 CircleF
3300 3277 CircleF
3351 3246 CircleF
3402 3215 CircleF
3453 3184 CircleF
3504 3153 CircleF
3555 3122 CircleF
3606 3091 CircleF
3657 3060 CircleF
3708 3030 CircleF
3759 2999 CircleF
3810 2968 CircleF
3861 2937 CircleF
3912 2906 CircleF
3963 2875 CircleF
4014 2844 CircleF
4065 2814 CircleF
4116 2783 CircleF
4167 2752 CircleF
4218 2721 CircleF
4269 2691 CircleF
4320 2660 CircleF
4371 2629 CircleF
4422 2599 CircleF
4473 2568 CircleF
4524 2537 CircleF
4575 2507 CircleF
4626 2476 CircleF
4677 2446 CircleF
4728 2415 CircleF
4779 2384 CircleF
4830 2354 CircleF
4881 2323 CircleF
4932 2293 CircleF
4983 2262 CircleF
5034 2232 CircleF
5085 2201 CircleF
5136 2171 CircleF
5187 2140 CircleF
5238 2110 CircleF
5289 2079 CircleF
5340 2049 CircleF
5391 2019 CircleF
5442 1988 CircleF
5493 1958 CircleF
5544 1927 CircleF
5595 1897 CircleF
5646 1867 CircleF
5697 1836 CircleF
5748 1806 CircleF
5799 1775 CircleF
5850 1745 CircleF
5901 1715 CircleF
5952 1684 CircleF
6003 1654 CircleF
6054 1624 CircleF
6105 1594 CircleF
6156 1563 CircleF
6207 1533 CircleF
6258 1503 CircleF
6309 1472 CircleF
6360 1442 CircleF
6411 1412 CircleF
6462 1382 CircleF
6513 1351 CircleF
6564 1321 CircleF
6615 1291 CircleF
6666 1261 CircleF
6717 1230 CircleF
6768 1200 CircleF
6819 1170 CircleF
6870 1140 CircleF
1.000 UL
LTb
1770 4680 N
0 -4080 V
5100 0 V
0 4080 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1

%%EndDocument
 @endspecial 1980 3478 a
 currentpoint currentpoint translate 1 .32 div 1 .32 div scale neg exch neg exch translate
 1980 3478 a 3324 3478 a
 currentpoint grestore moveto
 3324
3478 a 3092 4925 a Ff(\(f)6 b(\))454 5128 y Fn(Fig.)32
b(2:)43 b(The)34 b(v)m(ertical)g(axis)f(is)g(1)22 b Fe(\000)g
Fj(P)14 b Fn(\()p Fj(x)p Fn(\))33 b(from)f(\(8\);)g(the)h(horizon)m
(tal)g(axis)h(is)f Fj(x)p Fn(.)1926 5649 y(9)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop 1349 282 a Fn(T)-8 b(able)33 b(1:)43
b(V)-8 b(alues)34 b(for)e(Figure)g(1)1812 519 y Fj(n)190
b(l)204 b(t)p 1477 558 946 4 v 1530 642 a Fn(\(a\))102
b(500)d(310)f(5.0)1527 763 y(\(b\))i(250)f(270)f(2.4)1532
883 y(\(c\))106 b(100)99 b(250)f(0.9)1527 1004 y(\(d\))148
b(50)100 b(250)e(0.5)1532 1124 y(\(e\))154 b(25)100 b(330)e(0.3)1536
1244 y(\(f)7 b(\))156 b(10)100 b(270)e(0.1)1349 1869
y(T)-8 b(able)33 b(2:)43 b(V)-8 b(alues)34 b(for)e(Figure)g(2)1812
2105 y Fj(n)190 b(l)204 b(t)p 1477 2145 V 1530 2229 a
Fn(\(a\))102 b(500)d(310)f(5.7)1527 2349 y(\(b\))i(250)f(330)f(3.0)1532
2470 y(\(c\))106 b(100)99 b(270)f(1.0)1527 2590 y(\(d\))148
b(50)100 b(290)e(0.6)1532 2710 y(\(e\))154 b(25)100 b(350)e(0.4)1536
2831 y(\(f)7 b(\))156 b(10)100 b(270)e(0.2)944 3455 y(T)-8
b(able)34 b(3:)43 b(V)-8 b(alues)33 b(for)f(b)s(oth)h(Figure)f(1)h(and)
f(Figure)h(2)1324 3691 y Fj(n)909 b(p)2340 3706 y Fd(k)p
889 3731 2122 4 v 942 3936 a Fn(\(a\))201 b(500)559 b
Fj(C)2044 3951 y Fi(\(a\))2160 3936 y Fe(\001)22 b Fn(\(300)f(+)h
Fj(k)s Fn(\))2606 3899 y Fm(\000)p Fi(2)939 4176 y Fn(\(b\))199
b(250)584 b Fj(C)2069 4192 y Fi(\(b\))2189 4176 y Fe(\001)22
b Fn(\(260)f Fe(\000)i Fj(k)s Fn(\))2637 4140 y Fi(3)944
4419 y Fn(\(c\))205 b(100)432 b Fj(C)1917 4434 y Fi(\(c\))2030
4419 y Fe(\001)22 b(b)p Fn(\(40)g(+)g Fj(k)s Fn(\))p
Fj(=)p Fn(40)p Fe(c)2663 4383 y Fm(\000)p Fi(1)p Fd(=)p
Fi(6)939 4660 y Fn(\(d\))248 b(50)298 b Fj(C)1783 4675
y Fi(\(d\))1904 4660 y Fe(\001)21 b Fn(\(1)p Fj(=)p Fn(2)h(+)g(ln)p
Fe(b)p Fn(\(61)g Fe(\000)h Fj(k)s Fn(\))p Fj(=)p Fn(10)p
Fe(c)p Fn(\))944 4900 y(\(e\))254 b(25)555 b Fj(C)2040
4916 y Fi(\(e\))2152 4900 y Fe(\001)22 b Fn(exp)q(\()p
Fe(\000)p Fn(5)p Fj(k)s(=)p Fn(8\))948 5141 y(\(f)7 b(\))256
b(10)439 b Fj(C)1924 5157 y Fi(\(f)5 b(\))2031 5141 y
Fe(\001)22 b Fn(exp)q(\()p Fe(\000)p Fn(\()p Fj(k)k Fe(\000)c
Fn(1\))2646 5105 y Fi(2)2686 5141 y Fj(=)p Fn(6\))1901
5649 y(10)p eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 100 a Fk(6.)56 b(The)38 b(p)s(o)m(w)m(er)f
(of)h(the)f(ro)s(ot-mean-square)146 295 y Fn(This)c(section)g(v)m(ery)h
(brie\015y)f(compares)g(the)f(statistic)h(de\014ned)g(in)f(\(2\))g(and)
g(the)g(classic)i Fj(\037)3492 259 y Fi(2)3563 295 y
Fn(statistic)0 415 y(de\014ned)k(in)g(\(3\).)56 b(This)38
b(abbreviated)g(comparison)g(is)f(in)h(no)e(w)m(a)m(y)j(complete;)h(a)d
(m)m(uc)m(h)h(more)g(compre-)0 535 y(hensiv)m(e)d(treatmen)m(t)e
(constitutes)i(a)d(forthcoming)h(article.)146 656 y(W)-8
b(e)26 b(will)f(discuss)j(four)c(statistics)j(in)e(all)g(|)g(the)g(ro)s
(ot-mean-square,)i Fj(\037)2774 620 y Fi(2)2813 656 y
Fn(,)g(the)e(\(log\)lik)m(eliho)s(o)s(d-ratio,)0 776
y(and)40 b(the)h(F)-8 b(reeman-T)g(uk)m(ey)43 b(or)d(Hellinger)h
(distance.)68 b(W)-8 b(e)41 b(use)g Fj(p)2462 791 y Fi(1)2501
776 y Fn(,)g Fj(p)2618 791 y Fi(2)2657 776 y Fn(,)h(.)16
b(.)g(.)g(,)44 b Fj(p)2975 791 y Fd(n)p Fm(\000)p Fi(1)3112
776 y Fn(,)c Fj(p)3228 791 y Fd(n)3315 776 y Fn(to)g(denote)i(the)0
897 y(exp)s(ected)30 b(fractions)e(of)g(the)g Fj(m)h
Fn(i.i.d.)f(dra)m(ws)h(falling)f(in)g(eac)m(h)h(of)f(the)g
Fj(n)g Fn(bins,)i(and)e Fj(Y)3115 912 y Fi(1)3155 897
y Fn(,)g Fj(Y)3267 912 y Fi(2)3306 897 y Fn(,)h(.)16
b(.)g(.)g(,)30 b Fj(Y)3605 912 y Fd(n)p Fm(\000)p Fi(1)3741
897 y Fn(,)e Fj(Y)3853 912 y Fd(n)0 1017 y Fn(to)36 b(denote)i(the)f
(observ)m(ed)i(fractions)e(of)g(the)g Fj(m)g Fn(dra)m(ws)h(falling)e
(in)h(the)h Fj(n)f Fn(bins.)57 b(That)37 b(is,)h Fj(p)3486
1032 y Fi(1)3526 1017 y Fn(,)f Fj(p)3639 1032 y Fi(2)3678
1017 y Fn(,)h(.)16 b(.)g(.)g(,)0 1137 y Fj(p)49 1152
y Fd(n)p Fm(\000)p Fi(1)186 1137 y Fn(,)34 b Fj(p)296
1152 y Fd(n)377 1137 y Fn(are)f(the)i(probabilities)g(asso)s(ciated)f
(with)h(the)f Fj(n)g Fn(bins)h(in)f(the)g(mo)s(del)g(distribution,)h
(whereas)0 1258 y Fj(Y)57 1273 y Fi(1)96 1258 y Fn(,)d
Fj(Y)212 1273 y Fi(2)251 1258 y Fn(,)g(.)16 b(.)g(.)g(,)33
b Fj(Y)556 1273 y Fd(n)p Fm(\000)p Fi(1)693 1258 y Fn(,)e
Fj(Y)808 1273 y Fd(n)887 1258 y Fn(are)g(the)i(fractions)f(of)f(the)h
Fj(m)g Fn(dra)m(ws)h(falling)f(in)g(the)g Fj(n)g Fn(bins)g(when)h(w)m
(e)g(tak)m(e)g(the)0 1378 y(dra)m(ws)h(from)e(a)g(certain)h(\\actual")g
(distribution)g(that)g(ma)m(y)g(di\013er)g(from)f(the)h(mo)s(del.)146
1499 y(With)g(this)h(notation,)e(the)h(square)h(of)e(the)h(ro)s
(ot-mean-square)f(statistic)i(is)1490 1789 y Fj(X)h Fn(=)28
b Fj(m)1862 1664 y Fd(n)1811 1694 y Fc(X)1819 1906 y
Fd(k)r Fi(=1)1955 1789 y Fn(\()p Fj(Y)2050 1804 y Fd(k)2115
1789 y Fe(\000)22 b Fj(p)2263 1804 y Fd(k)2306 1789 y
Fn(\))2344 1748 y Fi(2)2383 1789 y Fj(:)1317 b Fn(\(18\))0
2094 y(W)-8 b(e)30 b(use)i(the)e(designation)h(\\ro)s(ot-mean-square")e
(to)h(lab)s(el)g(the)h(lines)g(asso)s(ciated)g(with)g
Fj(X)38 b Fn(in)30 b(the)h(plots)0 2214 y(b)s(elo)m(w.)146
2334 y(The)j(classic)g(P)m(earson)g Fj(\037)1075 2298
y Fi(2)1147 2334 y Fn(statistic)f(is)1465 2625 y Fj(\037)1526
2584 y Fi(2)1594 2625 y Fn(=)27 b Fj(m)1850 2500 y Fd(n)1799
2530 y Fc(X)1807 2742 y Fd(k)r Fi(=1)1970 2557 y Fn(\()p
Fj(Y)2065 2572 y Fd(k)2129 2557 y Fe(\000)c Fj(p)2278
2572 y Fd(k)2320 2557 y Fn(\))2358 2521 y Fi(2)p 1970
2602 428 4 v 2138 2693 a Fj(p)2187 2708 y Fd(k)2407 2625
y Fj(:)1293 b Fn(\(19\))0 2939 y(W)-8 b(e)26 b(use)g(the)g(standard)g
(designation)g(\\)p Fj(\037)1501 2903 y Fi(2)1540 2939
y Fn(")f(to)h(lab)s(el)f(the)h(lines)h(asso)s(ciated)f(with)g
Fj(\037)3065 2903 y Fi(2)3130 2939 y Fn(in)f(the)h(plots)g(b)s(elo)m
(w.)146 3059 y(The)34 b(\(log\)lik)m(eliho)s(o)s(d-ratio)e(or)g(\\)p
Fj(G)1470 3023 y Fi(2)1509 3059 y Fn(")g(statistic)i(is)1401
3355 y Fj(G)1478 3314 y Fi(2)1545 3355 y Fn(=)27 b(2)p
Fj(m)1849 3231 y Fd(n)1799 3261 y Fc(X)1807 3473 y Fd(k)r
Fi(=1)1959 3355 y Fj(Y)2016 3370 y Fd(k)2092 3355 y Fn(ln)2190
3215 y Fc(\022)2273 3288 y Fj(Y)2330 3303 y Fd(k)p 2273
3332 100 4 v 2277 3424 a Fj(p)2326 3439 y Fd(k)2382 3215
y Fc(\023)2472 3355 y Fj(;)1228 b Fn(\(20\))0 3670 y(under)29
b(the)g(con)m(v)m(en)m(tion)h(that)e Fj(Y)1183 3685 y
Fd(k)1259 3670 y Fn(ln\()p Fj(Y)1435 3685 y Fd(k)1477
3670 y Fj(=p)1575 3685 y Fd(k)1618 3670 y Fn(\))f(=)h(0)g(if)g
Fj(Y)2006 3685 y Fd(k)2076 3670 y Fn(=)g(0.)41 b(W)-8
b(e)29 b(use)g(the)g(common)g(designation)g(\\)p Fj(G)3812
3634 y Fi(2)3851 3670 y Fn(")0 3790 y(to)j(lab)s(el)h(the)g(lines)h
(asso)s(ciated)f(with)g Fj(G)1509 3754 y Fi(2)1581 3790
y Fn(in)g(the)g(plots)g(b)s(elo)m(w.)146 3911 y(The)h(F)-8
b(reeman-T)g(uk)m(ey)34 b(or)f(Hellinger-distance)h(statistic)g(is)1354
4201 y Fj(H)1443 4160 y Fi(2)1510 4201 y Fn(=)27 b(4)p
Fj(m)1815 4076 y Fd(n)1764 4106 y Fc(X)1772 4318 y Fd(k)r
Fi(=1)1908 4201 y Fn(\()1946 4109 y Fc(p)p 2046 4109
V 92 x Fj(Y)2103 4216 y Fd(k)2167 4201 y Fe(\000)2267
4134 y(p)p 2350 4134 92 4 v 67 x Fj(p)2399 4216 y Fd(k)2441
4201 y Fn(\))2479 4160 y Fi(2)2519 4201 y Fj(:)1181 b
Fn(\(21\))0 4515 y(W)-8 b(e)35 b(use)h(the)f(w)m(ell-kno)m(wn)i
(designation)e(\\F)-8 b(reeman-T)g(uk)m(ey")37 b(to)d(lab)s(el)h(the)g
(lines)h(asso)s(ciated)g(with)f Fj(H)3861 4479 y Fi(2)0
4636 y Fn(in)e(the)g(plots)g(b)s(elo)m(w.)146 4756 y(In)g(the)f(limit)h
(that)f(the)g(n)m(um)m(b)s(er)i Fj(m)e Fn(of)g(dra)m(ws)h(is)f(large,)g
(the)h(distributions)h(of)d Fj(\037)3179 4720 y Fi(2)3251
4756 y Fn(de\014ned)i(in)f(\(19\),)0 4876 y Fj(G)77 4840
y Fi(2)158 4876 y Fn(de\014ned)42 b(in)g(\(20\),)g(and)g
Fj(H)1156 4840 y Fi(2)1236 4876 y Fn(de\014ned)g(\(21\))f(are)g(all)g
(the)h(same)g(when)g(the)g(actual)f(distribution)h(of)0
4997 y(the)d(dra)m(ws)h(is)f(iden)m(tical)h(to)f(the)g(mo)s(del)g
(\(see,)i(for)d(example,)k([1]\).)62 b(Ho)m(w)m(ev)m(er,)43
b(when)c(the)h(n)m(um)m(b)s(er)g Fj(m)0 5117 y Fn(of)g(dra)m(ws)i(is)f
(not)g(large,)i(then)e(their)g(distributions)h(can)f(di\013er)h
(substan)m(tially)-8 b(.)69 b(In)42 b(this)f(section,)j(w)m(e)0
5238 y(compute)31 b(con\014dence)g(lev)m(els)h(via)e(Mon)m(te)g(Carlo)g
(sim)m(ulations,)i(without)e(relying)h(on)e(the)h(n)m(um)m(b)s(er)h
Fj(m)f Fn(of)0 5358 y(dra)m(ws)k(to)e(b)s(e)h(large.)1901
5649 y(11)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 100 a Fk(Remark)38 b(6.1.)j
Fn(Belo)m(w,)34 b(w)m(e)f(sa)m(y)g(that)f(a)h(statistic)g(based)g(on)f
(giv)m(en)i(i.i.d.)f(dra)m(ws)g(\\distinguishes")i(the)0
220 y(actual)k(underlying)i(distribution)f(of)f(the)g(dra)m(ws)i(from)e
(the)g(mo)s(del)h(distribution)g(to)f(mean)h(that)f(the)0
340 y(computed)27 b(con\014dence)g(lev)m(el)g(is)f(at)f(least)h(99\045)
f(for)g(99\045)g(of)g(40,000)f(sim)m(ulations,)29 b(with)d(eac)m(h)g
(sim)m(ulation)0 461 y(generating)32 b Fj(m)g Fn(i.i.d.)g(dra)m(ws)h
(according)f(to)g(the)g(actual)g(distribution.)44 b(W)-8
b(e)32 b(computed)h(the)f(con\014dence)0 581 y(lev)m(els)47
b(b)m(y)f(conducting)g(40,000)e(sim)m(ulations,)50 b(eac)m(h)45
b(generating)h Fj(m)f Fn(i.i.d.)h(dra)m(ws)g(according)f(to)g(the)0
702 y(mo)s(del)33 b(distribution.)0 922 y Fh(6.1.)49
b(First)35 b(example)146 1067 y Fn(Let)e(us)g(\014rst)g(sp)s(ecify)h
(the)f(mo)s(del)g(distribution)h(to)e(b)s(e)1792 1326
y Fj(p)1841 1341 y Fi(1)1908 1326 y Fn(=)2022 1258 y(1)p
2022 1303 49 4 v 2022 1394 a(4)2081 1326 y Fj(;)1619
b Fn(\(22\))1792 1634 y Fj(p)1841 1649 y Fi(2)1908 1634
y Fn(=)2022 1566 y(1)p 2022 1611 V 2022 1702 a(4)2081
1634 y Fj(;)g Fn(\(23\))1690 1896 y Fj(p)1739 1911 y
Fd(k)1809 1896 y Fn(=)2037 1828 y(1)p 1923 1873 278 4
v 1923 1964 a(2)p Fj(n)22 b Fe(\000)g Fn(4)3727 1896
y(\(24\))0 2104 y(for)32 b Fj(k)f Fn(=)c(3,)33 b(4,)f(.)16
b(.)g(.)g(,)34 b Fj(n)22 b Fe(\000)h Fn(1,)32 b Fj(n)p
Fn(.)44 b(W)-8 b(e)33 b(consider)h Fj(m)f Fn(i.i.d.)g(dra)m(ws)g(from)g
(the)g(distribution)1801 2363 y(~)-58 b Fj(p)1841 2378
y Fi(1)1908 2363 y Fn(=)2022 2295 y(3)p 2022 2340 49
4 v 2022 2431 a(8)2081 2363 y Fj(;)1619 b Fn(\(25\))1801
2671 y(~)-58 b Fj(p)1841 2686 y Fi(2)1908 2671 y Fn(=)2022
2603 y(1)p 2022 2648 V 2022 2739 a(8)2081 2671 y Fj(;)1619
b Fn(\(26\))1801 2876 y(~)-57 b Fj(p)1842 2891 y Fd(k)1912
2876 y Fn(=)28 b Fj(p)2065 2891 y Fd(k)3727 2876 y Fn(\(27\))0
3050 y(for)k Fj(k)f Fn(=)c(3,)33 b(4,)f(.)16 b(.)g(.)g(,)34
b Fj(n)22 b Fe(\000)h Fn(1,)32 b Fj(n)p Fn(,)h(where)h
Fj(p)1478 3065 y Fi(3)1517 3050 y Fn(,)f Fj(p)1626 3065
y Fi(4)1665 3050 y Fn(,)g(.)16 b(.)g(.)g(,)34 b Fj(p)1964
3065 y Fd(n)p Fm(\000)p Fi(1)2101 3050 y Fn(,)e Fj(p)2209
3065 y Fd(n)2289 3050 y Fn(are)g(the)h(same)h(as)e(in)h(\(24\).)146
3171 y(Figure)h(3)f(plots)h(the)g(p)s(ercen)m(tage)h(of)e(40,000)g(sim)
m(ulations,)i(eac)m(h)g(generating)f(200)e(i.i.d.)j(dra)m(ws)f(ac-)0
3291 y(cording)e(to)f(the)i(actual)f(distribution)g(de\014ned)i(in)e
(\(25\){\(27\),)e(that)i(are)g(successfully)j(detected)e(as)f(not)0
3411 y(arising)c(from)g(the)g(mo)s(del)g(distribution)h(at)f(the)g
(1\045)g(signi\014cance)h(lev)m(el)h(\(meaning)e(that)g(the)g(asso)s
(ciated)0 3532 y(statistic)f(for)f(the)h(sim)m(ulation)g(yields)h(a)e
(con\014dence)i(lev)m(el)g(of)d(99\045)h(or)g(greater\).)41
b(W)-8 b(e)27 b(computed)h(the)e(sig-)0 3652 y(ni\014cance)32
b(lev)m(els)g(b)m(y)g(conducting)f(40,000)f(sim)m(ulations,)i(eac)m(h)g
(generating)e(200)g(i.i.d.)h(dra)m(ws)h(according)0 3773
y(to)38 b(the)h(mo)s(del)g(distribution)h(de\014ned)g(in)f
(\(22\){\(24\).)60 b(Figure)38 b(3)g(sho)m(ws)j(that)d(the)h(ro)s
(ot-mean-square)0 3893 y(is)46 b(successful)i(in)e(at)f(least)h(99\045)
g(of)f(the)g(sim)m(ulations,)51 b(while)c(the)f(classic)h
Fj(\037)2975 3857 y Fi(2)3060 3893 y Fn(statistic)f(fails)g(often,)0
4013 y(succeeding)35 b(in)e(only)g(81\045)f(of)g(the)h(sim)m(ulations)h
(for)e Fj(n)c Fn(=)g(16,)k(and)h(less)h(than)e(5\045)h(for)f
Fj(n)c Fe(\025)g Fn(256.)146 4134 y(Figure)44 b(4)f(plots)g(the)h(n)m
(um)m(b)s(er)h Fj(m)e Fn(of)g(dra)m(ws)h(required)h(to)e(distinguish)i
(the)f(actual)f(distribution)0 4254 y(de\014ned)f(in)g(\(25\){\(27\))d
(from)i(the)g(mo)s(del)h(distribution)g(de\014ned)g(in)g
(\(22\){\(24\).)67 b(Remark)42 b(6.1)e(ab)s(o)m(v)m(e)0
4375 y(sp)s(eci\014es)30 b(what)f(w)m(e)g(mean)g(b)m(y)h
(\\distinguish.")43 b(Figure)28 b(4)g(sho)m(ws)i(that)e(the)h(ro)s
(ot-mean-square)f(requires)0 4495 y(only)36 b(ab)s(out)f
Fj(m)d Fn(=)g(185)j(dra)m(ws)h(for)f(an)m(y)h(n)m(um)m(b)s(er)g
Fj(n)g Fn(of)e(bins,)j(while)g(the)e(classic)i Fj(\037)3119
4459 y Fi(2)3194 4495 y Fn(statistic)f(requires)0 4615
y(90\045)i(more)h(dra)m(ws)h(for)e Fj(n)g Fn(=)g(16,)h(and)g(greater)f
(than)h(300\045)f(more)h(for)f Fj(n)g Fe(\025)g Fn(128.)61
b(F)-8 b(urthermore,)41 b(the)0 4736 y(classic)28 b Fj(\037)354
4700 y Fi(2)419 4736 y Fn(statistic)g(requires)g(increasingly)g(man)m
(y)f(dra)m(ws)g(as)f(the)h(n)m(um)m(b)s(er)h Fj(n)e Fn(of)g(bins)h
(increases,)i(unlik)m(e)0 4856 y(the)k(ro)s(ot-mean-square.)1901
5649 y(12)p eop end
%%Page: 13 13
TeXDict begin 13 12 bop 540 189 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 540 189 a 540 189 a
 currentpoint currentpoint translate .47 .47 scale neg exch neg exch translate

540 189 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 5040 @rwi @setspecial
%%BeginDocument: plot2.ps
%!PS-Adobe-2.0
%%Title: plot.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Tue Feb 22 13:40:54 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Feb 22 13:40:54 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1512 768 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
1512 1565 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 1565 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MRshow
1.000 UL
LTb
1512 2362 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 2362 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 40)]
] -80.0 MRshow
1.000 UL
LTb
1512 3158 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 3158 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 60)]
] -80.0 MRshow
1.000 UL
LTb
1512 3955 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 3955 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 80)]
] -80.0 MRshow
1.000 UL
LTb
1512 4752 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 4752 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MRshow
1.000 UL
LTb
1512 768 M
0 63 V
0 3921 R
0 -63 V
stroke
1512 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MCshow
1.000 UL
LTb
2416 768 M
0 63 V
0 3921 R
0 -63 V
stroke
2416 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 16)]
] -80.0 MCshow
1.000 UL
LTb
3320 768 M
0 63 V
0 3921 R
0 -63 V
stroke
3320 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 32)]
] -80.0 MCshow
1.000 UL
LTb
4224 768 M
0 63 V
0 3921 R
0 -63 V
stroke
4224 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 64)]
] -80.0 MCshow
1.000 UL
LTb
5128 768 M
0 63 V
0 3921 R
0 -63 V
stroke
5128 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 128)]
] -80.0 MCshow
1.000 UL
LTb
6032 768 M
0 63 V
0 3921 R
0 -63 V
stroke
6032 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 256)]
] -80.0 MCshow
1.000 UL
LTb
6936 768 M
0 63 V
0 3921 R
0 -63 V
stroke
6936 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 512)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1512 4752 N
0 -3984 V
5424 0 V
0 3984 V
-5424 0 V
Z stroke
LCb setrgbcolor
528 2760 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (percentage of successful rejections)]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
4224 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (number \(n\) of bins)]
] -80.0 MCshow
LTb
1.000 UP
4378 2083 M
[ [(Symbol) 240.0 0.0 true true 0 (c)]
[(Symbol) 192.0 120.0 true true 0 (2)]
] -104.0 MCshow
4378 2601 M
[ [(Helvetica) 240.0 0.0 true true 0 (G)]
[(Helvetica) 192.0 120.0 true true 0 (2)]
] -104.0 MCshow
2416 1724 M
[ [(Helvetica) 240.0 0.0 true true 0 (Freeman-Tukey)]
] -80.0 MCshow
4224 4593 M
[ [(Helvetica) 240.0 0.0 true true 0 (root-mean-square)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4716 CircleF
2416 4724 CircleF
3320 4728 CircleF
4224 4728 CircleF
5128 4732 CircleF
6032 4732 CircleF
6936 4732 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4716 M
904 8 V
904 4 V
904 0 V
904 4 V
904 0 V
904 0 V
1.000 UP
stroke
1.000 UL
LT2
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4473 CircleF
2416 3915 CircleF
3320 2959 CircleF
4224 1884 CircleF
5128 1206 CircleF
6032 947 CircleF
6936 868 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4473 M
904 -558 V
904 -956 V
4224 1884 L
904 -678 V
6032 947 L
904 -79 V
1.000 UP
stroke
1.000 UL
LT4
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4473 CircleF
2416 3995 CircleF
3320 3039 CircleF
4224 2441 CircleF
5128 2441 CircleF
6032 2322 CircleF
6936 1724 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4473 M
904 -478 V
904 -956 V
904 -598 V
904 0 V
904 -119 V
904 -598 V
1.000 UP
stroke
1.000 UL
LT6
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4473 CircleF
2416 3318 CircleF
3320 1804 CircleF
4224 1525 CircleF
5128 1923 CircleF
6032 3039 CircleF
6936 3358 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4473 M
2416 3318 L
3320 1804 L
904 -279 V
904 398 V
904 1116 V
904 319 V
stroke
1.000 UL
LTb
1512 4752 N
0 -3984 V
5424 0 V
0 3984 V
-5424 0 V
Z stroke
1.000 UP
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 540 189 a
 currentpoint currentpoint translate 1 .47 div 1 .47 div scale neg exch neg exch translate
 540 189 a 2514 189 a
 currentpoint grestore moveto
 2514 189
a 709 2336 a Fn(Fig.)32 b(3:)43 b(First)33 b(example)h(\(rate)e(of)g
(success\);)k(see)d(Subsection)i(6.1.)540 2931 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 540
2931 a 540 2931 a
 currentpoint currentpoint translate .47 .47 scale neg exch neg exch translate
 540 2931 a @beginspecial 50 @llx 50
@lly 554 @urx 770 @ury 5040 @rwi @setspecial
%%BeginDocument: plot.ps
%!PS-Adobe-2.0
%%Title: plot.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Fri Feb 18 16:43:18 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Feb 18 16:43:18 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1656 768 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
1656 1130 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 1130 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 200)]
] -80.0 MRshow
1.000 UL
LTb
1656 1492 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 1492 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 400)]
] -80.0 MRshow
1.000 UL
LTb
1656 1855 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 1855 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 600)]
] -80.0 MRshow
1.000 UL
LTb
1656 2217 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 2217 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 800)]
] -80.0 MRshow
1.000 UL
LTb
1656 2579 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 2579 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1000)]
] -80.0 MRshow
1.000 UL
LTb
1656 2941 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 2941 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1200)]
] -80.0 MRshow
1.000 UL
LTb
1656 3303 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 3303 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1400)]
] -80.0 MRshow
1.000 UL
LTb
1656 3665 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 3665 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1600)]
] -80.0 MRshow
1.000 UL
LTb
1656 4028 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 4028 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1800)]
] -80.0 MRshow
1.000 UL
LTb
1656 4390 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 4390 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2000)]
] -80.0 MRshow
1.000 UL
LTb
1656 4752 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 4752 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2200)]
] -80.0 MRshow
1.000 UL
LTb
1656 768 M
0 63 V
0 3921 R
0 -63 V
stroke
1656 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MCshow
1.000 UL
LTb
2536 768 M
0 63 V
0 3921 R
0 -63 V
stroke
2536 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 16)]
] -80.0 MCshow
1.000 UL
LTb
3416 768 M
0 63 V
0 3921 R
0 -63 V
stroke
3416 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 32)]
] -80.0 MCshow
1.000 UL
LTb
4296 768 M
0 63 V
0 3921 R
0 -63 V
stroke
4296 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 64)]
] -80.0 MCshow
1.000 UL
LTb
5176 768 M
0 63 V
0 3921 R
0 -63 V
stroke
5176 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 128)]
] -80.0 MCshow
1.000 UL
LTb
6056 768 M
0 63 V
0 3921 R
0 -63 V
stroke
6056 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 256)]
] -80.0 MCshow
1.000 UL
LTb
6936 768 M
0 63 V
0 3921 R
0 -63 V
stroke
6936 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 512)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1656 4752 N
0 -3984 V
5280 0 V
0 3984 V
-5280 0 V
Z stroke
LCb setrgbcolor
528 2760 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (required number \(m\) of draws)]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
4296 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (number \(n\) of bins)]
] -80.0 MCshow
LTb
1.000 UP
6056 2995 M
[ [(Symbol) 240.0 0.0 true true 0 (c)]
[(Symbol) 192.0 120.0 true true 0 (2)]
] -104.0 MCshow
6056 2380 M
[ [(Helvetica) 240.0 0.0 true true 0 (G)]
[(Helvetica) 192.0 120.0 true true 0 (2)]
] -104.0 MCshow
4296 985 M
[ [(Helvetica) 240.0 0.0 true true 0 (root-mean-square)]
] -80.0 MCshow
4296 2778 M
[ [(Helvetica) 240.0 0.0 true true 0 (Freeman-Tukey)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 1127 CircleF
2536 1107 CircleF
3416 1107 CircleF
4296 1099 CircleF
5176 1099 CircleF
6056 1099 CircleF
6936 1099 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 1127 M
880 -20 V
880 0 V
880 -8 V
880 0 V
880 0 V
880 0 V
1.000 UP
stroke
1.000 UL
LT2
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 1268 CircleF
2536 1389 CircleF
3416 1556 CircleF
4296 1789 CircleF
5176 2121 CircleF
6056 2773 CircleF
6936 3296 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 1268 M
880 121 V
880 167 V
880 233 V
880 332 V
880 652 V
880 523 V
1.000 UP
stroke
1.000 UL
LT4
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 1255 CircleF
2536 1376 CircleF
3416 1552 CircleF
4296 1802 CircleF
5176 2144 CircleF
6056 2545 CircleF
6936 2780 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 1255 M
880 121 V
880 176 V
880 250 V
880 342 V
880 401 V
880 235 V
1.000 UP
stroke
1.000 UL
LT6
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 1262 CircleF
2536 1396 CircleF
3416 1643 CircleF
4296 2032 CircleF
5176 2668 CircleF
6056 3569 CircleF
6936 4656 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 1262 M
880 134 V
880 247 V
880 389 V
880 636 V
880 901 V
880 1087 V
stroke
1.000 UL
LTb
1656 4752 N
0 -3984 V
5280 0 V
0 3984 V
-5280 0 V
Z stroke
1.000 UP
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 540 2931 a
 currentpoint currentpoint translate 1 .47 div 1 .47 div scale neg exch neg exch translate
 540 2931 a 2514 2931 a
 currentpoint grestore moveto
 2514 2931
a 549 5078 a Fn(Fig.)d(4:)43 b(First)33 b(example)h(\(statistical)g
(\\e\016ciency"\);)g(see)g(Subsection)g(6.1.)1901 5649
y(13)p eop end
%%Page: 14 14
TeXDict begin 14 13 bop 540 0 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 540 0 a 540 0 a
 currentpoint currentpoint translate .47 .47 scale neg exch neg exch translate
 540 0
a @beginspecial 50 @llx 50 @lly 554 @urx 770 @ury 5040
@rwi @setspecial
%%BeginDocument: plot3.ps
%!PS-Adobe-2.0
%%Title: plot.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Fri Feb 18 16:49:45 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Feb 18 16:49:45 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1512 768 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
1512 1266 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 1266 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MRshow
1.000 UL
LTb
1512 1764 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 1764 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MRshow
1.000 UL
LTb
1512 2262 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 2262 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 150)]
] -80.0 MRshow
1.000 UL
LTb
1512 2760 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 2760 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 200)]
] -80.0 MRshow
1.000 UL
LTb
1512 3258 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 3258 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 250)]
] -80.0 MRshow
1.000 UL
LTb
1512 3756 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 3756 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 300)]
] -80.0 MRshow
1.000 UL
LTb
1512 4254 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 4254 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 350)]
] -80.0 MRshow
1.000 UL
LTb
1512 4752 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 4752 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 400)]
] -80.0 MRshow
1.000 UL
LTb
1512 768 M
0 63 V
0 3921 R
0 -63 V
stroke
1512 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MCshow
1.000 UL
LTb
2416 768 M
0 63 V
0 3921 R
0 -63 V
stroke
2416 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 16)]
] -80.0 MCshow
1.000 UL
LTb
3320 768 M
0 63 V
0 3921 R
0 -63 V
stroke
3320 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 32)]
] -80.0 MCshow
1.000 UL
LTb
4224 768 M
0 63 V
0 3921 R
0 -63 V
stroke
4224 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 64)]
] -80.0 MCshow
1.000 UL
LTb
5128 768 M
0 63 V
0 3921 R
0 -63 V
stroke
5128 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 128)]
] -80.0 MCshow
1.000 UL
LTb
6032 768 M
0 63 V
0 3921 R
0 -63 V
stroke
6032 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 256)]
] -80.0 MCshow
1.000 UL
LTb
6936 768 M
0 63 V
0 3921 R
0 -63 V
stroke
6936 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 512)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1512 4752 N
0 -3984 V
5424 0 V
0 3984 V
-5424 0 V
Z stroke
LCb setrgbcolor
528 2760 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (required number \(m\) of draws)]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
4224 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (number \(n\) of bins)]
] -80.0 MCshow
LTb
1.000 UP
4224 2162 M
[ [(Symbol) 240.0 0.0 true true 0 (c)]
[(Symbol) 192.0 120.0 true true 0 (2)]
] -104.0 MCshow
4224 927 M
[ [(Helvetica) 240.0 0.0 true true 0 (root-mean-square)]
] -80.0 MCshow
6032 2362 M
[ [(Helvetica) 240.0 0.0 true true 0 (G)]
[(Helvetica) 192.0 120.0 true true 0 (2)]
] -104.0 MCshow
6032 1415 M
[ [(Helvetica) 240.0 0.0 true true 0 (Freeman-Tukey)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 1495 CircleF
2416 1266 CircleF
3320 1137 CircleF
4224 1067 CircleF
5128 1017 CircleF
6032 977 CircleF
6936 957 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 1495 M
904 -229 V
904 -129 V
904 -70 V
904 -50 V
904 -40 V
904 -20 V
1.000 UP
stroke
1.000 UL
LT2
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 1694 CircleF
2416 1595 CircleF
3320 1674 CircleF
4224 1913 CircleF
5128 2362 CircleF
6032 3119 CircleF
6936 4403 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 1694 M
904 -99 V
904 79 V
904 239 V
904 449 V
904 757 V
904 1284 V
1.000 UP
stroke
1.000 UL
LT4
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 1615 CircleF
2416 1425 CircleF
3320 1405 CircleF
4224 1525 CircleF
5128 1774 CircleF
6032 2172 CircleF
6936 2790 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 1615 M
904 -190 V
904 -20 V
904 120 V
904 249 V
904 398 V
904 618 V
1.000 UP
stroke
1.000 UL
LT6
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 1744 CircleF
2416 1415 CircleF
3320 1326 CircleF
4224 1395 CircleF
5128 1535 CircleF
6032 1774 CircleF
6936 2093 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 1744 M
904 -329 V
904 -89 V
904 69 V
904 140 V
904 239 V
904 319 V
stroke
1.000 UL
LTb
1512 4752 N
0 -3984 V
5424 0 V
0 3984 V
-5424 0 V
Z stroke
1.000 UP
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 540 0 a
 currentpoint currentpoint translate 1 .47 div 1 .47 div scale neg exch neg exch translate
 540 0 a 2514 0 a
 currentpoint grestore moveto
 2514 0 a 1022 2141
a Fn(Fig.)32 b(5:)43 b(Second)34 b(example;)g(see)g(Subsection)g(6.2.)0
2534 y Fh(6.2.)49 b(Se)-5 b(c)g(ond)34 b(example)146
2680 y Fn(Next,)g(let)f(us)g(sp)s(ecify)h(the)f(mo)s(del)g
(distribution)h(to)e(b)s(e)1774 2943 y Fj(p)1823 2958
y Fd(k)1893 2943 y Fn(=)2007 2875 y Fj(C)2077 2890 y
Fi(1)p 2007 2920 110 4 v 2034 3011 a Fj(k)3727 2943 y
Fn(\(28\))0 3188 y(for)g Fj(k)f Fn(=)c(1,)33 b(2,)f(.)16
b(.)g(.)g(,)34 b Fj(n)22 b Fe(\000)h Fn(1,)32 b Fj(n)p
Fn(,)h(where)1603 3347 y Fj(C)1673 3362 y Fi(1)1740 3347
y Fn(=)2032 3280 y(1)p 1854 3324 407 4 v 1854 3341 a
Fc(P)1959 3367 y Fd(n)1959 3445 y(k)r Fi(=1)2108 3416
y Fn(1)p Fj(=k)2270 3347 y(:)1430 b Fn(\(29\))0 3576
y(W)-8 b(e)33 b(consider)h Fj(m)f Fn(i.i.d.)g(dra)m(ws)h(from)e(the)h
(distribution)1782 3820 y(~)-57 b Fj(p)1823 3835 y Fd(k)1893
3820 y Fn(=)2007 3752 y Fj(C)2077 3767 y Fi(2)p 2007
3797 110 4 v 2015 3888 a Fj(k)2069 3859 y Fi(2)3727 3820
y Fn(\(30\))0 4065 y(for)32 b Fj(k)f Fn(=)c(1,)33 b(2,)f(.)16
b(.)g(.)g(,)34 b Fj(n)22 b Fe(\000)h Fn(1,)32 b Fj(n)p
Fn(,)h(where)1583 4324 y Fj(C)1653 4339 y Fi(2)1720 4324
y Fn(=)2032 4256 y(1)p 1834 4301 446 4 v 1834 4317 a
Fc(P)1939 4344 y Fd(n)1939 4421 y(k)r Fi(=1)2088 4392
y Fn(1)p Fj(=k)2240 4363 y Fi(2)2289 4324 y Fj(:)1411
b Fn(\(31\))146 4598 y(Figure)44 b(5)f(plots)g(the)h(n)m(um)m(b)s(er)h
Fj(m)e Fn(of)g(dra)m(ws)h(required)h(to)e(distinguish)i(the)f(actual)f
(distribution)0 4719 y(de\014ned)37 b(in)e(\(30\))g(and)h(\(31\))e
(from)i(the)f(mo)s(del)h(distribution)g(de\014ned)h(in)f(\(28\))f(and)g
(\(29\).)51 b(Remark)36 b(6.1)0 4839 y(ab)s(o)m(v)m(e)e(sp)s(eci\014es)
i(what)e(w)m(e)g(mean)h(b)m(y)f(\\distinguish.")48 b(Figure)33
b(5)g(sho)m(ws)i(that)f(the)g(classic)h Fj(\037)3490
4803 y Fi(2)3563 4839 y Fn(statistic)0 4960 y(requires)40
b(increasingly)g(man)m(y)g(dra)m(ws)f(as)g(the)f(n)m(um)m(b)s(er)i
Fj(n)f Fn(of)f(bins)h(increases,)j(while)d(the)g(ro)s(ot-mean-)0
5080 y(square)34 b(exhibits)g(the)f(opp)s(osite)g(b)s(eha)m(vior.)1901
5649 y(14)p eop end
%%Page: 15 15
TeXDict begin 15 14 bop 540 0 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 540 0 a 540 0 a
 currentpoint currentpoint translate .47 .47 scale neg exch neg exch translate
 540 0
a @beginspecial 50 @llx 50 @lly 554 @urx 770 @ury 5040
@rwi @setspecial
%%BeginDocument: plot4.ps
%!PS-Adobe-2.0
%%Title: plot.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Fri Feb 18 16:49:10 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Feb 18 16:49:10 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1512 768 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
1512 1337 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 1337 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MRshow
1.000 UL
LTb
1512 1906 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 1906 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MRshow
1.000 UL
LTb
1512 2475 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 2475 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 150)]
] -80.0 MRshow
1.000 UL
LTb
1512 3045 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 3045 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 200)]
] -80.0 MRshow
1.000 UL
LTb
1512 3614 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 3614 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 250)]
] -80.0 MRshow
1.000 UL
LTb
1512 4183 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 4183 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 300)]
] -80.0 MRshow
1.000 UL
LTb
1512 4752 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 4752 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 350)]
] -80.0 MRshow
1.000 UL
LTb
1512 768 M
0 63 V
0 3921 R
0 -63 V
stroke
1512 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MCshow
1.000 UL
LTb
2416 768 M
0 63 V
0 3921 R
0 -63 V
stroke
2416 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 16)]
] -80.0 MCshow
1.000 UL
LTb
3320 768 M
0 63 V
0 3921 R
0 -63 V
stroke
3320 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 32)]
] -80.0 MCshow
1.000 UL
LTb
4224 768 M
0 63 V
0 3921 R
0 -63 V
stroke
4224 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 64)]
] -80.0 MCshow
1.000 UL
LTb
5128 768 M
0 63 V
0 3921 R
0 -63 V
stroke
5128 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 128)]
] -80.0 MCshow
1.000 UL
LTb
6032 768 M
0 63 V
0 3921 R
0 -63 V
stroke
6032 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 256)]
] -80.0 MCshow
1.000 UL
LTb
6936 768 M
0 63 V
0 3921 R
0 -63 V
stroke
6936 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 512)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1512 4752 N
0 -3984 V
5424 0 V
0 3984 V
-5424 0 V
Z stroke
LCb setrgbcolor
528 2760 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (required number \(m\) of draws)]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
4224 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (number \(n\) of bins)]
] -80.0 MCshow
LTb
1.000 UP
3340 2714 M
[ [(Symbol) 240.0 0.0 true true 0 (c)]
[(Symbol) 192.0 120.0 true true 0 (2)]
] -104.0 MLshow
3320 1906 M
[ [(Helvetica) 240.0 0.0 true true 0 (root-mean-square)]
] -80.0 MCshow
4378 2703 M
[ [(Helvetica) 240.0 0.0 true true 0 (G)]
[(Helvetica) 192.0 120.0 true true 0 (2)]
] -104.0 MCshow
4224 4604 M
[ [(Helvetica) 240.0 0.0 true true 0 (Freeman-Tukey)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 3511 CircleF
2416 2714 CircleF
3320 2282 CircleF
4224 2009 CircleF
5128 1804 CircleF
6032 1701 CircleF
6936 1622 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 3511 M
904 -797 V
904 -432 V
904 -273 V
904 -205 V
904 -103 V
904 -79 V
1.000 UP
stroke
1.000 UL
LT2
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 3762 CircleF
2416 3010 CircleF
3320 2566 CircleF
4224 2168 CircleF
5128 1736 CircleF
6032 1394 CircleF
6936 1257 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 3762 M
904 -752 V
904 -444 V
904 -398 V
904 -432 V
904 -342 V
904 -137 V
1.000 UP
stroke
1.000 UL
LT4
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 3898 CircleF
2416 3249 CircleF
3320 2999 CircleF
4224 2578 CircleF
5128 1485 CircleF
6032 1201 CircleF
6936 1087 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 3898 M
904 -649 V
904 -250 V
904 -421 V
5128 1485 L
904 -284 V
904 -114 V
1.000 UP
stroke
1.000 UL
LT6
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4012 CircleF
2416 3784 CircleF
3320 4001 CircleF
4224 4467 CircleF
5128 4308 CircleF
6032 1349 CircleF
6936 1155 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4012 M
904 -228 V
904 217 V
904 466 V
904 -159 V
6032 1349 L
904 -194 V
stroke
1.000 UL
LTb
1512 4752 N
0 -3984 V
5424 0 V
0 3984 V
-5424 0 V
Z stroke
1.000 UP
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 540 0 a
 currentpoint currentpoint translate 1 .47 div 1 .47 div scale neg exch neg exch translate
 540 0 a 2514 0 a
 currentpoint grestore moveto
 2514 0 a 1049 2141
a Fn(Fig.)32 b(6:)44 b(Third)33 b(example;)h(see)g(Subsection)g(6.3.)0
2534 y Fh(6.3.)49 b(Thir)-5 b(d)34 b(example)146 2680
y Fn(Let)f(us)g(again)f(sp)s(ecify)i(the)f(mo)s(del)g(distribution)h
(to)e(b)s(e)1774 2943 y Fj(p)1823 2958 y Fd(k)1893 2943
y Fn(=)2007 2875 y Fj(C)2077 2890 y Fi(1)p 2007 2920
110 4 v 2034 3011 a Fj(k)3727 2943 y Fn(\(32\))0 3188
y(for)g Fj(k)f Fn(=)c(1,)33 b(2,)f(.)16 b(.)g(.)g(,)34
b Fj(n)22 b Fe(\000)h Fn(1,)32 b Fj(n)p Fn(,)h(where)1603
3347 y Fj(C)1673 3362 y Fi(1)1740 3347 y Fn(=)2032 3280
y(1)p 1854 3324 407 4 v 1854 3341 a Fc(P)1959 3367 y
Fd(n)1959 3445 y(k)r Fi(=1)2108 3416 y Fn(1)p Fj(=k)2270
3347 y(:)1430 b Fn(\(33\))0 3576 y(W)-8 b(e)33 b(no)m(w)g(consider)h
Fj(m)f Fn(i.i.d.)g(dra)m(ws)h(from)e(the)h(distribution)1747
3823 y(~)-57 b Fj(p)1788 3838 y Fd(k)1858 3823 y Fn(=)1972
3752 y Fj(C)2042 3768 y Fi(1)p Fd(=)p Fi(2)p 1972 3800
180 4 v 1993 3820 a Fe(p)p 2076 3820 55 4 v 85 x Fj(k)3727
3823 y Fn(\(34\))0 4093 y(for)32 b Fj(k)f Fn(=)c(1,)33
b(2,)f(.)16 b(.)g(.)g(,)34 b Fj(n)22 b Fe(\000)h Fn(1,)32
b Fj(n)p Fn(,)h(where)1526 4352 y Fj(C)1596 4367 y Fi(1)p
Fd(=)p Fi(2)1734 4352 y Fn(=)2068 4284 y(1)p 1847 4329
490 4 v 1847 4359 a Fc(P)1952 4385 y Fd(n)1952 4463 y(k)r
Fi(=1)2102 4434 y Fn(1)p Fj(=)2200 4349 y Fe(p)p 2283
4349 55 4 v 85 x Fj(k)2347 4352 y(:)1353 b Fn(\(35\))146
4640 y(Figure)44 b(6)f(plots)g(the)h(n)m(um)m(b)s(er)h
Fj(m)e Fn(of)g(dra)m(ws)h(required)h(to)e(distinguish)i(the)f(actual)f
(distribution)0 4760 y(de\014ned)37 b(in)e(\(34\))g(and)h(\(35\))e
(from)i(the)f(mo)s(del)h(distribution)g(de\014ned)h(in)f(\(32\))f(and)g
(\(33\).)51 b(Remark)36 b(6.1)0 4881 y(ab)s(o)m(v)m(e)27
b(sp)s(eci\014es)i(what)d(w)m(e)i(mean)f(b)m(y)g(\\distinguish.")43
b(The)27 b(ro)s(ot-mean-square)f(is)h(not)f(uniformly)i(more)0
5001 y(p)s(o)m(w)m(erful)34 b(than)e(the)h(other)g(statistics)h(in)f
(this)g(example;)h(see)g(Remark)f(6.2)f(b)s(elo)m(w.)1901
5649 y(15)p eop end
%%Page: 16 16
TeXDict begin 16 15 bop 481 0 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 481 0 a 481 0 a
 currentpoint currentpoint translate .47 .47 scale neg exch neg exch translate
 481 0
a @beginspecial 50 @llx 50 @lly 554 @urx 800 @ury 5040
@rwi @setspecial
%%BeginDocument: plot5.ps
%!PS-Adobe-2.0
%%Title: plot.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Mon Feb 21 16:52:41 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 800
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Feb 21 16:52:41 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1656 1008 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 1008 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
1656 1632 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 1632 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 200)]
] -80.0 MRshow
1.000 UL
LTb
1656 2256 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 2256 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 400)]
] -80.0 MRshow
1.000 UL
LTb
1656 2880 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 2880 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 600)]
] -80.0 MRshow
1.000 UL
LTb
1656 3504 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 3504 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 800)]
] -80.0 MRshow
1.000 UL
LTb
1656 4128 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 4128 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1000)]
] -80.0 MRshow
1.000 UL
LTb
1656 4752 M
63 0 V
5217 0 R
-63 0 V
stroke
1512 4752 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1200)]
] -80.0 MRshow
1.000 UL
LTb
1656 1008 M
0 63 V
0 3681 R
0 -63 V
stroke
1656 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.5)]
] -80.0 MCshow
1.000 UL
LTb
3416 1008 M
0 63 V
0 3681 R
0 -63 V
stroke
3416 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.625)]
] -80.0 MCshow
1.000 UL
LTb
5176 1008 M
0 63 V
0 3681 R
0 -63 V
stroke
5176 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.75)]
] -80.0 MCshow
1.000 UL
LTb
6936 1008 M
0 63 V
0 3681 R
0 -63 V
stroke
6936 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.875)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1656 4752 N
0 -3744 V
5280 0 V
0 3744 V
-5280 0 V
Z stroke
LCb setrgbcolor
528 2880 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (required number \(m\) of draws)]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
4296 408 M
[ [(Helvetica) 240.0 0.0 true true 0 (base \(t\) in the geometric distribution \(c)]
[(Helvetica) 192.0 -72.0 true true 0 (t)]
[(Helvetica) 240.0 0.0 true true 0 ( t)]
[(Helvetica) 192.0 120.0 true true 0 (1)]
[(Helvetica) 240.0 0.0 true true 0 (, c)]
[(Helvetica) 192.0 -72.0 true true 0 (t)]
[(Helvetica) 240.0 0.0 true true 0 ( t)]
[(Helvetica) 192.0 120.0 true true 0 (2)]
[(Helvetica) 240.0 0.0 true true 0 (, ..., c)]
[(Helvetica) 192.0 -72.0 true true 0 (t)]
[(Helvetica) 240.0 0.0 true true 0 ( t)]
[(Helvetica) 192.0 120.0 true true 0 (100)]
[(Helvetica) 240.0 0.0 true true 0 (\))]
] -80.0 MCshow
LTb
1.000 UP
4296 2911 M
[ [(Symbol) 240.0 0.0 true true 0 (c)]
[(Symbol) 192.0 120.0 true true 0 (2)]
] -104.0 MCshow
4296 1180 M
[ [(Helvetica) 240.0 0.0 true true 0 (root-mean-square)]
] -80.0 MCshow
4296 2100 M
[ [(Helvetica) 240.0 0.0 true true 0 (G)]
[(Helvetica) 192.0 120.0 true true 0 (2)]
] -104.0 MCshow
4296 1679 M
[ [(Helvetica) 240.0 0.0 true true 0 (Freeman-Tukey)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 1457 CircleF
3416 1354 CircleF
5176 1298 CircleF
6936 1314 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 1457 M
3416 1354 L
1760 -56 V
1760 16 V
1.000 UP
stroke
1.000 UL
LT2
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 4225 CircleF
3416 3011 CircleF
5176 2340 CircleF
6936 1947 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 4225 M
3416 3011 L
5176 2340 L
6936 1947 L
1.000 UP
stroke
1.000 UL
LT4
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 2365 CircleF
3416 2053 CircleF
5176 1844 CircleF
6936 1704 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 2365 M
3416 2053 L
5176 1844 L
6936 1704 L
1.000 UP
stroke
1.000 UL
LT6
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 2116 CircleF
3416 1938 CircleF
5176 1782 CircleF
6936 1688 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1656 2116 M
3416 1938 L
5176 1782 L
1760 -94 V
stroke
1.000 UL
LTb
1656 4752 N
0 -3744 V
5280 0 V
0 3744 V
-5280 0 V
Z stroke
1.000 UP
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 481 0 a
 currentpoint currentpoint translate 1 .47 div 1 .47 div scale neg exch neg exch translate
 481 0 a 2455 0 a
 currentpoint grestore moveto
 2455 0 a 1027 2141
a Fn(Fig.)32 b(7:)43 b(F)-8 b(ourth)32 b(example;)i(see)g(Subsection)g
(6.4.)0 2534 y Fh(6.4.)49 b(F)-7 b(ourth)35 b(example)146
2680 y Fn(W)-8 b(e)46 b(turn)g(no)m(w)g(to)f(mo)s(dels)i(in)m(v)m
(olving)g(parameter)f(estimation)g(\(for)f(details,)50
b(see)c([8]\).)83 b(Let)45 b(us)0 2800 y(sp)s(ecify)34
b(the)f(mo)s(del)g(distribution)h(to)e(b)s(e)h(the)g(Zipf)f
(distribution)1712 3063 y Fj(p)1761 3078 y Fd(k)1804
3063 y Fn(\()p Fj(\022)s Fn(\))c(=)2069 2996 y Fj(C)2139
3011 y Fd(\022)p 2069 3040 109 4 v 2077 3131 a Fj(k)2131
3102 y Fd(\022)3727 3063 y Fn(\(36\))0 3308 y(for)k Fj(k)f
Fn(=)c(1,)33 b(2,)f(.)16 b(.)g(.)g(,)34 b(99,)e(100,)g(where)1584
3468 y Fj(C)1654 3483 y Fd(\022)1720 3468 y Fn(=)2032
3400 y(1)p 1834 3445 446 4 v 1834 3473 a Fc(P)1939 3499
y Fi(100)1939 3577 y Fd(k)r Fi(=1)2088 3548 y Fn(1)p
Fj(=k)2240 3519 y Fd(\022)2289 3468 y Fn(;)1411 b(\(37\))0
3714 y(w)m(e)28 b(estimate)h(the)f(parameter)g Fj(\022)i
Fn(via)e(maxim)m(um-lik)m(eliho)s(o)s(d)h(metho)s(ds)f(\(see)h([8]\).)
41 b(W)-8 b(e)28 b(consider)h Fj(m)e Fn(i.i.d.)0 3834
y(dra)m(ws)34 b(from)e(the)h(\(truncated\))g(geometric)h(distribution)
1764 4054 y(~)-57 b Fj(p)1805 4069 y Fd(k)1875 4054 y
Fn(=)27 b Fj(c)2020 4069 y Fd(t)2067 4054 y Fj(t)2102
4013 y Fd(k)3727 4054 y Fn(\(38\))0 4274 y(for)32 b Fj(k)f
Fn(=)c(1,)33 b(2,)f(.)16 b(.)g(.)g(,)34 b(99,)e(100,)g(where)1659
4434 y Fj(c)1701 4449 y Fd(t)1758 4434 y Fn(=)2013 4366
y(1)p 1872 4411 333 4 v 1872 4439 a Fc(P)1977 4465 y
Fi(100)1977 4543 y Fd(k)r Fi(=1)2126 4514 y Fj(t)2161
4485 y Fd(k)2214 4434 y Fn(;)1486 b(\(39\))0 4674 y(Figure)33
b(7)f(considers)i(sev)m(eral)g(v)-5 b(alues)34 b(for)e
Fj(t)p Fn(.)146 4795 y(Figure)44 b(7)f(plots)g(the)h(n)m(um)m(b)s(er)h
Fj(m)e Fn(of)g(dra)m(ws)h(required)h(to)e(distinguish)i(the)f(actual)f
(distribution)0 4915 y(de\014ned)30 b(in)e(\(38\))g(and)g(\(39\))g
(from)g(the)h(mo)s(del)g(distribution)g(de\014ned)h(in)f(\(36\))e(and)i
(\(37\),)f(estimating)i(the)0 5036 y(parameter)j Fj(\022)j
Fn(in)d(\(36\))f(and)h(\(37\))f(via)h(maxim)m(um-lik)m(eliho)s(o)s(d)h
(metho)s(ds.)45 b(Remark)33 b(6.1)f(ab)s(o)m(v)m(e)i(sp)s(eci\014es)0
5156 y(what)f(w)m(e)g(mean)h(b)m(y)f(\\distinguish.")1901
5649 y(16)p eop end
%%Page: 17 17
TeXDict begin 17 16 bop 540 0 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch neg exch translate
 540 0 a 540 0 a
 currentpoint currentpoint translate .47 .47 scale neg exch neg exch translate
 540 0
a @beginspecial 50 @llx 50 @lly 554 @urx 770 @ury 5040
@rwi @setspecial
%%BeginDocument: plot6.ps
%!PS-Adobe-2.0
%%Title: plot.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sat Feb 12 15:45:29 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Mark,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Feb 12 15:45:29 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1512 1008 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 1008 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
1512 1944 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 1944 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MRshow
1.000 UL
LTb
1512 2880 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 2880 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MRshow
1.000 UL
LTb
1512 3816 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 3816 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 150)]
] -80.0 MRshow
1.000 UL
LTb
1512 4752 M
63 0 V
5361 0 R
-63 0 V
stroke
1368 4752 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 200)]
] -80.0 MRshow
1.000 UL
LTb
1512 1008 M
0 63 V
0 3681 R
0 -63 V
stroke
1512 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MCshow
1.000 UL
LTb
3320 1008 M
0 63 V
0 3681 R
0 -63 V
stroke
3320 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1.25)]
] -80.0 MCshow
1.000 UL
LTb
5128 1008 M
0 63 V
0 3681 R
0 -63 V
stroke
5128 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1.5)]
] -80.0 MCshow
1.000 UL
LTb
6936 1008 M
0 63 V
0 3681 R
0 -63 V
stroke
6936 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1.75)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1512 4752 N
0 -3744 V
5424 0 V
0 3744 V
-5424 0 V
Z stroke
LCb setrgbcolor
528 2880 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (required number \(m\) of draws)]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
4224 408 M
[ [(Helvetica) 240.0 0.0 true true 0 (power \(t\) in the Zipf distribution \(C)]
[(Helvetica) 192.0 -72.0 true true 0 (t)]
[(Helvetica) 240.0 0.0 true true 0 (/1)]
[(Helvetica) 192.0 120.0 true true 0 (t)]
[(Helvetica) 240.0 0.0 true true 0 (, C)]
[(Helvetica) 192.0 -72.0 true true 0 (t)]
[(Helvetica) 240.0 0.0 true true 0 (/2)]
[(Helvetica) 192.0 120.0 true true 0 (t)]
[(Helvetica) 240.0 0.0 true true 0 (, ..., C)]
[(Helvetica) 192.0 -72.0 true true 0 (t)]
[(Helvetica) 240.0 0.0 true true 0 (/100)]
[(Helvetica) 192.0 120.0 true true 0 (t)]
[(Helvetica) 240.0 0.0 true true 0 (\))]
] -80.0 MCshow
LTb
1.000 UP
4224 3835 M
[ [(Symbol) 240.0 0.0 true true 0 (c)]
[(Symbol) 192.0 120.0 true true 0 (2)]
] -104.0 MCshow
4224 1963 M
[ [(Helvetica) 240.0 0.0 true true 0 (root-mean-square)]
] -80.0 MCshow
4224 2543 M
[ [(Helvetica) 240.0 0.0 true true 0 (G)]
[(Helvetica) 192.0 120.0 true true 0 (2)]
] -104.0 MCshow
4224 2936 M
[ [(Helvetica) 240.0 0.0 true true 0 (Freeman-Tukey)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 2899 CircleF
3320 2187 CircleF
5128 2075 CircleF
6936 2337 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 2899 M
3320 2187 L
5128 2075 L
1808 262 V
1.000 UP
stroke
1.000 UL
LT2
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 3348 CircleF
3320 3872 CircleF
5128 3367 CircleF
6936 2992 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 3348 M
1808 524 V
5128 3367 L
6936 2992 L
1.000 UP
stroke
1.000 UL
LT4
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 3198 CircleF
3320 2449 CircleF
5128 2356 CircleF
6936 2580 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 3198 M
3320 2449 L
1808 -93 V
1808 224 V
1.000 UP
stroke
1.000 UL
LT6
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4359 CircleF
3320 3217 CircleF
5128 3011 CircleF
6936 3311 CircleF
2.000 UL
LT0
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
1512 4359 M
3320 3217 L
5128 3011 L
1808 300 V
stroke
1.000 UL
LTb
1512 4752 N
0 -3744 V
5424 0 V
0 3744 V
-5424 0 V
Z stroke
1.000 UP
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 540 0 a
 currentpoint currentpoint translate 1 .47 div 1 .47 div scale neg exch neg exch translate
 540 0 a 2514 0 a
 currentpoint grestore moveto
 2514 0 a 1065 2141
a Fn(Fig.)32 b(8:)43 b(Fifth)32 b(example;)j(see)e(Subsection)i(6.5.)0
2511 y Fh(6.5.)49 b(Fifth)35 b(example)146 2639 y Fn(The)e(mo)s(del)e
(for)g(our)g(\014nal)h(example)h(in)m(v)m(olv)m(es)h(parameter)e
(estimation,)h(to)s(o)d(\(for)h(details,)h(see)h([8]\).)0
2759 y(Let)g(us)g(sp)s(ecify)h(the)f(mo)s(del)g(distribution)h(to)e(b)s
(e)1539 2939 y Fj(p)1588 2954 y Fd(k)1630 2939 y Fn(\()p
Fj(\022)s Fn(\))c(=)g Fj(\022)1934 2897 y Fd(k)r Fm(\000)p
Fi(1)2067 2939 y Fn(\(1)22 b Fe(\000)g Fj(\022)s Fn(\))1366
b(\(40\))0 3118 y(for)32 b Fj(k)f Fn(=)c(1,)33 b(2,)f(.)16
b(.)g(.)g(,)34 b(98,)e(99,)g(and)1668 3238 y Fj(p)1717
3253 y Fi(100)1827 3238 y Fn(\()p Fj(\022)s Fn(\))c(=)f
Fj(\022)2130 3197 y Fi(99)2205 3238 y Fn(;)1495 b(\(41\))0
3395 y(w)m(e)28 b(estimate)h(the)f(parameter)g Fj(\022)i
Fn(via)e(maxim)m(um-lik)m(eliho)s(o)s(d)h(metho)s(ds)f(\(see)h([8]\).)
41 b(W)-8 b(e)28 b(consider)h Fj(m)e Fn(i.i.d.)0 3516
y(dra)m(ws)34 b(from)e(the)h(Zipf)f(distribution)1787
3679 y(~)-57 b Fj(p)1828 3694 y Fd(k)1898 3679 y Fn(=)2012
3611 y Fj(C)2082 3626 y Fd(t)p 2012 3656 100 4 v 2020
3747 a Fj(k)2074 3718 y Fd(t)3727 3679 y Fn(\(42\))0
3861 y(for)32 b Fj(k)f Fn(=)c(1,)33 b(2,)f(.)16 b(.)g(.)g(,)34
b(99,)e(100,)g(where)1593 4020 y Fj(C)1663 4035 y Fd(t)1720
4020 y Fn(=)2027 3953 y(1)p 1834 3997 436 4 v 1834 4026
a Fc(P)1939 4052 y Fi(100)1939 4130 y Fd(k)r Fi(=1)2088
4101 y Fn(1)p Fj(=k)2240 4072 y Fd(t)2280 4020 y Fn(;)1420
b(\(43\))0 4244 y(Figure)33 b(8)f(considers)i(sev)m(eral)g(v)-5
b(alues)34 b(for)e Fj(t)p Fn(.)146 4364 y(Figure)44 b(8)f(plots)g(the)h
(n)m(um)m(b)s(er)h Fj(m)e Fn(of)g(dra)m(ws)h(required)h(to)e
(distinguish)i(the)f(actual)f(distribution)0 4484 y(de\014ned)30
b(in)e(\(42\))g(and)g(\(43\))g(from)g(the)h(mo)s(del)g(distribution)g
(de\014ned)h(in)f(\(40\))e(and)i(\(41\),)f(estimating)i(the)0
4605 y(parameter)j Fj(\022)j Fn(in)d(\(40\))f(and)h(\(41\))f(via)h
(maxim)m(um-lik)m(eliho)s(o)s(d)h(metho)s(ds.)45 b(Remark)33
b(6.1)f(ab)s(o)m(v)m(e)i(sp)s(eci\014es)0 4725 y(what)f(w)m(e)g(mean)h
(b)m(y)f(\\distinguish.")0 4894 y Fk(Remark)40 b(6.2.)i
Fn(The)35 b(ro)s(ot-mean-square)g(statistic)g(is)f(not)g(v)m(ery)i
(sensitiv)m(e)h(to)d(relativ)m(e)h(discrepancies)0 5014
y(b)s(et)m(w)m(een)c(the)f(mo)s(del)g(and)g(actual)f(distributions)i
(in)f(bins)g(whose)g(asso)s(ciated)h(mo)s(del)e(probabilities)i(are)0
5134 y(small.)43 b(When)31 b(sensitivit)m(y)i(in)e(these)g(bins)g(is)f
(desirable,)i(w)m(e)f(recommend)h(using)f(b)s(oth)f(the)g(ro)s
(ot-mean-)0 5255 y(square)e(statistic)f(de\014ned)i(in)d(\(2\))h(and)f
(an)h(asymptotically)h(equiv)-5 b(alen)m(t)29 b(v)-5
b(ariation)26 b(of)g Fj(\037)3244 5219 y Fi(2)3310 5255
y Fn(de\014ned)i(in)f(\(3\),)0 5375 y(suc)m(h)34 b(as)f(the)g
(\(log\)lik)m(eliho)s(o)s(d-ratio)f(or)g(\\)p Fj(G)1631
5339 y Fi(2)1670 5375 y Fn(")g(test;)i(see,)g(for)e(example,)i([1].)
1901 5649 y(17)p eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 100 a Fk(7.)56 b(Conclusions)39
b(and)f(generalizations)146 295 y Fn(This)43 b(pap)s(er)e(pro)m(vides)i
(e\016cien)m(t)h(blac)m(k-b)s(o)m(x)e(algorithms)g(for)f(computing)h
(the)g(con\014dence)h(lev)m(els)0 415 y(for)31 b(one)h(of)f(the)h(most)
g(natural)g(go)s(o)s(dness-of-\014t)e(statistics,)k(in)d(the)i(limit)f
(of)f(large)g(n)m(um)m(b)s(ers)j(of)d(dra)m(ws.)0 535
y(As)39 b(men)m(tioned)i(brie\015y)f(ab)s(o)m(v)m(e)f(\(in)g(Remark)h
(2.3\),)f(our)g(metho)s(ds)h(can)f(handle)g(mo)s(del)g(distributions)0
656 y(sp)s(eci\014ed)e(via)f(the)f(m)m(ultinomial)h(maxim)m(um-lik)m
(eliho)s(o)s(d)i(estimation)e(of)e(parameters)j(from)e(the)g(data;)0
776 y(for)f(details,)i(see)g([8].)50 b(Moreo)m(v)m(er,)37
b(w)m(e)f(can)f(handle)g(mo)s(del)g(distributions)i(with)e
(in\014nitely)h(man)m(y)g(bins;)0 897 y(for)41 b(details,)j(see)f
(Observ)-5 b(ation)42 b(1)f(in)g(Section)h(4)f(of)g([8].)70
b(F)-8 b(urthermore,)44 b(w)m(e)e(can)g(handle)g(arbitrarily)0
1017 y(w)m(eigh)m(ted)24 b(means)e(in)g(the)h(ro)s(ot-mean-square,)h
(in)e(addition)f(to)h(the)g(usual,)j(uniformly)d(w)m(eigh)m(ted)i(a)m
(v)m(erage)0 1137 y(considered)51 b(ab)s(o)m(v)m(e.)92
b(Finally)-8 b(,)53 b(com)m(bining)d(our)e(metho)s(ds)i(and)e(the)i
(statistical)f(b)s(o)s(otstrap)f(should)0 1258 y(pro)s(duce)34
b(a)f(test)h(for)e(whether)j(t)m(w)m(o)f(separate)g(sets)g(of)f(dra)m
(ws)h(arise)g(from)f(the)h(same)g(or)f(from)g(di\013eren)m(t)0
1378 y(distributions,)42 b(when)f(eac)m(h)f(set)g(is)g(tak)m(en)g
(i.i.d.)g(from)e(some)i(\(unsp)s(eci\014ed\))i(distribution)e(asso)s
(ciated)0 1499 y(with)33 b(the)g(set)g(\(see,)h(for)e(example,)i
([13]\).)146 1619 y(The)i(natural)e(statistic)i(has)e(man)m(y)i(adv)-5
b(an)m(tages)35 b(o)m(v)m(er)g(more)g(standard)g Fj(\037)2934
1583 y Fi(2)3008 1619 y Fn(tests,)h(as)f(forthcoming)0
1739 y(pap)s(ers)27 b(will)g(demonstrate.)42 b(The)27
b(classic)h Fj(\037)1626 1703 y Fi(2)1692 1739 y Fn(statistic)f(for)f
(go)s(o)s(dness-of-\014t,)g(and)h(esp)s(ecially)h(v)-5
b(ariations)0 1860 y(suc)m(h)32 b(as)f(the)g(\(log\)lik)m(eliho)s(o)s
(d-ratio,)g(\\)p Fj(G)1532 1824 y Fi(2)1571 1860 y Fn(,")g(and)f(p)s(o)
m(w)m(er-div)m(ergence)k(statistics)e(\(see)g([1]\),)f(can)g(b)s(e)f
(sen-)0 1980 y(sible)g(supplemen)m(ts,)i(but)c(are)h(not)f(go)s(o)s(d)f
(alternativ)m(es)j(when)g(used)f(alone.)42 b(With)29
b(the)g(no)m(w)g(widespread)0 2100 y(a)m(v)-5 b(ailabilit)m(y)33
b(of)f(computers,)i(calculating)e(signi\014cance)i(lev)m(els)h(via)d
(Mon)m(te)h(Carlo)f(sim)m(ulations)i(for)e(the)0 2221
y(more)40 b(natural)g(statistic)h(of)f(the)g(presen)m(t)i(article)f
(can)f(b)s(e)g(feasible;)45 b(the)c(algorithms)f(of)g(the)g(presen)m(t)
0 2341 y(pap)s(er)33 b(can)g(also)f(b)s(e)h(suitable,)h(and)e(are)h
(e\016cien)m(t)h(and)f(easy-to-use.)0 2611 y Fk(Ac)m(kno)m(wledgemen)m
(ts)146 2806 y Fn(W)-8 b(e)25 b(w)m(ould)g(lik)m(e)h(to)d(thank)i(T)-8
b(on)m(y)25 b(Cai,)i(Jianqing)d(F)-8 b(an,)26 b(P)m(eter)f(W.)g(Jones,)
i(Ron)c(P)m(eled,)28 b(and)c(Vladimir)0 2927 y(Rokhlin)39
b(for)f(man)m(y)h(helpful)h(discussions.)64 b(W)-8 b(e)39
b(w)m(ould)g(lik)m(e)h(to)e(thank)h(the)g(anon)m(ymous)h(referees)f
(for)0 3047 y(their)47 b(helpful)h(suggestions.)87 b(William)47
b(P)m(erkins)h(w)m(as)g(supp)s(orted)f(in)g(part)g(b)m(y)g(NSF)g(Gran)m
(t)f(OISE-)0 3167 y(0730136.)62 b(Mark)40 b(T)m(ygert)h(w)m(as)f(supp)s
(orted)h(in)e(part)h(b)m(y)g(an)f(Alfred)h(P)-8 b(.)40
b(Sloan)f(Researc)m(h)i(F)-8 b(ello)m(wship.)0 3288 y(Rac)m(hel)33
b(W)-8 b(ard)33 b(w)m(as)g(supp)s(orted)h(in)f(part)f(b)m(y)i(an)e(NSF)
h(P)m(ostdo)s(ctoral)f(Researc)m(h)i(F)-8 b(ello)m(wship.)1901
5649 y(18)p eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 100 a Fk(References)42 274
y Ff([1])48 b(C.)25 b(R.)g(Rao,)32 b(Karl)23 b(P)n(earson)f(c)n
(hi-square)h(test:)36 b(The)25 b(da)n(wn)f(of)h(statistical)f
(inference,)32 b(in:)k(C.)25 b(Hub)r(er-Carol,)f(N.)h(Bal-)178
374 y(akrishnan,)34 b(M.)h(S.)f(Nikulin,)i(M.)e(Mesbah)g(\(Eds.\),)i
(Go)r(o)r(dness-of-Fit)d(T)-7 b(ests)34 b(and)g(Mo)r(del)g(V)-7
b(alidit)n(y)g(,)36 b(Birkh\177)-42 b(auser,)178 473
y(Boston,)27 b(2002,)e(pp.)j(9{24.)42 573 y([2])48 b(S.)26
b(R.)f(S.)h(V)-7 b(aradhan,)25 b(M.)g(Lev)-5 b(ando)n(wsky)e(,)25
b(N.)g(Rubin,)i(Mathematical)e(Statistics,)h(Lecture)f(Notes)g(Series,)
g(Couran)n(t)178 672 y(Institute)j(of)g(Mathematical)f(Sciences,)g
(NYU,)i(New)f(Y)-7 b(ork,)27 b(1974.)42 772 y([3])48
b(K.)36 b(P)n(earson,)64 b(On)37 b(the)g(criterion)e(that)i(a)g(giv)n
(en)f(system)g(of)h(deviations)f(from)g(the)h(probable)f(in)h(the)g
(case)f(of)g(a)178 872 y(correlated)28 b(system)i(of)h(v)-5
b(ariables)29 b(is)h(suc)n(h)g(that)g(it)h(can)f(b)r(e)h(reasonably)d
(supp)r(osed)i(to)g(ha)n(v)n(e)f(arisen)g(from)h(random)178
971 y(sampling,)36 b(Philosophical)26 b(Magazine,)g(Series)h(5,)h(50)e
(\(1900\))h(157{175.)42 1071 y([4])48 b(D.)27 b(S.)f(Mo)r(ore,)g(M.)g
(C.)h(Spruill,)35 b(Uni\014ed)26 b(large-sample)e(theory)i(of)g
(general)f(c)n(hi-squared)f(statistics)i(for)g(tests)g(of)h(\014t,)178
1171 y(Ann.)h(Statist.)g(3)f(\(1975\))g(599{616.)42 1270
y([5])48 b(M.)30 b(G.)g(Kendall,)g(A.)h(Stuart,)f(K.)g(Ord,)g(S.)g
(Arnold,)g(Kendall's)g(Adv)-5 b(anced)30 b(Theory)f(of)h(Statistics,)g
(v)n(olume)g(1)f(and)178 1370 y(2A,)e(Wiley)-7 b(,)28
b(6th)g(edition,)g(2009.)42 1469 y([6])48 b(M.)25 b(Gu,)g(S.)g(C.)f
(Eisenstat,)32 b(A)25 b(stable)f(and)g(e\016cien)n(t)h(algorithm)e(for)
h(the)h(rank-one)e(mo)r(di\014cation)h(of)h(the)f(symmetric)178
1569 y(eigenproblem,)36 b(SIAM)28 b(J.)f(Matrix)g(Anal.)h(Appl.)g(15)f
(\(1994\))f(1266{1276.)42 1669 y([7])48 b(M.)31 b(Gu,)h(S.)f(C.)g
(Eisenstat,)46 b(A)31 b(divide-and-conquer)e(algorithm)h(for)g(the)h
(symmetric)g(tridiagonal)e(eigenproblem,)178 1768 y(SIAM)f(J.)f(Matrix)
g(Anal.)h(Appl.)g(16)f(\(1995\))f(172{191.)42 1868 y([8])48
b(W.)41 b(P)n(erkins,)i(M.)e(T)n(ygert,)j(R.)d(W)-7 b(ard,)44
b(Computing)d(the)g(con\014dence)g(lev)n(els)f(for)g(a)h(ro)r
(ot-mean-square)d(test)j(of)178 1968 y(go)r(o)r(dness-of-\014t,)26
b(I)r(I,)i(T)-7 b(ec)n(hnical)27 b(Rep)r(ort)g(1009.2260,)d(arXiv,)j
(2010.)42 2067 y([9])48 b(W.)32 b(Press,)f(S.)h(T)-7
b(euk)n(olsky)g(,)32 b(W.)g(V)-7 b(etterling,)33 b(B.)e(Flannery)-7
b(,)32 b(Numerical)g(Recip)r(es,)g(Cam)n(bridge)f(Univ)n(ersit)n(y)g
(Press,)178 2167 y(Cam)n(bridge,)26 b(UK,)i(3rd)f(edition,)g(2007.)0
2267 y([10])48 b(S.)34 b(O.)g(Rice,)57 b(Distribution)34
b(of)g(quadratic)f(forms)g(in)h(normal)f(random)g(v)-5
b(ariables)33 b(|)g(Ev)-5 b(aluation)33 b(b)n(y)h(n)n(umerical)178
2366 y(in)n(tegration,)h(SIAM)29 b(J.)e(Sci.)h(Stat.)g(Comput.)g(1)f
(\(1980\))f(438{448.)0 2466 y([11])48 b(P)-7 b(.)27 b(Duc)n(hesne,)h(P)
-7 b(.)27 b(L.)g(de)h(Mic)n(heaux,)35 b(Computing)28
b(the)g(distribution)f(of)g(quadratic)g(forms:)36 b(Further)27
b(comparisons)178 2565 y(b)r(et)n(w)n(een)22 b(the)g(Liu-Tang-Zhang)e
(appro)n(ximation)g(and)i(exact)f(metho)r(ds,)29 b(Comput.)22
b(Statist.)h(Data)e(Anal.)h(54)f(\(2010\))178 2665 y(858{862.)0
2765 y([12])48 b(G.)41 b(H.)f(Golub,)k(C.)c(F.)h(V)-7
b(an)40 b(Loan,)j(Matrix)d(Computations,)j(Johns)d(Hopkins)g(Univ)n
(ersit)n(y)f(Press,)j(Baltimore,)178 2864 y(Maryland,)26
b(3rd)h(edition,)h(1996.)0 2964 y([13])48 b(B.)27 b(Efron,)g(R.)h
(Tibshirani,)f(An)h(in)n(tro)r(duction)g(to)f(the)h(b)r(o)r(otstrap,)f
(Chapman)g(&)h(Hall/CR)n(C)e(Press,)h(Bo)r(ca)f(Raton,)178
3064 y(Florida,)h(1993.)1901 5649 y Fn(19)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
